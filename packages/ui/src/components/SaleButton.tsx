// This Sale button working with coupon code.
// It is not used now, but it can be used in future.
// Coupon stored in url. And going to course page with coupon code.
 
import { Paragraph, YStack, AlertDialog, Button, XStack, AlertDialogContent } from "tamagui";
import React,{useEffect, useState} from "react";
import { useRouter } from "next/router";
import { ParagraphCustom } from './CustomText'

interface SaleButtonProps {
  isOpen: boolean;
}

export function SaleButton({ isOpen: initialIsOpen }: SaleButtonProps) {
  const [isOpen, setIsOpen] = useState(initialIsOpen);
  const sale = process.env.NEXT_PUBLIC_SECRET_SALE;
  if (!sale) 
    return null;
  const router = useRouter();

  const handleOnClick = () => {
    const queryParams = new URLSearchParams({
      coupon: sale.toString(),
    }).toString();
    router.push(`/course?${queryParams}`);
    setIsOpen(false);
  };

  useEffect(() => {
    setIsOpen(initialIsOpen);
  }, [initialIsOpen]);
  
  return (
    <AlertDialog native open={isOpen}>
    <AlertDialog.Trigger asChild>
      <Button zIndex={100_000} style={{ position: 'fixed', bottom: '50px', right: '10px'}} onPress={() => setIsOpen(true)}>–°–∫–∏–¥–∫–∞</Button>
    </AlertDialog.Trigger>
    <AlertDialog.Portal>
      <AlertDialog.Overlay
        key="overlay"
        animation="quick"
        style={{ opacity: 0.3 }}
        enterStyle={{ opacity: 0 }}
      />
      <AlertDialog.Content
        bordered
        elevate
        key="content"
        animation={[
          'quick',
          {
            opacity: {
              overshootClamping: true,
            },
          },
        ]}
        enterStyle={{ x: 0, y: -20, opacity: 0, scale: 0.9 }}
        exitStyle={{ x: 0, y: 10, opacity: 0, scale: 0.95 }}
        x={0}
        scale={1}
        opacity={1}
        y={0}
        maw='80%'
      >
        <YStack space>
          <AlertDialog.Title>–í–Ω–∏–º–∞–Ω–∏–µ! –í–Ω–∏–º–∞–Ω–∏–µ! </AlertDialog.Title>
          <AlertDialog.Description>
            –¢–æ–ª—å–∫–æ –¥–æ 9 —è–Ω–≤–∞—Ä—è!
          </AlertDialog.Description>
          
            <ParagraphCustom text="–ü–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 31% –Ω–∞ –∫—É—Ä—Å –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–æ–≥–æ –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ –≤ —á–µ—Å—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤! üí∏üéâ" />
            <ParagraphCustom text="üí¨ –ü–æ–∫–∞ –≤—Å–µ –ø–ª–∞–Ω–∏—Ä—É—é—Ç –±—Ä–æ—Å–∏—Ç—å –∫—É—Ä–∏—Ç—å –∏–ª–∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º, –ø–æ–¥–Ω–∏–º–∞–π—Ç–µ –ø–ª–∞–Ω–∫—É ‚Äì –ø–æ—Ä–∞ –≤—ã—É—á–∏—Ç—å –∏—Å–ø–∞–Ω—Å–∫–∏–π –∏ –Ω–∞—á–∞—Ç—å –≤–ª–∏–≤–∞—Ç—å—Å—è –≤ –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫—É—é —Å—Ä–µ–¥—É! üéÅ‚ú®" />
            <ParagraphCustom text="^–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ PAPANOEL –≤ –º–æ–º–µ–Ω—Ç –ø–æ–∫—É–ø–∫–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 31% –Ω–∞ –∫—É—Ä—Å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã—Å—Ç—Ä–æ–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ –≤–∞—à–µ–π –≥–æ–ª–æ–≤–µ. üöÄüéÖüèΩ^" />
            <ParagraphCustom text="–ü—Ä–µ–≤—Ä–∞—â–∞–π—Ç–µ –º–µ—á—Ç—ã –≤ —Ü–µ–ª–∏! –°—Ç–∞–Ω—å—Ç–µ —è–∑—ã–∫–æ–≤—ã–º –º–∞–≥–æ–º –≤ —ç—Ç–æ—Ç –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Å–µ–∑–æ–Ω!üßôüèªüßùüèæ‚Äç‚ôÄÔ∏è" />
          

            {/*<Paragraph mt="$2">–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∫–∏–¥–∫–æ–π, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ {sale} –∏ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–ø–ª–∞—Ç—ã, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞–≤ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ.</Paragraph>*/}
          <XStack space="$3" justifyContent="flex-end">
            <AlertDialog.Cancel asChild>
              <Button onPress={() => setIsOpen(false)}>–ó–∞–∫—Ä—ã—Ç—å</Button>
            </AlertDialog.Cancel>
            <AlertDialog.Action asChild>
              <Button
                onPress={handleOnClick}
              >
                –ö—É–ø–∏—Ç—å
              </Button>
            </AlertDialog.Action>
          </XStack>
        </YStack>
      </AlertDialog.Content>
    </AlertDialog.Portal>
  </AlertDialog>
);
}