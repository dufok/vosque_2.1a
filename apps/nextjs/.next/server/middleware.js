// runtime can't be in strict mode because a global variable is assign and maybe created.
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["middleware"],{

/***/ "(middleware)/../../node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=%2Fworkspaces%2Fvosque_2.1a%2Fapps%2Fnextjs%2Fmiddleware.ts&page=%2Fmiddleware&rootDir=%2Fworkspaces%2Fvosque_2.1a%2Fapps%2Fnextjs&matchers=&preferredRegion=&middlewareConfig=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=%2Fworkspaces%2Fvosque_2.1a%2Fapps%2Fnextjs%2Fmiddleware.ts&page=%2Fmiddleware&rootDir=%2Fworkspaces%2Fvosque_2.1a%2Fapps%2Fnextjs&matchers=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nHandler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/globals */ \"(middleware)/../../node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/adapter */ \"(middleware)/../../node_modules/next/dist/esm/server/web/adapter.js\");\n/* harmony import */ var _middleware_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./middleware.ts */ \"(middleware)/./middleware.ts\");\n\n\n// Import the userland code.\n\nconst mod = {\n    ..._middleware_ts__WEBPACK_IMPORTED_MODULE_2__\n};\nconst handler = mod.middleware || mod.default;\nconst page = \"/middleware\";\nif (typeof handler !== \"function\") {\n    throw new Error(`The Middleware \"${page}\" must export a \\`middleware\\` or a \\`default\\` function`);\n}\nfunction nHandler(opts) {\n    return (0,next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__.adapter)({\n        ...opts,\n        page,\n        handler\n    });\n}\n\n//# sourceMappingURL=middleware.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtbWlkZGxld2FyZS1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZ3b3Jrc3BhY2VzJTJGdm9zcXVlXzIuMWElMkZhcHBzJTJGbmV4dGpzJTJGbWlkZGxld2FyZS50cyZwYWdlPSUyRm1pZGRsZXdhcmUmcm9vdERpcj0lMkZ3b3Jrc3BhY2VzJTJGdm9zcXVlXzIuMWElMkZhcHBzJTJGbmV4dGpzJm1hdGNoZXJzPSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNDO0FBQ2lCO0FBQ3ZEO0FBQ3dDO0FBQ3hDO0FBQ0EsT0FBTywyQ0FBSTtBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLEtBQUs7QUFDNUM7QUFDZTtBQUNmLFdBQVcscUVBQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/NTRkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCJuZXh0L2Rpc3Qvc2VydmVyL3dlYi9nbG9iYWxzXCI7XG5pbXBvcnQgeyBhZGFwdGVyIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvd2ViL2FkYXB0ZXJcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIF9tb2QgZnJvbSBcIi4vbWlkZGxld2FyZS50c1wiO1xuY29uc3QgbW9kID0ge1xuICAgIC4uLl9tb2Rcbn07XG5jb25zdCBoYW5kbGVyID0gbW9kLm1pZGRsZXdhcmUgfHwgbW9kLmRlZmF1bHQ7XG5jb25zdCBwYWdlID0gXCIvbWlkZGxld2FyZVwiO1xuaWYgKHR5cGVvZiBoYW5kbGVyICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBNaWRkbGV3YXJlIFwiJHtwYWdlfVwiIG11c3QgZXhwb3J0IGEgXFxgbWlkZGxld2FyZVxcYCBvciBhIFxcYGRlZmF1bHRcXGAgZnVuY3Rpb25gKTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5IYW5kbGVyKG9wdHMpIHtcbiAgICByZXR1cm4gYWRhcHRlcih7XG4gICAgICAgIC4uLm9wdHMsXG4gICAgICAgIHBhZ2UsXG4gICAgICAgIGhhbmRsZXJcbiAgICB9KTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlkZGxld2FyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=%2Fworkspaces%2Fvosque_2.1a%2Fapps%2Fnextjs%2Fmiddleware.ts&page=%2Fmiddleware&rootDir=%2Fworkspaces%2Fvosque_2.1a%2Fapps%2Fnextjs&matchers=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/index.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_0__.authMiddleware)({\n    publicRoutes: [\n        \"/\",\n        \"/home\",\n        \"/payscreen\",\n        \"/userpage\",\n        \"/signup\",\n        \"/signin\",\n        \"/phrasebook\",\n        \"/course\",\n        \"/email-verification\",\n        \"/signup/email-verification\",\n        \"/usercreate\",\n        \"/api/(.*)\"\n    ],\n    debug: false\n}));\n// Stop Middleware running on static files\nconst config = {\n    matcher: [\n        \"/(.*?trpc.*?|(?!static|.*\\\\..*|_next|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFFckQsaUVBQWVBLG9FQUFjQSxDQUFDO0lBQzVCQyxjQUFjO1FBQ1o7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO0tBQ0Q7SUFDREMsT0FBTztBQUNULEVBQUU7QUFFRiwwQ0FBMEM7QUFDbkMsTUFBTUMsU0FBUztJQUNwQkMsU0FBUztRQUNQO0tBQ0Q7QUFDSCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL21pZGRsZXdhcmUudHM/NDIyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdXRoTWlkZGxld2FyZSB9IGZyb20gJ0BjbGVyay9uZXh0anMvc2VydmVyJ1xuXG5leHBvcnQgZGVmYXVsdCBhdXRoTWlkZGxld2FyZSh7XG4gIHB1YmxpY1JvdXRlczogW1xuICAgICcvJyxcbiAgICAnL2hvbWUnLFxuICAgICcvcGF5c2NyZWVuJyxcbiAgICAnL3VzZXJwYWdlJyxcbiAgICAnL3NpZ251cCcsXG4gICAgJy9zaWduaW4nLFxuICAgICcvcGhyYXNlYm9vaycsXG4gICAgJy9jb3Vyc2UnLFxuICAgICcvZW1haWwtdmVyaWZpY2F0aW9uJyxcbiAgICAnL3NpZ251cC9lbWFpbC12ZXJpZmljYXRpb24nLFxuICAgICcvdXNlcmNyZWF0ZScsXG4gICAgJy9hcGkvKC4qKSdcbiAgXSxcbiAgZGVidWc6IGZhbHNlXG59KVxuXG4vLyBTdG9wIE1pZGRsZXdhcmUgcnVubmluZyBvbiBzdGF0aWMgZmlsZXNcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIG1hdGNoZXI6IFtcbiAgICAnLyguKj90cnBjLio/fCg/IXN0YXRpY3wuKlxcXFwuLip8X25leHR8ZmF2aWNvbi5pY28pLiopJyxcbiAgXSxcbn0iXSwibmFtZXMiOlsiYXV0aE1pZGRsZXdhcmUiLCJwdWJsaWNSb3V0ZXMiLCJkZWJ1ZyIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/backend/dist/esm/index.js":
/*!***********************************************************!*\
  !*** ../../node_modules/@clerk/backend/dist/esm/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AllowlistIdentifier: () => (/* binding */ AllowlistIdentifier),\n/* harmony export */   AuthStatus: () => (/* binding */ AuthStatus),\n/* harmony export */   Clerk: () => (/* binding */ Clerk),\n/* harmony export */   Client: () => (/* binding */ Client),\n/* harmony export */   DeletedObject: () => (/* binding */ DeletedObject),\n/* harmony export */   Email: () => (/* binding */ Email),\n/* harmony export */   EmailAddress: () => (/* binding */ EmailAddress),\n/* harmony export */   ExternalAccount: () => (/* binding */ ExternalAccount),\n/* harmony export */   IdentificationLink: () => (/* binding */ IdentificationLink),\n/* harmony export */   Invitation: () => (/* binding */ Invitation),\n/* harmony export */   OauthAccessToken: () => (/* binding */ OauthAccessToken),\n/* harmony export */   ObjectType: () => (/* binding */ ObjectType),\n/* harmony export */   Organization: () => (/* binding */ Organization),\n/* harmony export */   OrganizationInvitation: () => (/* binding */ OrganizationInvitation),\n/* harmony export */   OrganizationMembership: () => (/* binding */ OrganizationMembership),\n/* harmony export */   OrganizationMembershipPublicUserData: () => (/* binding */ OrganizationMembershipPublicUserData),\n/* harmony export */   PhoneNumber: () => (/* binding */ PhoneNumber),\n/* harmony export */   RedirectUrl: () => (/* binding */ RedirectUrl),\n/* harmony export */   SMSMessage: () => (/* binding */ SMSMessage),\n/* harmony export */   Session: () => (/* binding */ Session),\n/* harmony export */   SignInToken: () => (/* binding */ SignInToken),\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   User: () => (/* binding */ User),\n/* harmony export */   Verification: () => (/* binding */ Verification),\n/* harmony export */   buildRequestUrl: () => (/* binding */ buildRequestUrl),\n/* harmony export */   constants: () => (/* binding */ constants),\n/* harmony export */   createAuthenticateRequest: () => (/* binding */ createAuthenticateRequest),\n/* harmony export */   createIsomorphicRequest: () => (/* binding */ createIsomorphicRequest),\n/* harmony export */   debugRequestState: () => (/* binding */ debugRequestState),\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt),\n/* harmony export */   deserialize: () => (/* binding */ deserialize),\n/* harmony export */   hasValidSignature: () => (/* binding */ hasValidSignature),\n/* harmony export */   loadInterstitialFromLocal: () => (/* binding */ loadInterstitialFromLocal),\n/* harmony export */   makeAuthObjectSerializable: () => (/* binding */ makeAuthObjectSerializable),\n/* harmony export */   prunePrivateMetadata: () => (/* binding */ prunePrivateMetadata),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   sanitizeAuthObject: () => (/* binding */ sanitizeAuthObject),\n/* harmony export */   signJwt: () => (/* binding */ signJwt),\n/* harmony export */   signedInAuthObject: () => (/* binding */ signedInAuthObject),\n/* harmony export */   signedOutAuthObject: () => (/* binding */ signedOutAuthObject),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/deprecated */ \"(middleware)/../../node_modules/@clerk/shared/dist/deprecated.mjs\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/url */ \"(middleware)/../../node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var _clerk_shared_callWithRetry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/callWithRetry */ \"(middleware)/../../node_modules/@clerk/shared/dist/callWithRetry.mjs\");\n/* harmony import */ var _clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/keys */ \"(middleware)/../../node_modules/@clerk/shared/dist/keys.mjs\");\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/shared/error */ \"(middleware)/../../node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var _crypto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! #crypto */ \"(middleware)/../../node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs\");\n/* harmony import */ var _fetch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! #fetch */ \"(middleware)/../../node_modules/@clerk/backend/dist/runtime/browser/fetch.mjs\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! deepmerge */ \"(middleware)/../../node_modules/deepmerge/dist/cjs.js\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(deepmerge__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var snakecase_keys__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! snakecase-keys */ \"(middleware)/../../node_modules/snakecase-keys/index.js\");\n/* harmony import */ var snakecase_keys__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(snakecase_keys__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! cookie */ \"(middleware)/../../node_modules/cookie/index.js\");\n/* harmony import */ var _clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @clerk/shared/isomorphicAtob */ \"(middleware)/../../node_modules/@clerk/shared/dist/isomorphicAtob.mjs\");\n// src/index.ts\n\n// src/api/endpoints/AbstractApi.ts\nvar AbstractAPI = class {\n    constructor(request){\n        this.request = request;\n    }\n    requireId(id) {\n        if (!id) {\n            throw new Error(\"A valid resource ID is required.\");\n        }\n    }\n};\n// src/util/path.ts\nvar SEPARATOR = \"/\";\nvar MULTIPLE_SEPARATOR_REGEX = new RegExp(SEPARATOR + \"{1,}\", \"g\");\nfunction joinPaths(...args) {\n    return args.filter((p)=>p).join(SEPARATOR).replace(MULTIPLE_SEPARATOR_REGEX, SEPARATOR);\n}\n// src/api/endpoints/AllowlistIdentifierApi.ts\nvar basePath = \"/allowlist_identifiers\";\nvar AllowlistIdentifierAPI = class extends AbstractAPI {\n    async getAllowlistIdentifierList() {\n        return this.request({\n            method: \"GET\",\n            path: basePath\n        });\n    }\n    async createAllowlistIdentifier(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath,\n            bodyParams: params\n        });\n    }\n    async deleteAllowlistIdentifier(allowlistIdentifierId) {\n        this.requireId(allowlistIdentifierId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath, allowlistIdentifierId)\n        });\n    }\n};\n// src/api/endpoints/ClientApi.ts\nvar basePath2 = \"/clients\";\nvar ClientAPI = class extends AbstractAPI {\n    async getClientList() {\n        return this.request({\n            method: \"GET\",\n            path: basePath2\n        });\n    }\n    async getClient(clientId) {\n        this.requireId(clientId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath2, clientId)\n        });\n    }\n    verifyClient(token) {\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath2, \"verify\"),\n            bodyParams: {\n                token\n            }\n        });\n    }\n};\n// src/api/endpoints/DomainApi.ts\nvar basePath3 = \"/domains\";\nvar DomainAPI = class extends AbstractAPI {\n    async deleteDomain(id) {\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath3, id)\n        });\n    }\n};\n// src/api/endpoints/EmailAddressApi.ts\nvar basePath4 = \"/email_addresses\";\nvar EmailAddressAPI = class extends AbstractAPI {\n    async getEmailAddress(emailAddressId) {\n        this.requireId(emailAddressId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath4, emailAddressId)\n        });\n    }\n    async createEmailAddress(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath4,\n            bodyParams: params\n        });\n    }\n    async updateEmailAddress(emailAddressId, params = {}) {\n        this.requireId(emailAddressId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath4, emailAddressId),\n            bodyParams: params\n        });\n    }\n    async deleteEmailAddress(emailAddressId) {\n        this.requireId(emailAddressId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath4, emailAddressId)\n        });\n    }\n};\n// src/api/endpoints/EmailApi.ts\n\nvar basePath5 = \"/emails\";\nvar EmailAPI = class extends AbstractAPI {\n    /**\n   * @deprecated This endpoint is no longer available and the function will be removed in the next major version.\n   */ async createEmail(params) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"EmailAPI.createEmail\", \"This endpoint is no longer available and the function will be removed in the next major version.\");\n        return this.request({\n            method: \"POST\",\n            path: basePath5,\n            bodyParams: params\n        });\n    }\n};\n// src/util/shared.ts\n\n\n\n\n\n\nvar errorThrower = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_4__.buildErrorThrower)({\n    packageName: \"@clerk/backend\"\n});\nvar { isDevOrStagingUrl } = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.createDevOrStagingUrlCache)();\n// src/api/endpoints/InterstitialApi.ts\nvar InterstitialAPI = class extends AbstractAPI {\n    async getInterstitial() {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"getInterstitial()\", 'Switch to `Clerk(...).localInterstitial(...)` from `import { Clerk } from \"@clerk/backend\"`.');\n        return this.request({\n            path: \"internal/interstitial\",\n            method: \"GET\",\n            headerParams: {\n                \"Content-Type\": \"text/html\"\n            }\n        });\n    }\n};\n// src/api/endpoints/InvitationApi.ts\nvar basePath6 = \"/invitations\";\nvar InvitationAPI = class extends AbstractAPI {\n    async getInvitationList(params = {}) {\n        return this.request({\n            method: \"GET\",\n            path: basePath6,\n            queryParams: params\n        });\n    }\n    async createInvitation(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath6,\n            bodyParams: params\n        });\n    }\n    async revokeInvitation(invitationId) {\n        this.requireId(invitationId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath6, invitationId, \"revoke\")\n        });\n    }\n};\n// src/api/endpoints/OrganizationApi.ts\n\n// src/runtime/index.ts\n\n\nvar { RuntimeFetch, RuntimeAbortController, RuntimeBlob, RuntimeFormData, RuntimeHeaders, RuntimeRequest, RuntimeResponse } = _fetch__WEBPACK_IMPORTED_MODULE_6__;\nvar globalFetch = RuntimeFetch.bind(globalThis);\nvar runtime = {\n    crypto: _crypto__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    fetch: globalFetch,\n    AbortController: RuntimeAbortController,\n    Blob: RuntimeBlob,\n    FormData: RuntimeFormData,\n    Headers: RuntimeHeaders,\n    Request: RuntimeRequest,\n    Response: RuntimeResponse\n};\nvar runtime_default = runtime;\n// src/api/endpoints/OrganizationApi.ts\nvar basePath7 = \"/organizations\";\nvar OrganizationAPI = class extends AbstractAPI {\n    async getOrganizationList(params) {\n        return this.request({\n            method: \"GET\",\n            path: basePath7,\n            queryParams: params\n        });\n    }\n    async createOrganization(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath7,\n            bodyParams: params\n        });\n    }\n    async getOrganization(params) {\n        const organizationIdOrSlug = \"organizationId\" in params ? params.organizationId : params.slug;\n        this.requireId(organizationIdOrSlug);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationIdOrSlug)\n        });\n    }\n    async updateOrganization(organizationId, params) {\n        this.requireId(organizationId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath7, organizationId),\n            bodyParams: params\n        });\n    }\n    async updateOrganizationLogo(organizationId, params) {\n        this.requireId(organizationId);\n        const formData = new runtime_default.FormData();\n        formData.append(\"file\", params?.file);\n        formData.append(\"uploader_user_id\", params?.uploaderUserId);\n        return this.request({\n            method: \"PUT\",\n            path: joinPaths(basePath7, organizationId, \"logo\"),\n            formData\n        });\n    }\n    async deleteOrganizationLogo(organizationId) {\n        this.requireId(organizationId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath7, organizationId, \"logo\")\n        });\n    }\n    async updateOrganizationMetadata(organizationId, params) {\n        this.requireId(organizationId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath7, organizationId, \"metadata\"),\n            bodyParams: params\n        });\n    }\n    async deleteOrganization(organizationId) {\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath7, organizationId)\n        });\n    }\n    async getOrganizationMembershipList(params) {\n        const { organizationId, limit, offset } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationId, \"memberships\"),\n            queryParams: {\n                limit,\n                offset\n            }\n        });\n    }\n    async createOrganizationMembership(params) {\n        const { organizationId, userId, role } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath7, organizationId, \"memberships\"),\n            bodyParams: {\n                userId,\n                role\n            }\n        });\n    }\n    async updateOrganizationMembership(params) {\n        const { organizationId, userId, role } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath7, organizationId, \"memberships\", userId),\n            bodyParams: {\n                role\n            }\n        });\n    }\n    async updateOrganizationMembershipMetadata(params) {\n        const { organizationId, userId, publicMetadata, privateMetadata } = params;\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath7, organizationId, \"memberships\", userId, \"metadata\"),\n            bodyParams: {\n                publicMetadata,\n                privateMetadata\n            }\n        });\n    }\n    async deleteOrganizationMembership(params) {\n        const { organizationId, userId } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath7, organizationId, \"memberships\", userId)\n        });\n    }\n    async getOrganizationInvitationList(params) {\n        const { organizationId, status, limit, offset } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationId, \"invitations\"),\n            queryParams: {\n                status,\n                limit,\n                offset\n            }\n        });\n    }\n    /**\n   * @deprecated  Use `getOrganizationInvitationList` instead along with the status parameter.\n   */ async getPendingOrganizationInvitationList(params) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"getPendingOrganizationInvitationList\", \"Use `getOrganizationInvitationList` instead.\");\n        const { organizationId, limit, offset } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationId, \"invitations\", \"pending\"),\n            queryParams: {\n                limit,\n                offset\n            }\n        });\n    }\n    async createOrganizationInvitation(params) {\n        const { organizationId, ...bodyParams } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath7, organizationId, \"invitations\"),\n            bodyParams: {\n                ...bodyParams\n            }\n        });\n    }\n    async getOrganizationInvitation(params) {\n        const { organizationId, invitationId } = params;\n        this.requireId(organizationId);\n        this.requireId(invitationId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath7, organizationId, \"invitations\", invitationId)\n        });\n    }\n    async revokeOrganizationInvitation(params) {\n        const { organizationId, invitationId, requestingUserId } = params;\n        this.requireId(organizationId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath7, organizationId, \"invitations\", invitationId, \"revoke\"),\n            bodyParams: {\n                requestingUserId\n            }\n        });\n    }\n};\n// src/api/endpoints/PhoneNumberApi.ts\nvar basePath8 = \"/phone_numbers\";\nvar PhoneNumberAPI = class extends AbstractAPI {\n    async getPhoneNumber(phoneNumberId) {\n        this.requireId(phoneNumberId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath8, phoneNumberId)\n        });\n    }\n    async createPhoneNumber(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath8,\n            bodyParams: params\n        });\n    }\n    async updatePhoneNumber(phoneNumberId, params = {}) {\n        this.requireId(phoneNumberId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath8, phoneNumberId),\n            bodyParams: params\n        });\n    }\n    async deletePhoneNumber(phoneNumberId) {\n        this.requireId(phoneNumberId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath8, phoneNumberId)\n        });\n    }\n};\n// src/api/endpoints/RedirectUrlApi.ts\nvar basePath9 = \"/redirect_urls\";\nvar RedirectUrlAPI = class extends AbstractAPI {\n    async getRedirectUrlList() {\n        return this.request({\n            method: \"GET\",\n            path: basePath9\n        });\n    }\n    async getRedirectUrl(redirectUrlId) {\n        this.requireId(redirectUrlId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath9, redirectUrlId)\n        });\n    }\n    async createRedirectUrl(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath9,\n            bodyParams: params\n        });\n    }\n    async deleteRedirectUrl(redirectUrlId) {\n        this.requireId(redirectUrlId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath9, redirectUrlId)\n        });\n    }\n};\n// src/api/endpoints/SessionApi.ts\nvar basePath10 = \"/sessions\";\nvar SessionAPI = class extends AbstractAPI {\n    async getSessionList(queryParams) {\n        return this.request({\n            method: \"GET\",\n            path: basePath10,\n            queryParams\n        });\n    }\n    async getSession(sessionId) {\n        this.requireId(sessionId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath10, sessionId)\n        });\n    }\n    async revokeSession(sessionId) {\n        this.requireId(sessionId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath10, sessionId, \"revoke\")\n        });\n    }\n    async verifySession(sessionId, token) {\n        this.requireId(sessionId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath10, sessionId, \"verify\"),\n            bodyParams: {\n                token\n            }\n        });\n    }\n    async getToken(sessionId, template) {\n        this.requireId(sessionId);\n        return (await this.request({\n            method: \"POST\",\n            path: joinPaths(basePath10, sessionId, \"tokens\", template || \"\")\n        })).jwt;\n    }\n};\n// src/api/endpoints/SignInTokenApi.ts\nvar basePath11 = \"/sign_in_tokens\";\nvar SignInTokenAPI = class extends AbstractAPI {\n    async createSignInToken(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath11,\n            bodyParams: params\n        });\n    }\n    async revokeSignInToken(signInTokenId) {\n        this.requireId(signInTokenId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath11, signInTokenId, \"revoke\")\n        });\n    }\n};\n// src/api/endpoints/SMSMessageApi.ts\n\nvar basePath12 = \"/sms_messages\";\nvar SMSMessageAPI = class extends AbstractAPI {\n    /**\n   * @deprecated This endpoint is no longer available and the function will be removed in the next major version.\n   */ async createSMSMessage(params) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"SMSMessageAPI.createSMSMessage\", \"This endpoint is no longer available and the function will be removed in the next major version.\");\n        return this.request({\n            method: \"POST\",\n            path: basePath12,\n            bodyParams: params\n        });\n    }\n};\n// src/api/endpoints/UserApi.ts\nvar basePath13 = \"/users\";\nvar UserAPI = class extends AbstractAPI {\n    async getUserList(params = {}) {\n        return this.request({\n            method: \"GET\",\n            path: basePath13,\n            queryParams: params\n        });\n    }\n    async getUser(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath13, userId)\n        });\n    }\n    async createUser(params) {\n        return this.request({\n            method: \"POST\",\n            path: basePath13,\n            bodyParams: params\n        });\n    }\n    async updateUser(userId, params = {}) {\n        this.requireId(userId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath13, userId),\n            bodyParams: params\n        });\n    }\n    async updateUserProfileImage(userId, params) {\n        this.requireId(userId);\n        const formData = new runtime_default.FormData();\n        formData.append(\"file\", params?.file);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath13, userId, \"profile_image\"),\n            formData\n        });\n    }\n    async updateUserMetadata(userId, params) {\n        this.requireId(userId);\n        return this.request({\n            method: \"PATCH\",\n            path: joinPaths(basePath13, userId, \"metadata\"),\n            bodyParams: params\n        });\n    }\n    async deleteUser(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath13, userId)\n        });\n    }\n    async getCount(params = {}) {\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath13, \"count\"),\n            queryParams: params\n        });\n    }\n    async getUserOauthAccessToken(userId, provider) {\n        this.requireId(userId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath13, userId, \"oauth_access_tokens\", provider)\n        });\n    }\n    async disableUserMFA(userId) {\n        this.requireId(userId);\n        return this.request({\n            method: \"DELETE\",\n            path: joinPaths(basePath13, userId, \"mfa\")\n        });\n    }\n    async getOrganizationMembershipList(params) {\n        const { userId, limit, offset } = params;\n        this.requireId(userId);\n        return this.request({\n            method: \"GET\",\n            path: joinPaths(basePath13, userId, \"organization_memberships\"),\n            queryParams: {\n                limit,\n                offset\n            }\n        });\n    }\n    async verifyPassword(params) {\n        const { userId, password } = params;\n        this.requireId(userId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath13, userId, \"verify_password\"),\n            bodyParams: {\n                password\n            }\n        });\n    }\n    async verifyTOTP(params) {\n        const { userId, code } = params;\n        this.requireId(userId);\n        return this.request({\n            method: \"POST\",\n            path: joinPaths(basePath13, userId, \"verify_totp\"),\n            bodyParams: {\n                code\n            }\n        });\n    }\n};\n// src/api/request.ts\n\n\n\n// src/constants.ts\nvar API_URL = \"https://api.clerk.dev\";\nvar API_VERSION = \"v1\";\nvar USER_AGENT = `${\"@clerk/backend\"}@${\"0.37.2\"}`;\nvar MAX_CACHE_LAST_UPDATED_AT_SECONDS = 5 * 60;\nvar Attributes = {\n    AuthToken: \"__clerkAuthToken\",\n    AuthStatus: \"__clerkAuthStatus\",\n    AuthReason: \"__clerkAuthReason\",\n    AuthMessage: \"__clerkAuthMessage\"\n};\nvar Cookies = {\n    Session: \"__session\",\n    ClientUat: \"__client_uat\"\n};\nvar Headers = {\n    AuthToken: \"x-clerk-auth-token\",\n    AuthStatus: \"x-clerk-auth-status\",\n    AuthReason: \"x-clerk-auth-reason\",\n    AuthMessage: \"x-clerk-auth-message\",\n    EnableDebug: \"x-clerk-debug\",\n    ClerkRedirectTo: \"x-clerk-redirect-to\",\n    CloudFrontForwardedProto: \"cloudfront-forwarded-proto\",\n    Authorization: \"authorization\",\n    ForwardedPort: \"x-forwarded-port\",\n    ForwardedProto: \"x-forwarded-proto\",\n    ForwardedHost: \"x-forwarded-host\",\n    Referrer: \"referer\",\n    UserAgent: \"user-agent\",\n    Origin: \"origin\",\n    Host: \"host\",\n    ContentType: \"content-type\"\n};\nvar SearchParams = {\n    AuthStatus: Headers.AuthStatus,\n    AuthToken: Headers.AuthToken\n};\nvar ContentTypes = {\n    Json: \"application/json\"\n};\nvar constants = {\n    Attributes,\n    Cookies,\n    Headers,\n    SearchParams,\n    ContentTypes\n};\n// src/util/assertValidSecretKey.ts\nfunction assertValidSecretKey(val) {\n    if (!val || typeof val !== \"string\") {\n        throw Error(\"Missing Clerk Secret Key or API Key. Go to https://dashboard.clerk.com and get your key for your instance.\");\n    }\n}\n// src/api/resources/AllowlistIdentifier.ts\nvar AllowlistIdentifier = class _AllowlistIdentifier {\n    constructor(id, identifier, createdAt, updatedAt, invitationId){\n        this.id = id;\n        this.identifier = identifier;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.invitationId = invitationId;\n    }\n    static fromJSON(data) {\n        return new _AllowlistIdentifier(data.id, data.identifier, data.created_at, data.updated_at, data.invitation_id);\n    }\n};\n// src/api/resources/Session.ts\nvar Session = class _Session {\n    constructor(id, clientId, userId, status, lastActiveAt, expireAt, abandonAt, createdAt, updatedAt){\n        this.id = id;\n        this.clientId = clientId;\n        this.userId = userId;\n        this.status = status;\n        this.lastActiveAt = lastActiveAt;\n        this.expireAt = expireAt;\n        this.abandonAt = abandonAt;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n    static fromJSON(data) {\n        return new _Session(data.id, data.client_id, data.user_id, data.status, data.last_active_at, data.expire_at, data.abandon_at, data.created_at, data.updated_at);\n    }\n};\n// src/api/resources/Client.ts\nvar Client = class _Client {\n    constructor(id, sessionIds, sessions, signInId, signUpId, lastActiveSessionId, createdAt, updatedAt){\n        this.id = id;\n        this.sessionIds = sessionIds;\n        this.sessions = sessions;\n        this.signInId = signInId;\n        this.signUpId = signUpId;\n        this.lastActiveSessionId = lastActiveSessionId;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n    static fromJSON(data) {\n        return new _Client(data.id, data.session_ids, data.sessions.map((x)=>Session.fromJSON(x)), data.sign_in_id, data.sign_up_id, data.last_active_session_id, data.created_at, data.updated_at);\n    }\n};\n// src/api/resources/DeletedObject.ts\nvar DeletedObject = class _DeletedObject {\n    constructor(object, id, slug, deleted){\n        this.object = object;\n        this.id = id;\n        this.slug = slug;\n        this.deleted = deleted;\n    }\n    static fromJSON(data) {\n        return new _DeletedObject(data.object, data.id || null, data.slug || null, data.deleted);\n    }\n};\n// src/api/resources/Email.ts\nvar Email = class _Email {\n    constructor(id, fromEmailName, emailAddressId, toEmailAddress, subject, body, bodyPlain, status, slug, data, deliveredByClerk){\n        this.id = id;\n        this.fromEmailName = fromEmailName;\n        this.emailAddressId = emailAddressId;\n        this.toEmailAddress = toEmailAddress;\n        this.subject = subject;\n        this.body = body;\n        this.bodyPlain = bodyPlain;\n        this.status = status;\n        this.slug = slug;\n        this.data = data;\n        this.deliveredByClerk = deliveredByClerk;\n    }\n    static fromJSON(data) {\n        return new _Email(data.id, data.from_email_name, data.email_address_id, data.to_email_address, data.subject, data.body, data.body_plain, data.status, data.slug, data.data, data.delivered_by_clerk);\n    }\n};\n// src/api/resources/IdentificationLink.ts\nvar IdentificationLink = class _IdentificationLink {\n    constructor(id, type){\n        this.id = id;\n        this.type = type;\n    }\n    static fromJSON(data) {\n        return new _IdentificationLink(data.id, data.type);\n    }\n};\n// src/api/resources/Verification.ts\nvar Verification = class _Verification {\n    constructor(status, strategy, externalVerificationRedirectURL = null, attempts = null, expireAt = null, nonce = null){\n        this.status = status;\n        this.strategy = strategy;\n        this.externalVerificationRedirectURL = externalVerificationRedirectURL;\n        this.attempts = attempts;\n        this.expireAt = expireAt;\n        this.nonce = nonce;\n    }\n    static fromJSON(data) {\n        return new _Verification(data.status, data.strategy, data.external_verification_redirect_url ? new URL(data.external_verification_redirect_url) : null, data.attempts, data.expire_at, data.nonce);\n    }\n};\n// src/api/resources/EmailAddress.ts\nvar EmailAddress = class _EmailAddress {\n    constructor(id, emailAddress, verification, linkedTo){\n        this.id = id;\n        this.emailAddress = emailAddress;\n        this.verification = verification;\n        this.linkedTo = linkedTo;\n    }\n    static fromJSON(data) {\n        return new _EmailAddress(data.id, data.email_address, data.verification && Verification.fromJSON(data.verification), data.linked_to.map((link)=>IdentificationLink.fromJSON(link)));\n    }\n};\n// src/api/resources/ExternalAccount.ts\nvar ExternalAccount = class _ExternalAccount {\n    constructor(id, provider, identificationId, externalId, approvedScopes, emailAddress, firstName, lastName, picture, imageUrl, username, publicMetadata = {}, label, verification){\n        this.id = id;\n        this.provider = provider;\n        this.identificationId = identificationId;\n        this.externalId = externalId;\n        this.approvedScopes = approvedScopes;\n        this.emailAddress = emailAddress;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.picture = picture;\n        this.imageUrl = imageUrl;\n        this.username = username;\n        this.publicMetadata = publicMetadata;\n        this.label = label;\n        this.verification = verification;\n    }\n    static fromJSON(data) {\n        return new _ExternalAccount(data.id, data.provider, data.identification_id, data.provider_user_id, data.approved_scopes, data.email_address, data.first_name, data.last_name, data.avatar_url, data.image_url, data.username, data.public_metadata, data.label, data.verification && Verification.fromJSON(data.verification));\n    }\n};\n(0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecatedProperty)(ExternalAccount, \"picture\", \"Use `imageUrl` instead.\");\n// src/api/resources/Invitation.ts\nvar Invitation = class _Invitation {\n    constructor(id, emailAddress, publicMetadata, createdAt, updatedAt, status, revoked){\n        this.id = id;\n        this.emailAddress = emailAddress;\n        this.publicMetadata = publicMetadata;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.status = status;\n        this.revoked = revoked;\n    }\n    static fromJSON(data) {\n        return new _Invitation(data.id, data.email_address, data.public_metadata, data.created_at, data.updated_at, data.status, data.revoked);\n    }\n};\n// src/api/resources/JSON.ts\nvar ObjectType = /* @__PURE__ */ ((ObjectType2)=>{\n    ObjectType2[\"AllowlistIdentifier\"] = \"allowlist_identifier\";\n    ObjectType2[\"Client\"] = \"client\";\n    ObjectType2[\"Email\"] = \"email\";\n    ObjectType2[\"EmailAddress\"] = \"email_address\";\n    ObjectType2[\"ExternalAccount\"] = \"external_account\";\n    ObjectType2[\"FacebookAccount\"] = \"facebook_account\";\n    ObjectType2[\"GoogleAccount\"] = \"google_account\";\n    ObjectType2[\"Invitation\"] = \"invitation\";\n    ObjectType2[\"OauthAccessToken\"] = \"oauth_access_token\";\n    ObjectType2[\"Organization\"] = \"organization\";\n    ObjectType2[\"OrganizationInvitation\"] = \"organization_invitation\";\n    ObjectType2[\"OrganizationMembership\"] = \"organization_membership\";\n    ObjectType2[\"PhoneNumber\"] = \"phone_number\";\n    ObjectType2[\"RedirectUrl\"] = \"redirect_url\";\n    ObjectType2[\"Session\"] = \"session\";\n    ObjectType2[\"SignInAttempt\"] = \"sign_in_attempt\";\n    ObjectType2[\"SignInToken\"] = \"sign_in_token\";\n    ObjectType2[\"SignUpAttempt\"] = \"sign_up_attempt\";\n    ObjectType2[\"SmsMessage\"] = \"sms_message\";\n    ObjectType2[\"User\"] = \"user\";\n    ObjectType2[\"Web3Wallet\"] = \"web3_wallet\";\n    ObjectType2[\"Token\"] = \"token\";\n    ObjectType2[\"TotalCount\"] = \"total_count\";\n    return ObjectType2;\n})(ObjectType || {});\n// src/api/resources/OauthAccessToken.ts\nvar OauthAccessToken = class _OauthAccessToken {\n    constructor(provider, token, publicMetadata = {}, label, scopes, tokenSecret){\n        this.provider = provider;\n        this.token = token;\n        this.publicMetadata = publicMetadata;\n        this.label = label;\n        this.scopes = scopes;\n        this.tokenSecret = tokenSecret;\n    }\n    static fromJSON(data) {\n        return new _OauthAccessToken(data.provider, data.token, data.public_metadata, data.label, data.scopes, data.token_secret);\n    }\n};\n// src/api/resources/Organization.ts\nvar Organization = class _Organization {\n    constructor(id, name, slug, logoUrl, imageUrl, hasImage, createdBy, createdAt, updatedAt, publicMetadata = {}, privateMetadata = {}, maxAllowedMemberships, adminDeleteEnabled, members_count){\n        this.id = id;\n        this.name = name;\n        this.slug = slug;\n        this.logoUrl = logoUrl;\n        this.imageUrl = imageUrl;\n        this.hasImage = hasImage;\n        this.createdBy = createdBy;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.publicMetadata = publicMetadata;\n        this.privateMetadata = privateMetadata;\n        this.maxAllowedMemberships = maxAllowedMemberships;\n        this.adminDeleteEnabled = adminDeleteEnabled;\n        this.members_count = members_count;\n    }\n    static fromJSON(data) {\n        return new _Organization(data.id, data.name, data.slug, data.logo_url, data.image_url, data.has_image, data.created_by, data.created_at, data.updated_at, data.public_metadata, data.private_metadata, data.max_allowed_memberships, data.admin_delete_enabled, data.members_count);\n    }\n};\n(0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecatedProperty)(Organization, \"logoUrl\", \"Use `imageUrl` instead.\");\n// src/api/resources/OrganizationInvitation.ts\nvar OrganizationInvitation = class _OrganizationInvitation {\n    constructor(id, emailAddress, role, organizationId, createdAt, updatedAt, status, publicMetadata = {}, privateMetadata = {}){\n        this.id = id;\n        this.emailAddress = emailAddress;\n        this.role = role;\n        this.organizationId = organizationId;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.status = status;\n        this.publicMetadata = publicMetadata;\n        this.privateMetadata = privateMetadata;\n    }\n    static fromJSON(data) {\n        return new _OrganizationInvitation(data.id, data.email_address, data.role, data.organization_id, data.created_at, data.updated_at, data.status, data.public_metadata, data.private_metadata);\n    }\n};\n// src/api/resources/OrganizationMembership.ts\nvar OrganizationMembership = class _OrganizationMembership {\n    constructor(id, role, publicMetadata = {}, privateMetadata = {}, createdAt, updatedAt, organization, publicUserData){\n        this.id = id;\n        this.role = role;\n        this.publicMetadata = publicMetadata;\n        this.privateMetadata = privateMetadata;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.organization = organization;\n        this.publicUserData = publicUserData;\n    }\n    static fromJSON(data) {\n        return new _OrganizationMembership(data.id, data.role, data.public_metadata, data.private_metadata, data.created_at, data.updated_at, Organization.fromJSON(data.organization), OrganizationMembershipPublicUserData.fromJSON(data.public_user_data));\n    }\n};\nvar OrganizationMembershipPublicUserData = class _OrganizationMembershipPublicUserData {\n    constructor(identifier, firstName, lastName, profileImageUrl, imageUrl, hasImage, userId){\n        this.identifier = identifier;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.profileImageUrl = profileImageUrl;\n        this.imageUrl = imageUrl;\n        this.hasImage = hasImage;\n        this.userId = userId;\n    }\n    static fromJSON(data) {\n        return new _OrganizationMembershipPublicUserData(data.identifier, data.first_name, data.last_name, data.profile_image_url, data.image_url, data.has_image, data.user_id);\n    }\n};\n(0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecatedProperty)(OrganizationMembershipPublicUserData, \"profileImageUrl\", \"Use `imageUrl` instead.\");\n// src/api/resources/PhoneNumber.ts\nvar PhoneNumber = class _PhoneNumber {\n    constructor(id, phoneNumber, reservedForSecondFactor, defaultSecondFactor, verification, linkedTo){\n        this.id = id;\n        this.phoneNumber = phoneNumber;\n        this.reservedForSecondFactor = reservedForSecondFactor;\n        this.defaultSecondFactor = defaultSecondFactor;\n        this.verification = verification;\n        this.linkedTo = linkedTo;\n    }\n    static fromJSON(data) {\n        return new _PhoneNumber(data.id, data.phone_number, data.reserved_for_second_factor, data.default_second_factor, data.verification && Verification.fromJSON(data.verification), data.linked_to.map((link)=>IdentificationLink.fromJSON(link)));\n    }\n};\n// src/api/resources/RedirectUrl.ts\nvar RedirectUrl = class _RedirectUrl {\n    constructor(id, url, createdAt, updatedAt){\n        this.id = id;\n        this.url = url;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n    static fromJSON(data) {\n        return new _RedirectUrl(data.id, data.url, data.created_at, data.updated_at);\n    }\n};\n// src/api/resources/SignInTokens.ts\nvar SignInToken = class _SignInToken {\n    constructor(id, userId, token, status, url, createdAt, updatedAt){\n        this.id = id;\n        this.userId = userId;\n        this.token = token;\n        this.status = status;\n        this.url = url;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n    }\n    static fromJSON(data) {\n        return new _SignInToken(data.id, data.user_id, data.token, data.status, data.url, data.created_at, data.updated_at);\n    }\n};\n// src/api/resources/SMSMessage.ts\nvar SMSMessage = class _SMSMessage {\n    constructor(id, fromPhoneNumber, toPhoneNumber, message, status, phoneNumberId, data){\n        this.id = id;\n        this.fromPhoneNumber = fromPhoneNumber;\n        this.toPhoneNumber = toPhoneNumber;\n        this.message = message;\n        this.status = status;\n        this.phoneNumberId = phoneNumberId;\n        this.data = data;\n    }\n    static fromJSON(data) {\n        return new _SMSMessage(data.id, data.from_phone_number, data.to_phone_number, data.message, data.status, data.phone_number_id, data.data);\n    }\n};\n// src/api/resources/Token.ts\nvar Token = class _Token {\n    constructor(jwt){\n        this.jwt = jwt;\n    }\n    static fromJSON(data) {\n        return new _Token(data.jwt);\n    }\n};\n// src/api/resources/Web3Wallet.ts\nvar Web3Wallet = class _Web3Wallet {\n    constructor(id, web3Wallet, verification){\n        this.id = id;\n        this.web3Wallet = web3Wallet;\n        this.verification = verification;\n    }\n    static fromJSON(data) {\n        return new _Web3Wallet(data.id, data.web3_wallet, data.verification && Verification.fromJSON(data.verification));\n    }\n};\n// src/api/resources/User.ts\nvar User = class _User {\n    constructor(id, passwordEnabled, totpEnabled, backupCodeEnabled, twoFactorEnabled, banned, createdAt, updatedAt, profileImageUrl, imageUrl, hasImage, gender, birthday, primaryEmailAddressId, primaryPhoneNumberId, primaryWeb3WalletId, lastSignInAt, externalId, username, firstName, lastName, publicMetadata = {}, privateMetadata = {}, unsafeMetadata = {}, emailAddresses = [], phoneNumbers = [], web3Wallets = [], externalAccounts = [], createOrganizationEnabled){\n        this.id = id;\n        this.passwordEnabled = passwordEnabled;\n        this.totpEnabled = totpEnabled;\n        this.backupCodeEnabled = backupCodeEnabled;\n        this.twoFactorEnabled = twoFactorEnabled;\n        this.banned = banned;\n        this.createdAt = createdAt;\n        this.updatedAt = updatedAt;\n        this.profileImageUrl = profileImageUrl;\n        this.imageUrl = imageUrl;\n        this.hasImage = hasImage;\n        this.gender = gender;\n        this.birthday = birthday;\n        this.primaryEmailAddressId = primaryEmailAddressId;\n        this.primaryPhoneNumberId = primaryPhoneNumberId;\n        this.primaryWeb3WalletId = primaryWeb3WalletId;\n        this.lastSignInAt = lastSignInAt;\n        this.externalId = externalId;\n        this.username = username;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.publicMetadata = publicMetadata;\n        this.privateMetadata = privateMetadata;\n        this.unsafeMetadata = unsafeMetadata;\n        this.emailAddresses = emailAddresses;\n        this.phoneNumbers = phoneNumbers;\n        this.web3Wallets = web3Wallets;\n        this.externalAccounts = externalAccounts;\n        this.createOrganizationEnabled = createOrganizationEnabled;\n    }\n    static fromJSON(data) {\n        return new _User(data.id, data.password_enabled, data.totp_enabled, data.backup_code_enabled, data.two_factor_enabled, data.banned, data.created_at, data.updated_at, data.profile_image_url, data.image_url, data.has_image, data.gender, data.birthday, data.primary_email_address_id, data.primary_phone_number_id, data.primary_web3_wallet_id, data.last_sign_in_at, data.external_id, data.username, data.first_name, data.last_name, data.public_metadata, data.private_metadata, data.unsafe_metadata, (data.email_addresses || []).map((x)=>EmailAddress.fromJSON(x)), (data.phone_numbers || []).map((x)=>PhoneNumber.fromJSON(x)), (data.web3_wallets || []).map((x)=>Web3Wallet.fromJSON(x)), (data.external_accounts || []).map((x)=>ExternalAccount.fromJSON(x)), data.create_organization_enabled);\n    }\n};\n(0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecatedProperty)(User, \"profileImageUrl\", \"Use `imageUrl` instead.\");\n// src/api/resources/Deserializer.ts\nfunction deserialize(payload) {\n    if (Array.isArray(payload)) {\n        return payload.map((item)=>jsonToObject(item));\n    } else if (isPaginated(payload)) {\n        return payload.data.map((item)=>jsonToObject(item));\n    } else {\n        return jsonToObject(payload);\n    }\n}\nfunction isPaginated(payload) {\n    return Array.isArray(payload.data) && payload.data !== void 0;\n}\nfunction getCount(item) {\n    return item.total_count;\n}\nfunction jsonToObject(item) {\n    if (typeof item !== \"string\" && \"object\" in item && \"deleted\" in item) {\n        return DeletedObject.fromJSON(item);\n    }\n    switch(item.object){\n        case \"allowlist_identifier\" /* AllowlistIdentifier */ :\n            return AllowlistIdentifier.fromJSON(item);\n        case \"client\" /* Client */ :\n            return Client.fromJSON(item);\n        case \"email_address\" /* EmailAddress */ :\n            return EmailAddress.fromJSON(item);\n        case \"email\" /* Email */ :\n            return Email.fromJSON(item);\n        case \"invitation\" /* Invitation */ :\n            return Invitation.fromJSON(item);\n        case \"oauth_access_token\" /* OauthAccessToken */ :\n            return OauthAccessToken.fromJSON(item);\n        case \"organization\" /* Organization */ :\n            return Organization.fromJSON(item);\n        case \"organization_invitation\" /* OrganizationInvitation */ :\n            return OrganizationInvitation.fromJSON(item);\n        case \"organization_membership\" /* OrganizationMembership */ :\n            return OrganizationMembership.fromJSON(item);\n        case \"phone_number\" /* PhoneNumber */ :\n            return PhoneNumber.fromJSON(item);\n        case \"redirect_url\" /* RedirectUrl */ :\n            return RedirectUrl.fromJSON(item);\n        case \"sign_in_token\" /* SignInToken */ :\n            return SignInToken.fromJSON(item);\n        case \"session\" /* Session */ :\n            return Session.fromJSON(item);\n        case \"sms_message\" /* SmsMessage */ :\n            return SMSMessage.fromJSON(item);\n        case \"token\" /* Token */ :\n            return Token.fromJSON(item);\n        case \"total_count\" /* TotalCount */ :\n            return getCount(item);\n        case \"user\" /* User */ :\n            return User.fromJSON(item);\n        default:\n            return item;\n    }\n}\n// src/api/request.ts\nvar withLegacyReturn = (cb)=>async (...args)=>{\n        const response = await cb(...args);\n        if (response.errors === null) {\n            return response.data;\n        } else {\n            const { errors, clerkTraceId } = response;\n            const { status, statusText } = response;\n            const error = new _clerk_shared_error__WEBPACK_IMPORTED_MODULE_4__.ClerkAPIResponseError(statusText || \"\", {\n                data: [],\n                status: status || \"\",\n                clerkTraceId\n            });\n            error.errors = errors;\n            throw error;\n        }\n    };\nfunction buildRequest(options) {\n    const request = async (requestOptions)=>{\n        const { apiKey, secretKey, httpOptions, apiUrl = API_URL, apiVersion = API_VERSION, userAgent = USER_AGENT } = options;\n        if (apiKey) {\n            (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"apiKey\", \"Use `secretKey` instead.\");\n        }\n        if (httpOptions) {\n            (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"httpOptions\", \"This option has been deprecated and will be removed with the next major release.\\nA RequestInit init object used by the `request` method.\");\n        }\n        const { path, method, queryParams, headerParams, bodyParams, formData } = requestOptions;\n        const key = secretKey || apiKey;\n        assertValidSecretKey(key);\n        const url = joinPaths(apiUrl, apiVersion, path);\n        const finalUrl = new URL(url);\n        if (queryParams) {\n            const snakecasedQueryParams = snakecase_keys__WEBPACK_IMPORTED_MODULE_8___default()({\n                ...queryParams\n            });\n            for (const [key2, val] of Object.entries(snakecasedQueryParams)){\n                if (val) {\n                    [\n                        val\n                    ].flat().forEach((v)=>finalUrl.searchParams.append(key2, v));\n                }\n            }\n        }\n        const headers = {\n            Authorization: `Bearer ${key}`,\n            \"User-Agent\": userAgent,\n            ...headerParams\n        };\n        let res = void 0;\n        try {\n            if (formData) {\n                res = await runtime_default.fetch(finalUrl.href, {\n                    ...httpOptions,\n                    method,\n                    headers,\n                    body: formData\n                });\n            } else {\n                headers[\"Content-Type\"] = \"application/json\";\n                const hasBody = method !== \"GET\" && bodyParams && Object.keys(bodyParams).length > 0;\n                const body = hasBody ? {\n                    body: JSON.stringify(snakecase_keys__WEBPACK_IMPORTED_MODULE_8___default()(bodyParams, {\n                        deep: false\n                    }))\n                } : null;\n                res = await runtime_default.fetch(finalUrl.href, deepmerge__WEBPACK_IMPORTED_MODULE_7___default()(httpOptions || {}, {\n                    method,\n                    headers,\n                    ...body\n                }));\n            }\n            const isJSONResponse = res?.headers && res.headers?.get(constants.Headers.ContentType) === constants.ContentTypes.Json;\n            const data = await (isJSONResponse ? res.json() : res.text());\n            if (!res.ok) {\n                throw data;\n            }\n            return {\n                data: deserialize(data),\n                errors: null\n            };\n        } catch (err) {\n            if (err instanceof Error) {\n                return {\n                    data: null,\n                    errors: [\n                        {\n                            code: \"unexpected_error\",\n                            message: err.message || \"Unexpected error\"\n                        }\n                    ],\n                    clerkTraceId: getTraceId(err, res?.headers)\n                };\n            }\n            return {\n                data: null,\n                errors: parseErrors(err),\n                // TODO: To be removed with withLegacyReturn\n                // @ts-expect-error\n                status: res?.status,\n                statusText: res?.statusText,\n                clerkTraceId: getTraceId(err, res?.headers)\n            };\n        }\n    };\n    return withLegacyReturn(request);\n}\nfunction getTraceId(data, headers) {\n    if (data && typeof data === \"object\" && \"clerk_trace_id\" in data && typeof data.clerk_trace_id === \"string\") {\n        return data.clerk_trace_id;\n    }\n    const cfRay = headers?.get(\"cf-ray\");\n    return cfRay || \"\";\n}\nfunction parseErrors(data) {\n    if (!!data && typeof data === \"object\" && \"errors\" in data) {\n        const errors = data.errors;\n        return errors.length > 0 ? errors.map(parseError) : [];\n    }\n    return [];\n}\nfunction parseError(error) {\n    return {\n        code: error.code,\n        message: error.message,\n        longMessage: error.long_message,\n        meta: {\n            paramName: error?.meta?.param_name,\n            sessionId: error?.meta?.session_id\n        }\n    };\n}\n// src/api/factory.ts\nfunction createBackendApiClient(options) {\n    const request = buildRequest(options);\n    return {\n        allowlistIdentifiers: new AllowlistIdentifierAPI(request),\n        clients: new ClientAPI(request),\n        emailAddresses: new EmailAddressAPI(request),\n        emails: new EmailAPI(request),\n        interstitial: new InterstitialAPI(request),\n        invitations: new InvitationAPI(request),\n        organizations: new OrganizationAPI(request),\n        phoneNumbers: new PhoneNumberAPI(request),\n        redirectUrls: new RedirectUrlAPI(request),\n        sessions: new SessionAPI(request),\n        signInTokens: new SignInTokenAPI(request),\n        smsMessages: new SMSMessageAPI(request),\n        users: new UserAPI(request),\n        domains: new DomainAPI(request)\n    };\n}\n// src/tokens/authObjects.ts\n\nvar createDebug = (data)=>{\n    return ()=>{\n        const res = {\n            ...data\n        };\n        res.apiKey = (res.apiKey || \"\").substring(0, 7);\n        res.secretKey = (res.secretKey || \"\").substring(0, 7);\n        res.jwtKey = (res.jwtKey || \"\").substring(0, 7);\n        return {\n            ...res\n        };\n    };\n};\nfunction signedInAuthObject(sessionClaims, options, debugData) {\n    const { act: actor, sid: sessionId, org_id: orgId, org_role: orgRole, org_slug: orgSlug, org_permissions: orgPermissions, sub: userId } = sessionClaims;\n    const { apiKey, secretKey, apiUrl, apiVersion, token, session, user, organization } = options;\n    if (apiKey) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"apiKey\", \"Use `secretKey` instead.\");\n    }\n    const { sessions } = createBackendApiClient({\n        apiKey,\n        secretKey,\n        apiUrl,\n        apiVersion\n    });\n    const getToken = createGetToken({\n        sessionId,\n        sessionToken: token,\n        fetcher: (...args)=>sessions.getToken(...args)\n    });\n    return {\n        actor,\n        sessionClaims,\n        sessionId,\n        session,\n        userId,\n        user,\n        orgId,\n        orgRole,\n        orgSlug,\n        orgPermissions,\n        organization,\n        getToken,\n        has: createHasAuthorization({\n            orgId,\n            orgRole,\n            orgPermissions,\n            userId\n        }),\n        debug: createDebug({\n            ...options,\n            ...debugData\n        })\n    };\n}\nfunction signedOutAuthObject(debugData) {\n    if (debugData?.apiKey) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"apiKey\", \"Use `secretKey` instead.\");\n    }\n    return {\n        sessionClaims: null,\n        sessionId: null,\n        session: null,\n        userId: null,\n        user: null,\n        actor: null,\n        orgId: null,\n        orgRole: null,\n        orgSlug: null,\n        orgPermissions: null,\n        organization: null,\n        getToken: ()=>Promise.resolve(null),\n        has: ()=>false,\n        debug: createDebug(debugData)\n    };\n}\nfunction prunePrivateMetadata(resource) {\n    if (resource) {\n        delete resource[\"privateMetadata\"];\n        delete resource[\"private_metadata\"];\n    }\n    return resource;\n}\nfunction sanitizeAuthObject(authObject) {\n    const user = authObject.user ? {\n        ...authObject.user\n    } : authObject.user;\n    const organization = authObject.organization ? {\n        ...authObject.organization\n    } : authObject.organization;\n    prunePrivateMetadata(user);\n    prunePrivateMetadata(organization);\n    return {\n        ...authObject,\n        user,\n        organization\n    };\n}\nvar makeAuthObjectSerializable = (obj)=>{\n    const { debug, getToken, has, ...rest } = obj;\n    return rest;\n};\nvar createGetToken = (params)=>{\n    const { fetcher, sessionToken, sessionId } = params || {};\n    return async (options = {})=>{\n        if (!sessionId) {\n            return null;\n        }\n        if (options.template) {\n            return fetcher(sessionId, options.template);\n        }\n        return sessionToken;\n    };\n};\nvar createHasAuthorization = ({ orgId, orgRole, userId, orgPermissions })=>(params)=>{\n        if (!params?.permission && !params?.role) {\n            throw new Error('Missing parameters. `has` from `auth` or `getAuth` requires a permission or role key to be passed. Example usage: `has({permission: \"org:posts:edit\"`');\n        }\n        if (!orgId || !userId || !orgRole || !orgPermissions) {\n            return false;\n        }\n        if (params.permission) {\n            return orgPermissions.includes(params.permission);\n        }\n        if (params.role) {\n            return orgRole === params.role;\n        }\n        return false;\n    };\n// src/tokens/errors.ts\nvar TokenVerificationError = class _TokenVerificationError extends Error {\n    constructor({ action, message, reason }){\n        super(message);\n        Object.setPrototypeOf(this, _TokenVerificationError.prototype);\n        this.reason = reason;\n        this.message = message;\n        this.action = action;\n    }\n    getFullMessage() {\n        return `${[\n            this.message,\n            this.action\n        ].filter((m)=>m).join(\" \")} (reason=${this.reason}, token-carrier=${this.tokenCarrier})`;\n    }\n};\n// src/tokens/interstitial.ts\nfunction loadInterstitialFromLocal(options) {\n    if (options.frontendApi) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"frontendApi\", \"Use `publishableKey` instead.\");\n    }\n    if (options.pkgVersion) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"pkgVersion\", \"Use `clerkJSVersion` instead.\");\n    }\n    options.frontendApi = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.parsePublishableKey)(options.publishableKey)?.frontendApi || options.frontendApi || \"\";\n    const domainOnlyInProd = !isDevOrStagingUrl(options.frontendApi) ? (0,_clerk_shared_url__WEBPACK_IMPORTED_MODULE_1__.addClerkPrefix)(options.domain) : \"\";\n    const { debugData, frontendApi, pkgVersion, clerkJSUrl, clerkJSVersion, publishableKey, proxyUrl, isSatellite = false, domain, signInUrl } = options;\n    return `\n    <head>\n        <meta charset=\"UTF-8\" />\n        <style>\n          @media (prefers-color-scheme: dark) {\n            body {\n              background-color: black;\n            }\n          }\n        </style>\n    </head>\n    <body>\n        <script>\n            window.__clerk_frontend_api = '${frontendApi}';\n            window.__clerk_debug = ${JSON.stringify(debugData || {})};\n            ${proxyUrl ? `window.__clerk_proxy_url = '${proxyUrl}'` : \"\"}\n            ${domain ? `window.__clerk_domain = '${domain}'` : \"\"}\n            window.startClerk = async () => {\n                function formRedirect(){\n                    const form = '<form method=\"get\" action=\"\" name=\"redirect\"></form>';\n                    document.body.innerHTML = document.body.innerHTML + form;\n\n                    const searchParams = new URLSearchParams(window.location.search);\n                    for (let paramTuple of searchParams) {\n                        const input = document.createElement(\"input\");\n                        input.type = \"hidden\";\n                        input.name = paramTuple[0];\n                        input.value = paramTuple[1];\n                        document.forms.redirect.appendChild(input);\n                    }\n                    const url = new URL(window.location.origin + window.location.pathname + window.location.hash);\n                    window.history.pushState({}, '', url);\n\n                    document.forms.redirect.action = window.location.pathname + window.location.hash;\n                    document.forms.redirect.submit();\n                }\n\n                const Clerk = window.Clerk;\n                try {\n                    await Clerk.load({\n                        isSatellite: ${isSatellite},\n                        isInterstitial: ${true},\n                        signInUrl: ${signInUrl ? `'${signInUrl}'` : void 0}\n                    });\n                    if(Clerk.loaded){\n                      if(window.location.href.indexOf(\"#\") === -1){\n                        window.location.href = window.location.href;\n                      } else if (window.navigator.userAgent.toLowerCase().includes(\"firefox/\")){\n                          formRedirect();\n                      } else {\n                          window.location.reload();\n                      }\n                    }\n                } catch (err) {\n                    console.error('Clerk: ', err);\n                }\n            };\n            (() => {\n                const script = document.createElement('script');\n                ${publishableKey ? `script.setAttribute('data-clerk-publishable-key', '${publishableKey}');` : `script.setAttribute('data-clerk-frontend-api', '${frontendApi}');`}\n\n                ${domain ? `script.setAttribute('data-clerk-domain', '${domain}');` : \"\"}\n                ${proxyUrl ? `script.setAttribute('data-clerk-proxy-url', '${proxyUrl}')` : \"\"};\n                script.async = true;\n                script.src = '${clerkJSUrl || (0,_clerk_shared_url__WEBPACK_IMPORTED_MODULE_1__.getScriptUrl)(proxyUrl || domainOnlyInProd || frontendApi, {\n        pkgVersion,\n        clerkJSVersion\n    })}';\n                script.crossOrigin = 'anonymous';\n                script.addEventListener('load', startClerk);\n                document.body.appendChild(script);\n            })();\n        </script>\n    </body>\n`;\n}\nasync function loadInterstitialFromBAPI(options) {\n    if (options.frontendApi) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"frontendApi\", \"Use `publishableKey` instead.\");\n    }\n    if (options.pkgVersion) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"pkgVersion\", \"Use `clerkJSVersion` instead.\");\n    }\n    options.frontendApi = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.parsePublishableKey)(options.publishableKey)?.frontendApi || options.frontendApi || \"\";\n    const url = buildPublicInterstitialUrl(options);\n    const response = await (0,_clerk_shared_callWithRetry__WEBPACK_IMPORTED_MODULE_2__.callWithRetry)(()=>runtime_default.fetch(buildPublicInterstitialUrl(options), {\n            method: \"GET\",\n            headers: {\n                \"Clerk-Backend-SDK\": options.userAgent || USER_AGENT\n            }\n        }));\n    if (!response.ok) {\n        throw new TokenVerificationError({\n            action: \"Contact support@clerk.com\" /* ContactSupport */ ,\n            message: `Error loading Clerk Interstitial from ${url} with code=${response.status}`,\n            reason: \"interstitial-remote-failed-to-load\" /* RemoteInterstitialFailedToLoad */ \n        });\n    }\n    return response.text();\n}\nfunction buildPublicInterstitialUrl(options) {\n    if (options.frontendApi) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"frontendApi\", \"Use `publishableKey` instead.\");\n    }\n    options.frontendApi = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.parsePublishableKey)(options.publishableKey)?.frontendApi || options.frontendApi || \"\";\n    const { apiUrl, frontendApi, pkgVersion, clerkJSVersion, publishableKey, proxyUrl, isSatellite, domain, signInUrl } = options;\n    const url = new URL(apiUrl);\n    url.pathname = joinPaths(url.pathname, API_VERSION, \"/public/interstitial\");\n    url.searchParams.append(\"clerk_js_version\", clerkJSVersion || (0,_clerk_shared_url__WEBPACK_IMPORTED_MODULE_1__.getClerkJsMajorVersionOrTag)(frontendApi, pkgVersion));\n    if (publishableKey) {\n        url.searchParams.append(\"publishable_key\", publishableKey);\n    } else {\n        url.searchParams.append(\"frontend_api\", frontendApi);\n    }\n    if (proxyUrl) {\n        url.searchParams.append(\"proxy_url\", proxyUrl);\n    }\n    if (isSatellite) {\n        url.searchParams.append(\"is_satellite\", \"true\");\n    }\n    url.searchParams.append(\"sign_in_url\", signInUrl || \"\");\n    if (!isDevOrStagingUrl(options.frontendApi)) {\n        url.searchParams.append(\"use_domain_for_script\", \"true\");\n    }\n    if (domain) {\n        url.searchParams.append(\"domain\", domain);\n    }\n    return url.href;\n}\n// src/util/IsomorphicRequest.ts\n\n// src/utils.ts\nvar getHeader = (req, key)=>req.headers.get(key);\nvar getFirstValueFromHeader = (value)=>value?.split(\",\")[0];\nvar buildRequestUrl = (request, path)=>{\n    const initialUrl = new URL(request.url);\n    const forwardedProto = getHeader(request, constants.Headers.ForwardedProto);\n    const forwardedHost = getHeader(request, constants.Headers.ForwardedHost);\n    const host = getHeader(request, constants.Headers.Host);\n    const protocol = initialUrl.protocol;\n    const base = buildOrigin({\n        protocol,\n        forwardedProto,\n        forwardedHost,\n        host: host || initialUrl.host\n    });\n    return new URL(path || initialUrl.pathname, base);\n};\nvar buildOrigin = ({ protocol, forwardedProto, forwardedHost, host })=>{\n    const resolvedHost = getFirstValueFromHeader(forwardedHost) ?? host;\n    const resolvedProtocol = getFirstValueFromHeader(forwardedProto) ?? protocol?.replace(/[:/]/, \"\");\n    if (!resolvedHost || !resolvedProtocol) {\n        return \"\";\n    }\n    return `${resolvedProtocol}://${resolvedHost}`;\n};\n// src/util/IsomorphicRequest.ts\nvar createIsomorphicRequest = (cb)=>{\n    const req = cb(runtime_default.Request, runtime_default.Headers);\n    const headersGeneratedURL = buildRequestUrl(req);\n    return new runtime_default.Request(headersGeneratedURL, req);\n};\nvar buildRequest2 = (req)=>{\n    if (!req) {\n        return {};\n    }\n    const cookies = parseIsomorphicRequestCookies(req);\n    const headers = getHeaderFromIsomorphicRequest(req);\n    const searchParams = getSearchParamsFromIsomorphicRequest(req);\n    return {\n        cookies,\n        headers,\n        searchParams\n    };\n};\nvar decode = (str)=>{\n    if (!str) {\n        return str;\n    }\n    return str.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n};\nvar parseIsomorphicRequestCookies = (req)=>{\n    const cookies = req.headers && req.headers?.get(\"cookie\") ? (0,cookie__WEBPACK_IMPORTED_MODULE_9__.parse)(req.headers.get(\"cookie\")) : {};\n    return (key)=>{\n        const value = cookies?.[key];\n        if (value === void 0) {\n            return void 0;\n        }\n        return decode(value);\n    };\n};\nvar getHeaderFromIsomorphicRequest = (req)=>(key)=>req?.headers?.get(key) || void 0;\nvar getSearchParamsFromIsomorphicRequest = (req)=>req?.url ? new URL(req.url)?.searchParams : void 0;\nvar stripAuthorizationHeader = (authValue)=>{\n    return authValue?.replace(\"Bearer \", \"\");\n};\n// src/tokens/authStatus.ts\nvar AuthStatus = /* @__PURE__ */ ((AuthStatus2)=>{\n    AuthStatus2[\"SignedIn\"] = \"signed-in\";\n    AuthStatus2[\"SignedOut\"] = \"signed-out\";\n    AuthStatus2[\"Interstitial\"] = \"interstitial\";\n    AuthStatus2[\"Unknown\"] = \"unknown\";\n    return AuthStatus2;\n})(AuthStatus || {});\nasync function signedIn(options, sessionClaims) {\n    const { apiKey, secretKey, apiUrl, apiVersion, cookieToken, frontendApi, proxyUrl, publishableKey, domain, isSatellite, headerToken, loadSession, loadUser, loadOrganization, signInUrl, signUpUrl, afterSignInUrl, afterSignUpUrl, token } = options;\n    const { sid: sessionId, org_id: orgId, sub: userId } = sessionClaims;\n    const { sessions, users, organizations } = createBackendApiClient({\n        apiKey,\n        secretKey,\n        apiUrl,\n        apiVersion\n    });\n    const [sessionResp, userResp, organizationResp] = await Promise.all([\n        loadSession ? sessions.getSession(sessionId) : Promise.resolve(void 0),\n        loadUser ? users.getUser(userId) : Promise.resolve(void 0),\n        loadOrganization && orgId ? organizations.getOrganization({\n            organizationId: orgId\n        }) : Promise.resolve(void 0)\n    ]);\n    const session = sessionResp;\n    const user = userResp;\n    const organization = organizationResp;\n    const authObject = signedInAuthObject(sessionClaims, {\n        secretKey,\n        apiKey,\n        apiUrl,\n        apiVersion,\n        token: cookieToken || headerToken || \"\",\n        session,\n        user,\n        organization\n    }, {\n        ...options,\n        status: \"signed-in\" /* SignedIn */ \n    });\n    return {\n        status: \"signed-in\" /* SignedIn */ ,\n        reason: null,\n        message: null,\n        frontendApi,\n        proxyUrl,\n        publishableKey,\n        domain,\n        isSatellite,\n        signInUrl,\n        signUpUrl,\n        afterSignInUrl,\n        afterSignUpUrl,\n        isSignedIn: true,\n        isInterstitial: false,\n        isUnknown: false,\n        toAuth: ()=>authObject,\n        token\n    };\n}\nfunction signedOut(options, reason, message = \"\") {\n    const { frontendApi, publishableKey, proxyUrl, isSatellite, domain, signInUrl, signUpUrl, afterSignInUrl, afterSignUpUrl } = options;\n    return {\n        status: \"signed-out\" /* SignedOut */ ,\n        reason,\n        message,\n        frontendApi,\n        proxyUrl,\n        publishableKey,\n        isSatellite,\n        domain,\n        signInUrl,\n        signUpUrl,\n        afterSignInUrl,\n        afterSignUpUrl,\n        isSignedIn: false,\n        isInterstitial: false,\n        isUnknown: false,\n        toAuth: ()=>signedOutAuthObject({\n                ...options,\n                status: \"signed-out\" /* SignedOut */ ,\n                reason,\n                message\n            }),\n        token: null\n    };\n}\nfunction interstitial(options, reason, message = \"\") {\n    const { frontendApi, publishableKey, proxyUrl, isSatellite, domain, signInUrl, signUpUrl, afterSignInUrl, afterSignUpUrl } = options;\n    return {\n        status: \"interstitial\" /* Interstitial */ ,\n        reason,\n        message,\n        frontendApi,\n        publishableKey,\n        isSatellite,\n        domain,\n        proxyUrl,\n        signInUrl,\n        signUpUrl,\n        afterSignInUrl,\n        afterSignUpUrl,\n        isSignedIn: false,\n        isInterstitial: true,\n        isUnknown: false,\n        toAuth: ()=>null,\n        token: null\n    };\n}\nfunction unknownState(options, reason, message = \"\") {\n    const { frontendApi, publishableKey, isSatellite, domain, signInUrl, signUpUrl, afterSignInUrl, afterSignUpUrl } = options;\n    return {\n        status: \"unknown\" /* Unknown */ ,\n        reason,\n        message,\n        frontendApi,\n        publishableKey,\n        isSatellite,\n        domain,\n        signInUrl,\n        signUpUrl,\n        afterSignInUrl,\n        afterSignUpUrl,\n        isSignedIn: false,\n        isInterstitial: false,\n        isUnknown: true,\n        toAuth: ()=>null,\n        token: null\n    };\n}\n// src/util/request.ts\nfunction checkCrossOrigin({ originURL, host, forwardedHost, forwardedProto }) {\n    const finalURL = buildOrigin({\n        forwardedProto,\n        forwardedHost,\n        protocol: originURL.protocol,\n        host\n    });\n    return finalURL && new URL(finalURL).origin !== originURL.origin;\n}\nvar getErrorObjectByCode = (errors, code)=>{\n    if (!errors) {\n        return null;\n    }\n    return errors.find((err)=>err.code === code);\n};\n// src/tokens/jwt/verifyJwt.ts\n\n// src/util/rfc4648.ts\nvar base64url = {\n    parse (string, opts) {\n        return parse2(string, base64UrlEncoding, opts);\n    },\n    stringify (data, opts) {\n        return stringify(data, base64UrlEncoding, opts);\n    }\n};\nvar base64UrlEncoding = {\n    chars: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bits: 6\n};\nfunction parse2(string, encoding, opts = {}) {\n    if (!encoding.codes) {\n        encoding.codes = {};\n        for(let i = 0; i < encoding.chars.length; ++i){\n            encoding.codes[encoding.chars[i]] = i;\n        }\n    }\n    if (!opts.loose && string.length * encoding.bits & 7) {\n        throw new SyntaxError(\"Invalid padding\");\n    }\n    let end = string.length;\n    while(string[end - 1] === \"=\"){\n        --end;\n        if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n            throw new SyntaxError(\"Invalid padding\");\n        }\n    }\n    const out = new (opts.out ?? Uint8Array)(end * encoding.bits / 8 | 0);\n    let bits = 0;\n    let buffer = 0;\n    let written = 0;\n    for(let i = 0; i < end; ++i){\n        const value = encoding.codes[string[i]];\n        if (value === void 0) {\n            throw new SyntaxError(\"Invalid character \" + string[i]);\n        }\n        buffer = buffer << encoding.bits | value;\n        bits += encoding.bits;\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 255 & buffer >> bits;\n        }\n    }\n    if (bits >= encoding.bits || 255 & buffer << 8 - bits) {\n        throw new SyntaxError(\"Unexpected end of data\");\n    }\n    return out;\n}\nfunction stringify(data, encoding, opts = {}) {\n    const { pad = true } = opts;\n    const mask = (1 << encoding.bits) - 1;\n    let out = \"\";\n    let bits = 0;\n    let buffer = 0;\n    for(let i = 0; i < data.length; ++i){\n        buffer = buffer << 8 | 255 & data[i];\n        bits += 8;\n        while(bits > encoding.bits){\n            bits -= encoding.bits;\n            out += encoding.chars[mask & buffer >> bits];\n        }\n    }\n    if (bits) {\n        out += encoding.chars[mask & buffer << encoding.bits - bits];\n    }\n    if (pad) {\n        while(out.length * encoding.bits & 7){\n            out += \"=\";\n        }\n    }\n    return out;\n}\n// src/tokens/jwt/algorithms.ts\nvar algToHash = {\n    RS256: \"SHA-256\",\n    RS384: \"SHA-384\",\n    RS512: \"SHA-512\"\n};\nvar RSA_ALGORITHM_NAME = \"RSASSA-PKCS1-v1_5\";\nvar jwksAlgToCryptoAlg = {\n    RS256: RSA_ALGORITHM_NAME,\n    RS384: RSA_ALGORITHM_NAME,\n    RS512: RSA_ALGORITHM_NAME\n};\nvar algs = Object.keys(algToHash);\nfunction getCryptoAlgorithm(algorithmName) {\n    const hash = algToHash[algorithmName];\n    const name = jwksAlgToCryptoAlg[algorithmName];\n    if (!hash || !name) {\n        throw new Error(`Unsupported algorithm ${algorithmName}, expected one of ${algs.join(\",\")}.`);\n    }\n    return {\n        hash: {\n            name: algToHash[algorithmName]\n        },\n        name: jwksAlgToCryptoAlg[algorithmName]\n    };\n}\n// src/tokens/jwt/assertions.ts\nvar isArrayString = (s)=>{\n    return Array.isArray(s) && s.length > 0 && s.every((a)=>typeof a === \"string\");\n};\nvar assertAudienceClaim = (aud, audience)=>{\n    const audienceList = [\n        audience\n    ].flat().filter((a)=>!!a);\n    const audList = [\n        aud\n    ].flat().filter((a)=>!!a);\n    const shouldVerifyAudience = audienceList.length > 0 && audList.length > 0;\n    if (!shouldVerifyAudience) {\n        return;\n    }\n    if (typeof aud === \"string\") {\n        if (!audienceList.includes(aud)) {\n            throw new TokenVerificationError({\n                action: \"Make sure that this is a valid Clerk generate JWT.\" /* EnsureClerkJWT */ ,\n                reason: \"token-verification-failed\" /* TokenVerificationFailed */ ,\n                message: `Invalid JWT audience claim (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(audienceList)}\".`\n            });\n        }\n    } else if (isArrayString(aud)) {\n        if (!aud.some((a)=>audienceList.includes(a))) {\n            throw new TokenVerificationError({\n                action: \"Make sure that this is a valid Clerk generate JWT.\" /* EnsureClerkJWT */ ,\n                reason: \"token-verification-failed\" /* TokenVerificationFailed */ ,\n                message: `Invalid JWT audience claim array (aud) ${JSON.stringify(aud)}. Is not included in \"${JSON.stringify(audienceList)}\".`\n            });\n        }\n    }\n};\nvar assertHeaderType = (typ)=>{\n    if (typeof typ === \"undefined\") {\n        return;\n    }\n    if (typ !== \"JWT\") {\n        throw new TokenVerificationError({\n            action: \"Make sure that this is a valid Clerk generate JWT.\" /* EnsureClerkJWT */ ,\n            reason: \"token-invalid\" /* TokenInvalid */ ,\n            message: `Invalid JWT type ${JSON.stringify(typ)}. Expected \"JWT\".`\n        });\n    }\n};\nvar assertHeaderAlgorithm = (alg)=>{\n    if (!algs.includes(alg)) {\n        throw new TokenVerificationError({\n            action: \"Make sure that this is a valid Clerk generate JWT.\" /* EnsureClerkJWT */ ,\n            reason: \"token-invalid-algorithm\" /* TokenInvalidAlgorithm */ ,\n            message: `Invalid JWT algorithm ${JSON.stringify(alg)}. Supported: ${algs}.`\n        });\n    }\n};\nvar assertSubClaim = (sub)=>{\n    if (typeof sub !== \"string\") {\n        throw new TokenVerificationError({\n            action: \"Make sure that this is a valid Clerk generate JWT.\" /* EnsureClerkJWT */ ,\n            reason: \"token-verification-failed\" /* TokenVerificationFailed */ ,\n            message: `Subject claim (sub) is required and must be a string. Received ${JSON.stringify(sub)}.`\n        });\n    }\n};\nvar assertAuthorizedPartiesClaim = (azp, authorizedParties)=>{\n    if (!azp || !authorizedParties || authorizedParties.length === 0) {\n        return;\n    }\n    if (!authorizedParties.includes(azp)) {\n        throw new TokenVerificationError({\n            reason: \"token-invalid-authorized-parties\" /* TokenInvalidAuthorizedParties */ ,\n            message: `Invalid JWT Authorized party claim (azp) ${JSON.stringify(azp)}. Expected \"${authorizedParties}\".`\n        });\n    }\n};\nvar assertIssuerClaim = (iss, issuer)=>{\n    if (typeof issuer === \"function\" && !issuer(iss)) {\n        throw new TokenVerificationError({\n            reason: \"token-invalid-issuer\" /* TokenInvalidIssuer */ ,\n            message: \"Failed JWT issuer resolver. Make sure that the resolver returns a truthy value.\"\n        });\n    } else if (typeof issuer === \"string\" && iss && iss !== issuer) {\n        throw new TokenVerificationError({\n            reason: \"token-invalid-issuer\" /* TokenInvalidIssuer */ ,\n            message: `Invalid JWT issuer claim (iss) ${JSON.stringify(iss)}. Expected \"${issuer}\".`\n        });\n    }\n};\nvar assertExpirationClaim = (exp, clockSkewInMs)=>{\n    if (typeof exp !== \"number\") {\n        throw new TokenVerificationError({\n            action: \"Make sure that this is a valid Clerk generate JWT.\" /* EnsureClerkJWT */ ,\n            reason: \"token-verification-failed\" /* TokenVerificationFailed */ ,\n            message: `Invalid JWT expiry date claim (exp) ${JSON.stringify(exp)}. Expected number.`\n        });\n    }\n    const currentDate = new Date(Date.now());\n    const expiryDate = /* @__PURE__ */ new Date(0);\n    expiryDate.setUTCSeconds(exp);\n    const expired = expiryDate.getTime() <= currentDate.getTime() - clockSkewInMs;\n    if (expired) {\n        throw new TokenVerificationError({\n            reason: \"token-expired\" /* TokenExpired */ ,\n            message: `JWT is expired. Expiry date: ${expiryDate.toUTCString()}, Current date: ${currentDate.toUTCString()}.`\n        });\n    }\n};\nvar assertActivationClaim = (nbf, clockSkewInMs)=>{\n    if (typeof nbf === \"undefined\") {\n        return;\n    }\n    if (typeof nbf !== \"number\") {\n        throw new TokenVerificationError({\n            action: \"Make sure that this is a valid Clerk generate JWT.\" /* EnsureClerkJWT */ ,\n            reason: \"token-verification-failed\" /* TokenVerificationFailed */ ,\n            message: `Invalid JWT not before date claim (nbf) ${JSON.stringify(nbf)}. Expected number.`\n        });\n    }\n    const currentDate = new Date(Date.now());\n    const notBeforeDate = /* @__PURE__ */ new Date(0);\n    notBeforeDate.setUTCSeconds(nbf);\n    const early = notBeforeDate.getTime() > currentDate.getTime() + clockSkewInMs;\n    if (early) {\n        throw new TokenVerificationError({\n            reason: \"token-not-active-yet\" /* TokenNotActiveYet */ ,\n            message: `JWT cannot be used prior to not before date claim (nbf). Not before date: ${notBeforeDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n        });\n    }\n};\nvar assertIssuedAtClaim = (iat, clockSkewInMs)=>{\n    if (typeof iat === \"undefined\") {\n        return;\n    }\n    if (typeof iat !== \"number\") {\n        throw new TokenVerificationError({\n            action: \"Make sure that this is a valid Clerk generate JWT.\" /* EnsureClerkJWT */ ,\n            reason: \"token-verification-failed\" /* TokenVerificationFailed */ ,\n            message: `Invalid JWT issued at date claim (iat) ${JSON.stringify(iat)}. Expected number.`\n        });\n    }\n    const currentDate = new Date(Date.now());\n    const issuedAtDate = /* @__PURE__ */ new Date(0);\n    issuedAtDate.setUTCSeconds(iat);\n    const postIssued = issuedAtDate.getTime() > currentDate.getTime() + clockSkewInMs;\n    if (postIssued) {\n        throw new TokenVerificationError({\n            reason: \"token-not-active-yet\" /* TokenNotActiveYet */ ,\n            message: `JWT issued at date claim (iat) is in the future. Issued at date: ${issuedAtDate.toUTCString()}; Current date: ${currentDate.toUTCString()};`\n        });\n    }\n};\n// src/tokens/jwt/cryptoKeys.ts\n\nfunction pemToBuffer(secret) {\n    const trimmed = secret.replace(/-----BEGIN.*?-----/g, \"\").replace(/-----END.*?-----/g, \"\").replace(/\\s/g, \"\");\n    const decoded = (0,_clerk_shared_isomorphicAtob__WEBPACK_IMPORTED_MODULE_10__.isomorphicAtob)(trimmed);\n    const buffer = new ArrayBuffer(decoded.length);\n    const bufView = new Uint8Array(buffer);\n    for(let i = 0, strLen = decoded.length; i < strLen; i++){\n        bufView[i] = decoded.charCodeAt(i);\n    }\n    return bufView;\n}\nfunction importKey(key, algorithm, keyUsage) {\n    if (typeof key === \"object\") {\n        return runtime_default.crypto.subtle.importKey(\"jwk\", key, algorithm, false, [\n            keyUsage\n        ]);\n    }\n    const keyData = pemToBuffer(key);\n    const format = keyUsage === \"sign\" ? \"pkcs8\" : \"spki\";\n    return runtime_default.crypto.subtle.importKey(format, keyData, algorithm, false, [\n        keyUsage\n    ]);\n}\n// src/tokens/jwt/verifyJwt.ts\nvar DEFAULT_CLOCK_SKEW_IN_SECONDS = 5 * 1e3;\nasync function hasValidSignature(jwt, key) {\n    const { header, signature, raw } = jwt;\n    const encoder = new TextEncoder();\n    const data = encoder.encode([\n        raw.header,\n        raw.payload\n    ].join(\".\"));\n    const algorithm = getCryptoAlgorithm(header.alg);\n    const cryptoKey = await importKey(key, algorithm, \"verify\");\n    return runtime_default.crypto.subtle.verify(algorithm.name, cryptoKey, signature, data);\n}\nfunction decodeJwt(token) {\n    const tokenParts = (token || \"\").toString().split(\".\");\n    if (tokenParts.length !== 3) {\n        throw new TokenVerificationError({\n            reason: \"token-invalid\" /* TokenInvalid */ ,\n            message: `Invalid JWT form. A JWT consists of three parts separated by dots.`\n        });\n    }\n    const [rawHeader, rawPayload, rawSignature] = tokenParts;\n    const decoder = new TextDecoder();\n    const header = JSON.parse(decoder.decode(base64url.parse(rawHeader, {\n        loose: true\n    })));\n    const payload = JSON.parse(decoder.decode(base64url.parse(rawPayload, {\n        loose: true\n    })));\n    const signature = base64url.parse(rawSignature, {\n        loose: true\n    });\n    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecatedObjectProperty)(payload, \"orgs\", 'Add orgs to your session token using the \"user.organizations\" shortcode in JWT Templates instead.', \"decodeJwt:orgs\");\n    return {\n        header,\n        payload,\n        signature,\n        raw: {\n            header: rawHeader,\n            payload: rawPayload,\n            signature: rawSignature,\n            text: token\n        }\n    };\n}\nasync function verifyJwt(token, { audience, authorizedParties, clockSkewInSeconds, clockSkewInMs, issuer, key }) {\n    if (clockSkewInSeconds) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"clockSkewInSeconds\", \"Use `clockSkewInMs` instead.\");\n    }\n    const clockSkew = clockSkewInMs || clockSkewInSeconds || DEFAULT_CLOCK_SKEW_IN_SECONDS;\n    const decoded = decodeJwt(token);\n    const { header, payload } = decoded;\n    const { typ, alg } = header;\n    assertHeaderType(typ);\n    assertHeaderAlgorithm(alg);\n    const { azp, sub, aud, iss, iat, exp, nbf } = payload;\n    assertSubClaim(sub);\n    assertAudienceClaim([\n        aud\n    ], [\n        audience\n    ]);\n    assertAuthorizedPartiesClaim(azp, authorizedParties);\n    assertIssuerClaim(iss, issuer);\n    assertExpirationClaim(exp, clockSkew);\n    assertActivationClaim(nbf, clockSkew);\n    assertIssuedAtClaim(iat, clockSkew);\n    let signatureValid;\n    try {\n        signatureValid = await hasValidSignature(decoded, key);\n    } catch (err) {\n        throw new TokenVerificationError({\n            action: \"Make sure that this is a valid Clerk generate JWT.\" /* EnsureClerkJWT */ ,\n            reason: \"token-verification-failed\" /* TokenVerificationFailed */ ,\n            message: `Error verifying JWT signature. ${err}`\n        });\n    }\n    if (!signatureValid) {\n        throw new TokenVerificationError({\n            reason: \"token-invalid-signature\" /* TokenInvalidSignature */ ,\n            message: \"JWT signature is invalid.\"\n        });\n    }\n    return payload;\n}\n// src/tokens/jwt/signJwt.ts\nfunction encodeJwtData(value) {\n    const stringified = JSON.stringify(value);\n    const encoder = new TextEncoder();\n    const encoded = encoder.encode(stringified);\n    return base64url.stringify(encoded, {\n        pad: false\n    });\n}\nasync function signJwt(payload, key, options) {\n    if (!options.algorithm) {\n        throw new Error(\"No algorithm specified\");\n    }\n    const encoder = new TextEncoder();\n    const algorithm = getCryptoAlgorithm(options.algorithm);\n    if (!algorithm) {\n        throw new Error(`Unsupported algorithm ${options.algorithm}`);\n    }\n    const cryptoKey = await importKey(key, algorithm, \"sign\");\n    const header = options.header || {\n        typ: \"JWT\"\n    };\n    header.alg = options.algorithm;\n    payload.iat = Math.floor(Date.now() / 1e3);\n    const encodedHeader = encodeJwtData(header);\n    const encodedPayload = encodeJwtData(payload);\n    const firstPart = `${encodedHeader}.${encodedPayload}`;\n    const signature = await runtime_default.crypto.subtle.sign(algorithm, cryptoKey, encoder.encode(firstPart));\n    return `${firstPart}.${base64url.stringify(new Uint8Array(signature), {\n        pad: false\n    })}`;\n}\n// src/tokens/keys.ts\nvar cache = {};\nvar lastUpdatedAt = 0;\nfunction getFromCache(kid) {\n    return cache[kid];\n}\nfunction getCacheValues() {\n    return Object.values(cache);\n}\nfunction setInCache(jwk, jwksCacheTtlInMs = 1e3 * 60 * 60) {\n    cache[jwk.kid] = jwk;\n    lastUpdatedAt = Date.now();\n    if (jwksCacheTtlInMs >= 0) {\n        setTimeout(()=>{\n            if (jwk) {\n                delete cache[jwk.kid];\n            } else {\n                cache = {};\n            }\n        }, jwksCacheTtlInMs);\n    }\n}\nvar LocalJwkKid = \"local\";\nvar PEM_HEADER = \"-----BEGIN PUBLIC KEY-----\";\nvar PEM_TRAILER = \"-----END PUBLIC KEY-----\";\nvar RSA_PREFIX = \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\";\nvar RSA_SUFFIX = \"IDAQAB\";\nfunction loadClerkJWKFromLocal(localKey) {\n    if (!getFromCache(LocalJwkKid)) {\n        if (!localKey) {\n            throw new TokenVerificationError({\n                action: \"Set the CLERK_JWT_KEY environment variable.\" /* SetClerkJWTKey */ ,\n                message: \"Missing local JWK.\",\n                reason: \"jwk-local-missing\" /* LocalJWKMissing */ \n            });\n        }\n        const modulus = localKey.replace(/(\\r\\n|\\n|\\r)/gm, \"\").replace(PEM_HEADER, \"\").replace(PEM_TRAILER, \"\").replace(RSA_PREFIX, \"\").replace(RSA_SUFFIX, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n        setInCache({\n            kid: \"local\",\n            kty: \"RSA\",\n            alg: \"RS256\",\n            n: modulus,\n            e: \"AQAB\"\n        }, -1);\n    }\n    return getFromCache(LocalJwkKid);\n}\nasync function loadClerkJWKFromRemote({ apiKey, secretKey, apiUrl = API_URL, apiVersion = API_VERSION, issuer, kid, jwksCacheTtlInMs = 1e3 * 60 * 60, // 1 hour,\nskipJwksCache }) {\n    const shouldRefreshCache = !getFromCache(kid) && reachedMaxCacheUpdatedAt();\n    if (skipJwksCache || shouldRefreshCache) {\n        let fetcher;\n        const key = secretKey || apiKey;\n        if (key) {\n            fetcher = ()=>fetchJWKSFromBAPI(apiUrl, key, apiVersion);\n        } else if (issuer) {\n            fetcher = ()=>fetchJWKSFromFAPI(issuer);\n        } else {\n            throw new TokenVerificationError({\n                action: \"Contact support@clerk.com\" /* ContactSupport */ ,\n                message: \"Failed to load JWKS from Clerk Backend or Frontend API.\",\n                reason: \"jwk-remote-failed-to-load\" /* RemoteJWKFailedToLoad */ \n            });\n        }\n        const { keys } = await (0,_clerk_shared_callWithRetry__WEBPACK_IMPORTED_MODULE_2__.callWithRetry)(fetcher);\n        if (!keys || !keys.length) {\n            throw new TokenVerificationError({\n                action: \"Contact support@clerk.com\" /* ContactSupport */ ,\n                message: \"The JWKS endpoint did not contain any signing keys. Contact support@clerk.com.\",\n                reason: \"jwk-remote-failed-to-load\" /* RemoteJWKFailedToLoad */ \n            });\n        }\n        keys.forEach((key2)=>setInCache(key2, jwksCacheTtlInMs));\n    }\n    const jwk = getFromCache(kid);\n    if (!jwk) {\n        const cacheValues = getCacheValues();\n        const jwkKeys = cacheValues.map((jwk2)=>jwk2.kid).join(\", \");\n        throw new TokenVerificationError({\n            action: \"Contact support@clerk.com\" /* ContactSupport */ ,\n            message: `Unable to find a signing key in JWKS that matches the kid='${kid}' of the provided session token. Please make sure that the __session cookie or the HTTP authorization header contain a Clerk-generated session JWT.${jwkKeys ? ` The following kid are available: ${jwkKeys}` : \"\"}`,\n            reason: \"jwk-remote-missing\" /* RemoteJWKMissing */ \n        });\n    }\n    return jwk;\n}\nasync function fetchJWKSFromFAPI(issuer) {\n    const url = new URL(issuer);\n    url.pathname = joinPaths(url.pathname, \".well-known/jwks.json\");\n    const response = await runtime_default.fetch(url.href);\n    if (!response.ok) {\n        throw new TokenVerificationError({\n            action: \"Contact support@clerk.com\" /* ContactSupport */ ,\n            message: `Error loading Clerk JWKS from ${url.href} with code=${response.status}`,\n            reason: \"jwk-remote-failed-to-load\" /* RemoteJWKFailedToLoad */ \n        });\n    }\n    return response.json();\n}\nasync function fetchJWKSFromBAPI(apiUrl, key, apiVersion) {\n    if (!key) {\n        throw new TokenVerificationError({\n            action: \"Set the CLERK_SECRET_KEY or CLERK_API_KEY environment variable.\" /* SetClerkSecretKeyOrAPIKey */ ,\n            message: \"Missing Clerk Secret Key or API Key. Go to https://dashboard.clerk.com and get your key for your instance.\",\n            reason: \"jwk-remote-failed-to-load\" /* RemoteJWKFailedToLoad */ \n        });\n    }\n    const url = new URL(apiUrl);\n    url.pathname = joinPaths(url.pathname, apiVersion, \"/jwks\");\n    const response = await runtime_default.fetch(url.href, {\n        headers: {\n            Authorization: `Bearer ${key}`,\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    if (!response.ok) {\n        const json = await response.json();\n        const invalidSecretKeyError = getErrorObjectByCode(json?.errors, \"clerk_key_invalid\" /* InvalidSecretKey */ );\n        if (invalidSecretKeyError) {\n            const reason = \"secret-key-invalid\" /* InvalidSecretKey */ ;\n            throw new TokenVerificationError({\n                action: \"Contact support@clerk.com\" /* ContactSupport */ ,\n                message: invalidSecretKeyError.message,\n                reason\n            });\n        }\n        throw new TokenVerificationError({\n            action: \"Contact support@clerk.com\" /* ContactSupport */ ,\n            message: `Error loading Clerk JWKS from ${url.href} with code=${response.status}`,\n            reason: \"jwk-remote-failed-to-load\" /* RemoteJWKFailedToLoad */ \n        });\n    }\n    return response.json();\n}\nfunction reachedMaxCacheUpdatedAt() {\n    return Date.now() - lastUpdatedAt >= MAX_CACHE_LAST_UPDATED_AT_SECONDS * 1e3;\n}\n// src/tokens/verify.ts\nasync function verifyToken(token, options) {\n    const { apiKey, secretKey, apiUrl, apiVersion, audience, authorizedParties, clockSkewInSeconds, clockSkewInMs, issuer, jwksCacheTtlInMs, jwtKey, skipJwksCache } = options;\n    if (options.apiKey) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"apiKey\", \"Use `secretKey` instead.\");\n    }\n    const { header } = decodeJwt(token);\n    const { kid } = header;\n    let key;\n    if (jwtKey) {\n        key = loadClerkJWKFromLocal(jwtKey);\n    } else if (typeof issuer === \"string\") {\n        key = await loadClerkJWKFromRemote({\n            issuer,\n            kid,\n            jwksCacheTtlInMs,\n            skipJwksCache\n        });\n    } else if (apiKey || secretKey) {\n        key = await loadClerkJWKFromRemote({\n            apiKey,\n            secretKey,\n            apiUrl,\n            apiVersion,\n            kid,\n            jwksCacheTtlInMs,\n            skipJwksCache\n        });\n    } else {\n        throw new TokenVerificationError({\n            action: \"Set the CLERK_JWT_KEY environment variable.\" /* SetClerkJWTKey */ ,\n            message: \"Failed to resolve JWK during verification.\",\n            reason: \"jwk-failed-to-resolve\" /* JWKFailedToResolve */ \n        });\n    }\n    return await verifyJwt(token, {\n        audience,\n        authorizedParties,\n        clockSkewInSeconds,\n        clockSkewInMs,\n        key,\n        issuer\n    });\n}\n// src/tokens/interstitialRule.ts\nvar shouldRedirectToSatelliteUrl = (qp)=>!!qp?.get(\"__clerk_satellite_url\");\nvar hasJustSynced = (qp)=>qp?.get(\"__clerk_synced\") === \"true\";\nvar VALID_USER_AGENTS = /^Mozilla\\/|(Amazon CloudFront)/;\nvar isBrowser = (userAgent)=>VALID_USER_AGENTS.test(userAgent || \"\");\nvar nonBrowserRequestInDevRule = (options)=>{\n    const { apiKey, secretKey, userAgent } = options;\n    const key = secretKey || apiKey || \"\";\n    if ((0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.isDevelopmentFromApiKey)(key) && !isBrowser(userAgent)) {\n        return signedOut(options, \"header-missing-non-browser\" /* HeaderMissingNonBrowser */ );\n    }\n    return void 0;\n};\nvar crossOriginRequestWithoutHeader = (options)=>{\n    const { origin, host, forwardedHost, forwardedProto } = options;\n    const isCrossOrigin = origin && checkCrossOrigin({\n        originURL: new URL(origin),\n        host,\n        forwardedHost,\n        forwardedProto\n    });\n    if (isCrossOrigin) {\n        return signedOut(options, \"header-missing-cors\" /* HeaderMissingCORS */ );\n    }\n    return void 0;\n};\nvar isPrimaryInDevAndRedirectsToSatellite = (options)=>{\n    const { apiKey, secretKey, isSatellite, searchParams } = options;\n    const key = secretKey || apiKey || \"\";\n    const isDev = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.isDevelopmentFromApiKey)(key);\n    if (isDev && !isSatellite && shouldRedirectToSatelliteUrl(searchParams)) {\n        return interstitial(options, \"primary-responds-to-syncing\" /* PrimaryRespondsToSyncing */ );\n    }\n    return void 0;\n};\nvar potentialFirstLoadInDevWhenUATMissing = (options)=>{\n    const { apiKey, secretKey, clientUat } = options;\n    const key = secretKey || apiKey || \"\";\n    const res = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.isDevelopmentFromApiKey)(key);\n    if (res && !clientUat) {\n        return interstitial(options, \"uat-missing\" /* CookieUATMissing */ );\n    }\n    return void 0;\n};\nvar potentialRequestAfterSignInOrOutFromClerkHostedUiInDev = (options)=>{\n    const { apiKey, secretKey, referrer, host, forwardedHost, forwardedProto } = options;\n    const crossOriginReferrer = referrer && checkCrossOrigin({\n        originURL: new URL(referrer),\n        host,\n        forwardedHost,\n        forwardedProto\n    });\n    const key = secretKey || apiKey || \"\";\n    if ((0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.isDevelopmentFromApiKey)(key) && crossOriginReferrer) {\n        return interstitial(options, \"cross-origin-referrer\" /* CrossOriginReferrer */ );\n    }\n    return void 0;\n};\nvar potentialFirstRequestOnProductionEnvironment = (options)=>{\n    const { apiKey, secretKey, clientUat, cookieToken } = options;\n    const key = secretKey || apiKey || \"\";\n    if ((0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.isProductionFromApiKey)(key) && !clientUat && !cookieToken) {\n        return signedOut(options, \"cookie-and-uat-missing\" /* CookieAndUATMissing */ );\n    }\n    return void 0;\n};\nvar isNormalSignedOutState = (options)=>{\n    const { clientUat } = options;\n    if (clientUat === \"0\") {\n        return signedOut(options, \"standard-signed-out\" /* StandardSignedOut */ );\n    }\n    return void 0;\n};\nvar hasPositiveClientUatButCookieIsMissing = (options)=>{\n    const { clientUat, cookieToken } = options;\n    if (clientUat && Number.parseInt(clientUat) > 0 && !cookieToken) {\n        return interstitial(options, \"cookie-missing\" /* CookieMissing */ );\n    }\n    return void 0;\n};\nvar hasValidHeaderToken = async (options)=>{\n    const { headerToken } = options;\n    const sessionClaims = await verifyRequestState(options, headerToken);\n    return await signedIn({\n        ...options,\n        token: headerToken\n    }, sessionClaims);\n};\nvar hasValidCookieToken = async (options)=>{\n    const { cookieToken, clientUat } = options;\n    const sessionClaims = await verifyRequestState(options, cookieToken);\n    const state = await signedIn({\n        ...options,\n        token: cookieToken\n    }, sessionClaims);\n    const jwt = state.toAuth().sessionClaims;\n    const cookieTokenIsOutdated = jwt.iat < Number.parseInt(clientUat);\n    if (!clientUat || cookieTokenIsOutdated) {\n        return interstitial(options, \"cookie-outdated\" /* CookieOutDated */ );\n    }\n    return state;\n};\nasync function runInterstitialRules(opts, rules) {\n    for (const rule of rules){\n        const res = await rule(opts);\n        if (res) {\n            return res;\n        }\n    }\n    return signedOut(opts, \"unexpected-error\" /* UnexpectedError */ );\n}\nasync function verifyRequestState(options, token) {\n    const { isSatellite, proxyUrl } = options;\n    let issuer;\n    if (isSatellite) {\n        issuer = null;\n    } else if (proxyUrl) {\n        issuer = proxyUrl;\n    } else {\n        issuer = (iss)=>iss.startsWith(\"https://clerk.\") || iss.includes(\".clerk.accounts\");\n    }\n    return verifyToken(token, {\n        ...options,\n        issuer\n    });\n}\nvar isSatelliteAndNeedsSyncing = (options)=>{\n    const { clientUat, isSatellite, searchParams, userAgent } = options;\n    const isSignedOut = !clientUat || clientUat === \"0\";\n    if (isSatellite && isSignedOut && !isBrowser(userAgent)) {\n        return signedOut(options, \"satellite-needs-syncing\" /* SatelliteCookieNeedsSyncing */ );\n    }\n    if (isSatellite && isSignedOut && !hasJustSynced(searchParams)) {\n        return interstitial(options, \"satellite-needs-syncing\" /* SatelliteCookieNeedsSyncing */ );\n    }\n    return void 0;\n};\n// src/tokens/request.ts\nfunction assertSignInUrlExists(signInUrl, key) {\n    if (!signInUrl && (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.isDevelopmentFromApiKey)(key)) {\n        throw new Error(`Missing signInUrl. Pass a signInUrl for dev instances if an app is satellite`);\n    }\n}\nfunction assertProxyUrlOrDomain(proxyUrlOrDomain) {\n    if (!proxyUrlOrDomain) {\n        throw new Error(`Missing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl`);\n    }\n}\nfunction assertSignInUrlFormatAndOrigin(_signInUrl, origin) {\n    let signInUrl;\n    try {\n        signInUrl = new URL(_signInUrl);\n    } catch  {\n        throw new Error(`The signInUrl needs to have a absolute url format.`);\n    }\n    if (signInUrl.origin === origin) {\n        throw new Error(`The signInUrl needs to be on a different origin than your satellite application.`);\n    }\n}\nasync function authenticateRequest(options) {\n    const { cookies, headers, searchParams } = buildRequest2(options?.request);\n    if (options.frontendApi) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"frontendApi\", \"Use `publishableKey` instead.\");\n    }\n    if (options.apiKey) {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"apiKey\", \"Use `secretKey` instead.\");\n    }\n    options = {\n        ...options,\n        ...loadOptionsFromHeaders(options, headers),\n        frontendApi: (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.parsePublishableKey)(options.publishableKey)?.frontendApi || options.frontendApi,\n        apiUrl: options.apiUrl || API_URL,\n        apiVersion: options.apiVersion || API_VERSION,\n        cookieToken: options.cookieToken || cookies?.(constants.Cookies.Session),\n        clientUat: options.clientUat || cookies?.(constants.Cookies.ClientUat),\n        searchParams: options.searchParams || searchParams || void 0\n    };\n    assertValidSecretKey(options.secretKey || options.apiKey);\n    if (options.isSatellite) {\n        assertSignInUrlExists(options.signInUrl, options.secretKey || options.apiKey);\n        if (options.signInUrl && options.origin) {\n            assertSignInUrlFormatAndOrigin(options.signInUrl, options.origin);\n        }\n        assertProxyUrlOrDomain(options.proxyUrl || options.domain);\n    }\n    async function authenticateRequestWithTokenInHeader() {\n        try {\n            const state = await runInterstitialRules(options, [\n                hasValidHeaderToken\n            ]);\n            return state;\n        } catch (err) {\n            return handleError(err, \"header\");\n        }\n    }\n    async function authenticateRequestWithTokenInCookie() {\n        try {\n            const state = await runInterstitialRules(options, [\n                crossOriginRequestWithoutHeader,\n                nonBrowserRequestInDevRule,\n                isSatelliteAndNeedsSyncing,\n                isPrimaryInDevAndRedirectsToSatellite,\n                potentialFirstRequestOnProductionEnvironment,\n                potentialFirstLoadInDevWhenUATMissing,\n                potentialRequestAfterSignInOrOutFromClerkHostedUiInDev,\n                hasPositiveClientUatButCookieIsMissing,\n                isNormalSignedOutState,\n                hasValidCookieToken\n            ]);\n            return state;\n        } catch (err) {\n            return handleError(err, \"cookie\");\n        }\n    }\n    function handleError(err, tokenCarrier) {\n        if (err instanceof TokenVerificationError) {\n            err.tokenCarrier = tokenCarrier;\n            const reasonToReturnInterstitial = [\n                \"token-expired\" /* TokenExpired */ ,\n                \"token-not-active-yet\" /* TokenNotActiveYet */ \n            ].includes(err.reason);\n            if (reasonToReturnInterstitial) {\n                if (tokenCarrier === \"header\") {\n                    return unknownState(options, err.reason, err.getFullMessage());\n                }\n                return interstitial(options, err.reason, err.getFullMessage());\n            }\n            return signedOut(options, err.reason, err.getFullMessage());\n        }\n        return signedOut(options, \"unexpected-error\" /* UnexpectedError */ , err.message);\n    }\n    if (options.headerToken) {\n        return authenticateRequestWithTokenInHeader();\n    }\n    return authenticateRequestWithTokenInCookie();\n}\nvar debugRequestState = (params)=>{\n    const { frontendApi, isSignedIn, proxyUrl, isInterstitial, reason, message, publishableKey, isSatellite, domain } = params;\n    return {\n        frontendApi,\n        isSignedIn,\n        proxyUrl,\n        isInterstitial,\n        reason,\n        message,\n        publishableKey,\n        isSatellite,\n        domain\n    };\n};\nvar loadOptionsFromHeaders = (options, headers)=>{\n    if (!headers) {\n        return {};\n    }\n    return {\n        headerToken: stripAuthorizationHeader(options.headerToken || headers(constants.Headers.Authorization)),\n        origin: options.origin || headers(constants.Headers.Origin),\n        host: options.host || headers(constants.Headers.Host),\n        forwardedHost: options.forwardedHost || headers(constants.Headers.ForwardedHost),\n        forwardedPort: options.forwardedPort || headers(constants.Headers.ForwardedPort),\n        forwardedProto: options.forwardedProto || headers(constants.Headers.CloudFrontForwardedProto) || headers(constants.Headers.ForwardedProto),\n        referrer: options.referrer || headers(constants.Headers.Referrer),\n        userAgent: options.userAgent || headers(constants.Headers.UserAgent)\n    };\n};\n// src/tokens/factory.ts\nfunction createAuthenticateRequest(params) {\n    const { apiClient } = params;\n    const { apiKey: buildtimeApiKey = \"\", secretKey: buildtimeSecretKey = \"\", jwtKey: buildtimeJwtKey = \"\", apiUrl = API_URL, apiVersion = API_VERSION, frontendApi: buildtimeFrontendApi = \"\", proxyUrl: buildProxyUrl = \"\", publishableKey: buildtimePublishableKey = \"\", isSatellite: buildtimeIsSatellite = false, domain: buildtimeDomain = \"\", audience: buildtimeAudience = \"\", userAgent: buildUserAgent } = params.options;\n    const authenticateRequest2 = ({ apiKey: runtimeApiKey, secretKey: runtimeSecretKey, audience: runtimeAudience, frontendApi: runtimeFrontendApi, proxyUrl: runtimeProxyUrl, publishableKey: runtimePublishableKey, jwtKey: runtimeJwtKey, isSatellite: runtimeIsSatellite, domain: runtimeDomain, searchParams, ...rest })=>{\n        return authenticateRequest({\n            ...rest,\n            apiKey: runtimeApiKey || buildtimeApiKey,\n            secretKey: runtimeSecretKey || buildtimeSecretKey,\n            audience: runtimeAudience || buildtimeAudience,\n            apiUrl,\n            apiVersion,\n            frontendApi: runtimeFrontendApi || buildtimeFrontendApi,\n            proxyUrl: runtimeProxyUrl || buildProxyUrl,\n            publishableKey: runtimePublishableKey || buildtimePublishableKey,\n            isSatellite: runtimeIsSatellite || buildtimeIsSatellite,\n            domain: runtimeDomain || buildtimeDomain,\n            jwtKey: runtimeJwtKey || buildtimeJwtKey,\n            searchParams\n        });\n    };\n    const localInterstitial = ({ frontendApi: runtimeFrontendApi, publishableKey: runtimePublishableKey, proxyUrl: runtimeProxyUrl, isSatellite: runtimeIsSatellite, domain: runtimeDomain, ...rest })=>loadInterstitialFromLocal({\n            ...rest,\n            frontendApi: runtimeFrontendApi || buildtimeFrontendApi,\n            proxyUrl: runtimeProxyUrl || buildProxyUrl,\n            publishableKey: runtimePublishableKey || buildtimePublishableKey,\n            isSatellite: runtimeIsSatellite || buildtimeIsSatellite,\n            domain: runtimeDomain || buildtimeDomain\n        });\n    const remotePublicInterstitial = ({ frontendApi: runtimeFrontendApi, publishableKey: runtimePublishableKey, proxyUrl: runtimeProxyUrl, isSatellite: runtimeIsSatellite, domain: runtimeDomain, userAgent: runtimeUserAgent, ...rest })=>{\n        return loadInterstitialFromBAPI({\n            ...rest,\n            apiUrl,\n            frontendApi: runtimeFrontendApi || buildtimeFrontendApi,\n            publishableKey: runtimePublishableKey || buildtimePublishableKey,\n            proxyUrl: runtimeProxyUrl || buildProxyUrl,\n            isSatellite: runtimeIsSatellite || buildtimeIsSatellite,\n            domain: runtimeDomain || buildtimeDomain,\n            userAgent: runtimeUserAgent || buildUserAgent\n        });\n    };\n    const remotePublicInterstitialUrl = buildPublicInterstitialUrl;\n    const remotePrivateInterstitial = ()=>apiClient.interstitial.getInterstitial();\n    return {\n        authenticateRequest: authenticateRequest2,\n        localInterstitial,\n        remotePublicInterstitial,\n        remotePrivateInterstitial,\n        remotePublicInterstitialUrl,\n        debugRequestState\n    };\n}\n// src/redirections.ts\nvar buildUrl = (targetUrl, redirectUrl)=>{\n    let url;\n    if (!targetUrl.startsWith(\"http\")) {\n        if (!redirectUrl || !redirectUrl.startsWith(\"http\")) {\n            throw new Error(\"destination url or return back url should be an absolute path url!\");\n        }\n        const baseURL = new URL(redirectUrl);\n        url = new URL(targetUrl, baseURL.origin);\n    } else {\n        url = new URL(targetUrl);\n    }\n    if (redirectUrl) {\n        url.searchParams.set(\"redirect_url\", redirectUrl);\n    }\n    return url.toString();\n};\nfunction redirect({ redirectAdapter, signUpUrl, signInUrl, frontendApi, publishableKey }) {\n    if (!frontendApi) {\n        frontendApi = (0,_clerk_shared_keys__WEBPACK_IMPORTED_MODULE_3__.parsePublishableKey)(publishableKey)?.frontendApi;\n    } else {\n        (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"frontendApi\", \"Use `publishableKey` instead.\");\n    }\n    const accountsBaseUrl = buildAccountsBaseUrl(frontendApi);\n    const redirectToSignUp = ({ returnBackUrl } = {})=>{\n        if (!signUpUrl && !accountsBaseUrl) {\n            errorThrower.throwMissingPublishableKeyError();\n        }\n        const accountsSignUpUrl = `${accountsBaseUrl}/sign-up`;\n        return redirectAdapter(buildUrl(signUpUrl || accountsSignUpUrl, returnBackUrl));\n    };\n    const redirectToSignIn = ({ returnBackUrl } = {})=>{\n        if (!signInUrl && !accountsBaseUrl) {\n            errorThrower.throwMissingPublishableKeyError();\n        }\n        const accountsSignInUrl = `${accountsBaseUrl}/sign-in`;\n        return redirectAdapter(buildUrl(signInUrl || accountsSignInUrl, returnBackUrl));\n    };\n    return {\n        redirectToSignUp,\n        redirectToSignIn\n    };\n}\nfunction buildAccountsBaseUrl(frontendApi) {\n    if (!frontendApi) {\n        return \"\";\n    }\n    const accountsBaseUrl = frontendApi.replace(/(clerk\\.accountsstage\\.)/, \"accountsstage.\").replace(/(clerk\\.accounts\\.|clerk\\.)/, \"accounts.\");\n    return `https://${accountsBaseUrl}`;\n}\n// src/index.ts\nfunction Clerk(options) {\n    const opts = {\n        ...options\n    };\n    const apiClient = createBackendApiClient(opts);\n    const requestState = createAuthenticateRequest({\n        options: opts,\n        apiClient\n    });\n    const clerkInstance = {\n        ...apiClient,\n        ...requestState,\n        /**\n     * @deprecated This prop has been deprecated and will be removed in the next major release.\n     */ __unstable_options: opts\n    };\n    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecatedObjectProperty)(clerkInstance, \"__unstable_options\", \"Use `createClerkClient({...})` to create a new clerk instance instead.\");\n    return clerkInstance;\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/backend/dist/esm/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   initialState: () => (/* binding */ initialState)\n/* harmony export */ });\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation */ \"(middleware)/../../node_modules/next/navigation.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _server_buildClerkProps__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../server/buildClerkProps */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js\");\n/* harmony import */ var _server_createGetAuth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/createGetAuth */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _server_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../server/errors */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js\");\n\n\n\n\n\nconst auth = ()=>{\n    const authObject = (0,_server_createGetAuth__WEBPACK_IMPORTED_MODULE_1__.createGetAuth)({\n        debugLoggerName: \"auth()\",\n        noAuthStatusMessage: (0,_server_errors__WEBPACK_IMPORTED_MODULE_2__.authAuthHeaderMissing)()\n    })((0,_utils__WEBPACK_IMPORTED_MODULE_3__.buildRequestLike)());\n    authObject.protect = (params, options)=>{\n        const paramsOrFunction = params?.redirectUrl ? void 0 : params;\n        const redirectUrl = params?.redirectUrl || options?.redirectUrl;\n        const handleUnauthorized = ()=>{\n            if (redirectUrl) {\n                (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.redirect)(redirectUrl);\n            }\n            (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.notFound)();\n        };\n        if (!authObject.userId) {\n            return handleUnauthorized();\n        }\n        if (!paramsOrFunction) {\n            return {\n                ...authObject\n            };\n        }\n        if (typeof paramsOrFunction === \"function\") {\n            if (paramsOrFunction(authObject.has)) {\n                return {\n                    ...authObject\n                };\n            }\n            return handleUnauthorized();\n        }\n        if (authObject.has(paramsOrFunction)) {\n            return {\n                ...authObject\n            };\n        }\n        return handleUnauthorized();\n    };\n    return authObject;\n};\nconst initialState = ()=>{\n    return (0,_server_buildClerkProps__WEBPACK_IMPORTED_MODULE_4__.buildClerkProps)((0,_utils__WEBPACK_IMPORTED_MODULE_3__.buildRequestLike)());\n};\n //# sourceMappingURL=auth.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL2FwcC1yb3V0ZXIvc2VydmVyL2F1dGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBcUQ7QUFDVTtBQUNKO0FBQ0M7QUFDakI7QUFDM0MsTUFBTU0sT0FBTztJQUNYLE1BQU1DLGFBQWFKLG9FQUFhQSxDQUFDO1FBQy9CSyxpQkFBaUI7UUFDakJDLHFCQUFxQkwscUVBQXFCQTtJQUM1QyxHQUFHQyx3REFBZ0JBO0lBQ25CRSxXQUFXRyxPQUFPLEdBQUcsQ0FBQ0MsUUFBUUM7UUFDNUIsTUFBTUMsbUJBQW1CRixRQUFRRyxjQUFjLEtBQUssSUFBSUg7UUFDeEQsTUFBTUcsY0FBY0gsUUFBUUcsZUFBZUYsU0FBU0U7UUFDcEQsTUFBTUMscUJBQXFCO1lBQ3pCLElBQUlELGFBQWE7Z0JBQ2ZiLHlEQUFRQSxDQUFDYTtZQUNYO1lBQ0FkLHlEQUFRQTtRQUNWO1FBQ0EsSUFBSSxDQUFDTyxXQUFXUyxNQUFNLEVBQUU7WUFDdEIsT0FBT0Q7UUFDVDtRQUNBLElBQUksQ0FBQ0Ysa0JBQWtCO1lBQ3JCLE9BQU87Z0JBQUUsR0FBR04sVUFBVTtZQUFDO1FBQ3pCO1FBQ0EsSUFBSSxPQUFPTSxxQkFBcUIsWUFBWTtZQUMxQyxJQUFJQSxpQkFBaUJOLFdBQVdVLEdBQUcsR0FBRztnQkFDcEMsT0FBTztvQkFBRSxHQUFHVixVQUFVO2dCQUFDO1lBQ3pCO1lBQ0EsT0FBT1E7UUFDVDtRQUNBLElBQUlSLFdBQVdVLEdBQUcsQ0FBQ0osbUJBQW1CO1lBQ3BDLE9BQU87Z0JBQUUsR0FBR04sVUFBVTtZQUFDO1FBQ3pCO1FBQ0EsT0FBT1E7SUFDVDtJQUNBLE9BQU9SO0FBQ1Q7QUFDQSxNQUFNVyxlQUFlO0lBQ25CLE9BQU9oQix3RUFBZUEsQ0FBQ0csd0RBQWdCQTtBQUN6QztBQUlFLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9hcHAtcm91dGVyL3NlcnZlci9hdXRoLmpzPzFkZWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm90Rm91bmQsIHJlZGlyZWN0IH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xuaW1wb3J0IHsgYnVpbGRDbGVya1Byb3BzIH0gZnJvbSBcIi4uLy4uL3NlcnZlci9idWlsZENsZXJrUHJvcHNcIjtcbmltcG9ydCB7IGNyZWF0ZUdldEF1dGggfSBmcm9tIFwiLi4vLi4vc2VydmVyL2NyZWF0ZUdldEF1dGhcIjtcbmltcG9ydCB7IGF1dGhBdXRoSGVhZGVyTWlzc2luZyB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvZXJyb3JzXCI7XG5pbXBvcnQgeyBidWlsZFJlcXVlc3RMaWtlIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmNvbnN0IGF1dGggPSAoKSA9PiB7XG4gIGNvbnN0IGF1dGhPYmplY3QgPSBjcmVhdGVHZXRBdXRoKHtcbiAgICBkZWJ1Z0xvZ2dlck5hbWU6IFwiYXV0aCgpXCIsXG4gICAgbm9BdXRoU3RhdHVzTWVzc2FnZTogYXV0aEF1dGhIZWFkZXJNaXNzaW5nKClcbiAgfSkoYnVpbGRSZXF1ZXN0TGlrZSgpKTtcbiAgYXV0aE9iamVjdC5wcm90ZWN0ID0gKHBhcmFtcywgb3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IHBhcmFtc09yRnVuY3Rpb24gPSBwYXJhbXM/LnJlZGlyZWN0VXJsID8gdm9pZCAwIDogcGFyYW1zO1xuICAgIGNvbnN0IHJlZGlyZWN0VXJsID0gcGFyYW1zPy5yZWRpcmVjdFVybCB8fCBvcHRpb25zPy5yZWRpcmVjdFVybDtcbiAgICBjb25zdCBoYW5kbGVVbmF1dGhvcml6ZWQgPSAoKSA9PiB7XG4gICAgICBpZiAocmVkaXJlY3RVcmwpIHtcbiAgICAgICAgcmVkaXJlY3QocmVkaXJlY3RVcmwpO1xuICAgICAgfVxuICAgICAgbm90Rm91bmQoKTtcbiAgICB9O1xuICAgIGlmICghYXV0aE9iamVjdC51c2VySWQpIHtcbiAgICAgIHJldHVybiBoYW5kbGVVbmF1dGhvcml6ZWQoKTtcbiAgICB9XG4gICAgaWYgKCFwYXJhbXNPckZ1bmN0aW9uKSB7XG4gICAgICByZXR1cm4geyAuLi5hdXRoT2JqZWN0IH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGFyYW1zT3JGdW5jdGlvbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBpZiAocGFyYW1zT3JGdW5jdGlvbihhdXRoT2JqZWN0LmhhcykpIHtcbiAgICAgICAgcmV0dXJuIHsgLi4uYXV0aE9iamVjdCB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIGhhbmRsZVVuYXV0aG9yaXplZCgpO1xuICAgIH1cbiAgICBpZiAoYXV0aE9iamVjdC5oYXMocGFyYW1zT3JGdW5jdGlvbikpIHtcbiAgICAgIHJldHVybiB7IC4uLmF1dGhPYmplY3QgfTtcbiAgICB9XG4gICAgcmV0dXJuIGhhbmRsZVVuYXV0aG9yaXplZCgpO1xuICB9O1xuICByZXR1cm4gYXV0aE9iamVjdDtcbn07XG5jb25zdCBpbml0aWFsU3RhdGUgPSAoKSA9PiB7XG4gIHJldHVybiBidWlsZENsZXJrUHJvcHMoYnVpbGRSZXF1ZXN0TGlrZSgpKTtcbn07XG5leHBvcnQge1xuICBhdXRoLFxuICBpbml0aWFsU3RhdGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJub3RGb3VuZCIsInJlZGlyZWN0IiwiYnVpbGRDbGVya1Byb3BzIiwiY3JlYXRlR2V0QXV0aCIsImF1dGhBdXRoSGVhZGVyTWlzc2luZyIsImJ1aWxkUmVxdWVzdExpa2UiLCJhdXRoIiwiYXV0aE9iamVjdCIsImRlYnVnTG9nZ2VyTmFtZSIsIm5vQXV0aFN0YXR1c01lc3NhZ2UiLCJwcm90ZWN0IiwicGFyYW1zIiwib3B0aW9ucyIsInBhcmFtc09yRnVuY3Rpb24iLCJyZWRpcmVjdFVybCIsImhhbmRsZVVuYXV0aG9yaXplZCIsInVzZXJJZCIsImhhcyIsImluaXRpYWxTdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   currentUser: () => (/* binding */ currentUser)\n/* harmony export */ });\n/* harmony import */ var _server_clerkClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/clerkClient */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n\n\nasync function currentUser() {\n    const { userId } = (0,_auth__WEBPACK_IMPORTED_MODULE_0__.auth)();\n    return userId ? _server_clerkClient__WEBPACK_IMPORTED_MODULE_1__.clerkClient.users.getUser(userId) : null;\n}\n //# sourceMappingURL=currentUser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL2FwcC1yb3V0ZXIvc2VydmVyL2N1cnJlbnRVc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RDtBQUN6QjtBQUM5QixlQUFlRTtJQUNiLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdGLDJDQUFJQTtJQUN2QixPQUFPRSxTQUFTSCw0REFBV0EsQ0FBQ0ksS0FBSyxDQUFDQyxPQUFPLENBQUNGLFVBQVU7QUFDdEQ7QUFHRSxDQUNGLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vYXBwLXJvdXRlci9zZXJ2ZXIvY3VycmVudFVzZXIuanM/MmYxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbGVya0NsaWVudCB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvY2xlcmtDbGllbnRcIjtcbmltcG9ydCB7IGF1dGggfSBmcm9tIFwiLi9hdXRoXCI7XG5hc3luYyBmdW5jdGlvbiBjdXJyZW50VXNlcigpIHtcbiAgY29uc3QgeyB1c2VySWQgfSA9IGF1dGgoKTtcbiAgcmV0dXJuIHVzZXJJZCA/IGNsZXJrQ2xpZW50LnVzZXJzLmdldFVzZXIodXNlcklkKSA6IG51bGw7XG59XG5leHBvcnQge1xuICBjdXJyZW50VXNlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWN1cnJlbnRVc2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJjbGVya0NsaWVudCIsImF1dGgiLCJjdXJyZW50VXNlciIsInVzZXJJZCIsInVzZXJzIiwiZ2V0VXNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildRequestLike: () => (/* binding */ buildRequestLike)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-request */ \"(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-request.js\");\n\nconst buildRequestLike = ()=>{\n    try {\n        const { headers } = __webpack_require__(/*! next/headers */ \"(middleware)/../../node_modules/next/headers.js\");\n        return new next_dist_server_web_exports_next_request__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"https://placeholder.com\", {\n            headers: headers()\n        });\n    } catch (e) {\n        if (e && \"message\" in e && typeof e.message === \"string\" && e.message.toLowerCase().includes(\"Dynamic server usage\".toLowerCase())) {\n            throw e;\n        }\n        throw new Error(`Clerk: auth() and currentUser() are only supported in App Router (/app directory).\nIf you're using /pages, try getAuth() instead.\nOriginal error: ${e}`);\n    }\n};\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL2FwcC1yb3V0ZXIvc2VydmVyL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQzFDLE1BQU1DLG1CQUFtQjtJQUN2QixJQUFJO1FBQ0YsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsbUJBQU9BLENBQUMscUVBQWM7UUFDMUMsT0FBTyxJQUFJSCxpRkFBV0EsQ0FBQywyQkFBMkI7WUFBRUUsU0FBU0E7UUFBVTtJQUN6RSxFQUFFLE9BQU9FLEdBQUc7UUFDVixJQUFJQSxLQUFLLGFBQWFBLEtBQUssT0FBT0EsRUFBRUMsT0FBTyxLQUFLLFlBQVlELEVBQUVDLE9BQU8sQ0FBQ0MsV0FBVyxHQUFHQyxRQUFRLENBQUMsdUJBQXVCRCxXQUFXLEtBQUs7WUFDbEksTUFBTUY7UUFDUjtRQUNBLE1BQU0sSUFBSUksTUFDUixDQUFDOztnQkFFUyxFQUFFSixFQUFFLENBQUM7SUFFbkI7QUFDRjtBQUdFLENBQ0YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9hcHAtcm91dGVyL3NlcnZlci91dGlscy5qcz9kMzU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0IH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5jb25zdCBidWlsZFJlcXVlc3RMaWtlID0gKCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHsgaGVhZGVycyB9ID0gcmVxdWlyZShcIm5leHQvaGVhZGVyc1wiKTtcbiAgICByZXR1cm4gbmV3IE5leHRSZXF1ZXN0KFwiaHR0cHM6Ly9wbGFjZWhvbGRlci5jb21cIiwgeyBoZWFkZXJzOiBoZWFkZXJzKCkgfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoZSAmJiBcIm1lc3NhZ2VcIiBpbiBlICYmIHR5cGVvZiBlLm1lc3NhZ2UgPT09IFwic3RyaW5nXCIgJiYgZS5tZXNzYWdlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoXCJEeW5hbWljIHNlcnZlciB1c2FnZVwiLnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgQ2xlcms6IGF1dGgoKSBhbmQgY3VycmVudFVzZXIoKSBhcmUgb25seSBzdXBwb3J0ZWQgaW4gQXBwIFJvdXRlciAoL2FwcCBkaXJlY3RvcnkpLlxuSWYgeW91J3JlIHVzaW5nIC9wYWdlcywgdHJ5IGdldEF1dGgoKSBpbnN0ZWFkLlxuT3JpZ2luYWwgZXJyb3I6ICR7ZX1gXG4gICAgKTtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIGJ1aWxkUmVxdWVzdExpa2Vcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiTmV4dFJlcXVlc3QiLCJidWlsZFJlcXVlc3RMaWtlIiwiaGVhZGVycyIsInJlcXVpcmUiLCJlIiwibWVzc2FnZSIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/utils.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/constants.js":
/*!**************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/constants.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constants: () => (/* binding */ constants)\n/* harmony export */ });\nconst Headers = {\n    NextRewrite: \"x-middleware-rewrite\",\n    NextResume: \"x-middleware-next\",\n    NextRedirect: \"Location\"\n};\nconst constants = {\n    Headers\n};\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsVUFBVTtJQUNkQyxhQUFhO0lBQ2JDLFlBQVk7SUFDWkMsY0FBYztBQUNoQjtBQUNBLE1BQU1DLFlBQVk7SUFDaEJKO0FBQ0Y7QUFHRSxDQUNGLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vY29uc3RhbnRzLmpzPzA0ZGYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSGVhZGVycyA9IHtcbiAgTmV4dFJld3JpdGU6IFwieC1taWRkbGV3YXJlLXJld3JpdGVcIixcbiAgTmV4dFJlc3VtZTogXCJ4LW1pZGRsZXdhcmUtbmV4dFwiLFxuICBOZXh0UmVkaXJlY3Q6IFwiTG9jYXRpb25cIlxufTtcbmNvbnN0IGNvbnN0YW50cyA9IHtcbiAgSGVhZGVyc1xufTtcbmV4cG9ydCB7XG4gIGNvbnN0YW50c1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiSGVhZGVycyIsIk5leHRSZXdyaXRlIiwiTmV4dFJlc3VtZSIsIk5leHRSZWRpcmVjdCIsImNvbnN0YW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/constants.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_API_ROUTES: () => (/* binding */ DEFAULT_API_ROUTES),\n/* harmony export */   DEFAULT_CONFIG_MATCHER: () => (/* binding */ DEFAULT_CONFIG_MATCHER),\n/* harmony export */   DEFAULT_IGNORED_ROUTES: () => (/* binding */ DEFAULT_IGNORED_ROUTES),\n/* harmony export */   authMiddleware: () => (/* binding */ authMiddleware),\n/* harmony export */   createRouteMatcher: () => (/* binding */ createRouteMatcher)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/../../node_modules/@clerk/backend/dist/esm/index.js\");\n/* harmony import */ var _clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/devBrowser */ \"(middleware)/../../node_modules/@clerk/shared/dist/devBrowser.mjs\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/index.js\");\n/* harmony import */ var _utils_debugLogger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/debugLogger */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\");\n/* harmony import */ var _authenticateRequest__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./authenticateRequest */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/authenticateRequest.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _redirect__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./redirect */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/redirect.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./url */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst INFINITE_REDIRECTION_LOOP_COOKIE = \"__clerk_redirection_loop\";\nconst DEFAULT_CONFIG_MATCHER = [\n    \"/((?!.+\\\\.[\\\\w]+$|_next).*)\",\n    \"/\",\n    \"/(api|trpc)(.*)\"\n];\nconst DEFAULT_IGNORED_ROUTES = [\n    `/((?!api|trpc))(_next.*|.+\\\\.[\\\\w]+$)`\n];\nconst DEFAULT_API_ROUTES = [\n    \"/api/(.*)\",\n    \"/trpc/(.*)\"\n];\nconst authMiddleware = (...args)=>{\n    const [params = {}] = args;\n    const { beforeAuth, afterAuth, publicRoutes, ignoredRoutes, apiRoutes, ...options } = params;\n    const isIgnoredRoute = createRouteMatcher(ignoredRoutes || DEFAULT_IGNORED_ROUTES);\n    const isPublicRoute = createRouteMatcher(withDefaultPublicRoutes(publicRoutes));\n    const isApiRoute = createApiRoutes(apiRoutes);\n    const defaultAfterAuth = createDefaultAfterAuth(isPublicRoute, isApiRoute, params);\n    return (0,_utils_debugLogger__WEBPACK_IMPORTED_MODULE_3__.withLogger)(\"authMiddleware\", (logger)=>async (_req, evt)=>{\n            if (options.debug) {\n                logger.enable();\n            }\n            const req = withNormalizedClerkUrl(_req);\n            logger.debug(\"URL debug\", {\n                url: req.nextUrl.href,\n                method: req.method,\n                headers: (0,_utils__WEBPACK_IMPORTED_MODULE_4__.stringifyHeaders)(req.headers),\n                nextUrl: req.nextUrl.href,\n                clerkUrl: req.experimental_clerkUrl.href\n            });\n            logger.debug(\"Options debug\", {\n                ...options,\n                beforeAuth: !!beforeAuth,\n                afterAuth: !!afterAuth\n            });\n            if (isIgnoredRoute(req)) {\n                logger.debug({\n                    isIgnoredRoute: true\n                });\n                if ((0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(options.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY) && !params.ignoredRoutes) {\n                    console.warn((0,_errors__WEBPACK_IMPORTED_MODULE_7__.receivedRequestForIgnoredRoute)(req.experimental_clerkUrl.href, JSON.stringify(DEFAULT_CONFIG_MATCHER)));\n                }\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setHeader)(next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].next(), _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"ignored-route\");\n            }\n            const beforeAuthRes = await (beforeAuth && beforeAuth(req, evt));\n            if (beforeAuthRes === false) {\n                logger.debug(\"Before auth returned false, skipping\");\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setHeader)(next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].next(), _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"skip\");\n            } else if (beforeAuthRes && (0,_utils__WEBPACK_IMPORTED_MODULE_4__.isRedirect)(beforeAuthRes)) {\n                logger.debug(\"Before auth returned redirect, following redirect\");\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setHeader)(beforeAuthRes, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"redirect\");\n            }\n            const requestState = await (0,_authenticateRequest__WEBPACK_IMPORTED_MODULE_8__.authenticateRequest)(req, options);\n            if (requestState.isUnknown) {\n                logger.debug(\"authenticateRequest state is unknown\", requestState);\n                return (0,_authenticateRequest__WEBPACK_IMPORTED_MODULE_8__.handleUnknownState)(requestState);\n            } else if (requestState.isInterstitial && isApiRoute(req)) {\n                logger.debug(\"authenticateRequest state is interstitial in an API route\", requestState);\n                return (0,_authenticateRequest__WEBPACK_IMPORTED_MODULE_8__.handleUnknownState)(requestState);\n            } else if (requestState.isInterstitial) {\n                logger.debug(\"authenticateRequest state is interstitial\", requestState);\n                assertClockSkew(requestState, options);\n                const res = (0,_authenticateRequest__WEBPACK_IMPORTED_MODULE_8__.handleInterstitialState)(requestState, options);\n                return assertInfiniteRedirectionLoop(req, res, options, requestState);\n            }\n            const auth = Object.assign(requestState.toAuth(), {\n                isPublicRoute: isPublicRoute(req),\n                isApiRoute: isApiRoute(req)\n            });\n            logger.debug(()=>({\n                    auth: JSON.stringify(auth),\n                    debug: auth.debug()\n                }));\n            const afterAuthRes = await (afterAuth || defaultAfterAuth)(auth, req, evt);\n            const finalRes = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.mergeResponses)(beforeAuthRes, afterAuthRes) || next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].next();\n            logger.debug(()=>({\n                    mergedHeaders: (0,_utils__WEBPACK_IMPORTED_MODULE_4__.stringifyHeaders)(finalRes.headers)\n                }));\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_4__.isRedirect)(finalRes)) {\n                logger.debug(\"Final response is redirect, following redirect\");\n                const res = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.setHeader)(finalRes, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, \"redirect\");\n                return appendDevBrowserOnCrossOrigin(req, res, options);\n            }\n            if (options.debug) {\n                (0,_utils__WEBPACK_IMPORTED_MODULE_5__.setRequestHeadersOnNextResponse)(finalRes, req, {\n                    [_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug]: \"true\"\n                });\n                logger.debug(`Added ${_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug} on request`);\n            }\n            return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.decorateRequest)(req, finalRes, requestState);\n        });\n};\nconst createRouteMatcher = (routes)=>{\n    if (typeof routes === \"function\") {\n        return (req)=>routes(req);\n    }\n    const routePatterns = [\n        routes || \"\"\n    ].flat().filter(Boolean);\n    const matchers = precomputePathRegex(routePatterns);\n    return (req)=>matchers.some((matcher)=>matcher.test(req.nextUrl.pathname));\n};\nconst createDefaultAfterAuth = (isPublicRoute, isApiRoute, params)=>{\n    return (auth, req)=>{\n        if (!auth.userId && !isPublicRoute(req)) {\n            if (isApiRoute(req)) {\n                informAboutProtectedRoute(req.experimental_clerkUrl.pathname, params, true);\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.apiEndpointUnauthorizedNextResponse)();\n            } else {\n                informAboutProtectedRoute(req.experimental_clerkUrl.pathname, params, false);\n            }\n            return (0,_redirect__WEBPACK_IMPORTED_MODULE_9__.redirectToSignIn)({\n                returnBackUrl: req.experimental_clerkUrl.href\n            });\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].next();\n    };\n};\nconst precomputePathRegex = (patterns)=>{\n    return patterns.map((pattern)=>pattern instanceof RegExp ? pattern : _utils__WEBPACK_IMPORTED_MODULE_4__.paths.toRegexp(pattern));\n};\nconst matchRoutesStartingWith = (path)=>{\n    path = path.replace(/\\/$/, \"\");\n    return new RegExp(`^${path}(/.*)?$`);\n};\nconst withDefaultPublicRoutes = (publicRoutes)=>{\n    if (typeof publicRoutes === \"function\") {\n        return publicRoutes;\n    }\n    const routes = [\n        publicRoutes || \"\"\n    ].flat().filter(Boolean);\n    const signInUrl = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || \"\";\n    if (signInUrl) {\n        routes.push(matchRoutesStartingWith(signInUrl));\n    }\n    const signUpUrl = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || \"\";\n    if (signUpUrl) {\n        routes.push(matchRoutesStartingWith(signUpUrl));\n    }\n    return routes;\n};\nconst appendDevBrowserOnCrossOrigin = (req, res, opts)=>{\n    const location = res.headers.get(\"location\");\n    const shouldAppendDevBrowser = res.headers.get(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRedirectTo) === \"true\";\n    if (shouldAppendDevBrowser && !!location && (0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(opts.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY) && (0,_utils__WEBPACK_IMPORTED_MODULE_5__.isCrossOrigin)(req.experimental_clerkUrl, location)) {\n        const dbJwt = req.cookies.get(_clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__.DEV_BROWSER_JWT_MARKER)?.value || \"\";\n        const url = new URL(location);\n        const asQueryParam = (0,_url__WEBPACK_IMPORTED_MODULE_10__.isDevAccountPortalOrigin)(url.hostname);\n        const urlWithDevBrowser = (0,_clerk_shared_devBrowser__WEBPACK_IMPORTED_MODULE_1__.setDevBrowserJWTInURL)(url, dbJwt, asQueryParam);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].redirect(urlWithDevBrowser.href, res);\n    }\n    return res;\n};\nconst createApiRoutes = (apiRoutes)=>{\n    if (apiRoutes) {\n        return createRouteMatcher(apiRoutes);\n    }\n    const isDefaultApiRoute = createRouteMatcher(DEFAULT_API_ROUTES);\n    return (req)=>isDefaultApiRoute(req) || isRequestMethodIndicatingApiRoute(req) || isRequestContentTypeJson(req);\n};\nconst isRequestContentTypeJson = (req)=>{\n    const requestContentType = req.headers.get(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ContentType);\n    return requestContentType === _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.ContentTypes.Json;\n};\nconst isRequestMethodIndicatingApiRoute = (req)=>{\n    const requestMethod = req.method.toLowerCase();\n    return ![\n        \"get\",\n        \"head\",\n        \"options\"\n    ].includes(requestMethod);\n};\nconst assertClockSkew = (requestState, opts)=>{\n    if (!(0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(opts.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY)) {\n        return;\n    }\n    if (requestState.reason === \"token-not-active-yet\") {\n        throw new Error((0,_errors__WEBPACK_IMPORTED_MODULE_7__.clockSkewDetected)(requestState.message));\n    }\n};\nconst assertInfiniteRedirectionLoop = (req, res, opts, requestState)=>{\n    if (!(0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(opts.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY)) {\n        return res;\n    }\n    const infiniteRedirectsCounter = Number(req.cookies.get(INFINITE_REDIRECTION_LOOP_COOKIE)?.value) || 0;\n    if (infiniteRedirectsCounter === 6) {\n        if (requestState.reason === \"token-expired\") {\n            throw new Error((0,_errors__WEBPACK_IMPORTED_MODULE_7__.clockSkewDetected)(requestState.message));\n        }\n        throw new Error((0,_errors__WEBPACK_IMPORTED_MODULE_7__.infiniteRedirectLoopDetected)());\n    }\n    if (req.headers.get(\"referer\") === req.url) {\n        res.cookies.set({\n            name: INFINITE_REDIRECTION_LOOP_COOKIE,\n            value: `${infiniteRedirectsCounter + 1}`,\n            maxAge: 3\n        });\n    }\n    return res;\n};\nconst withNormalizedClerkUrl = (req)=>{\n    const clerkUrl = req.nextUrl.clone();\n    const originUrl = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.buildRequestUrl)(req);\n    clerkUrl.port = originUrl.port;\n    clerkUrl.protocol = originUrl.protocol;\n    clerkUrl.host = originUrl.host;\n    return Object.assign(req, {\n        experimental_clerkUrl: clerkUrl\n    });\n};\nconst informAboutProtectedRoute = (path, params, isApiRoute)=>{\n    if (params.debug || (0,_utils__WEBPACK_IMPORTED_MODULE_5__.isDevelopmentFromApiKey)(params.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_6__.SECRET_KEY)) {\n        console.warn((0,_errors__WEBPACK_IMPORTED_MODULE_7__.informAboutProtectedRouteInfo)(path, !!params.publicRoutes, !!params.ignoredRoutes, isApiRoute, DEFAULT_IGNORED_ROUTES));\n    }\n};\n //# sourceMappingURL=authMiddleware.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/authenticateRequest.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/authenticateRequest.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticateRequest: () => (/* binding */ authenticateRequest),\n/* harmony export */   handleInterstitialState: () => (/* binding */ handleInterstitialState),\n/* harmony export */   handleUnknownState: () => (/* binding */ handleUnknownState)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n/* harmony import */ var _withClerkMiddleware__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./withClerkMiddleware */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/withClerkMiddleware.js\");\n\n\n\n\nconst authenticateRequest = async (req, opts)=>{\n    const { isSatellite, domain, signInUrl, proxyUrl } = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.handleMultiDomainAndProxy)(req, opts);\n    return await _clerkClient__WEBPACK_IMPORTED_MODULE_2__.clerkClient.authenticateRequest({\n        ...opts,\n        apiKey: opts.apiKey || _clerkClient__WEBPACK_IMPORTED_MODULE_2__.API_KEY,\n        secretKey: opts.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_2__.SECRET_KEY,\n        frontendApi: opts.frontendApi || _clerkClient__WEBPACK_IMPORTED_MODULE_2__.FRONTEND_API,\n        publishableKey: opts.publishableKey || _clerkClient__WEBPACK_IMPORTED_MODULE_2__.PUBLISHABLE_KEY,\n        isSatellite,\n        domain,\n        signInUrl,\n        proxyUrl,\n        request: req\n    });\n};\nconst handleUnknownState = (requestState)=>{\n    const response = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.apiEndpointUnauthorizedNextResponse)();\n    (0,_withClerkMiddleware__WEBPACK_IMPORTED_MODULE_3__.decorateResponseWithObservabilityHeaders)(response, requestState);\n    return response;\n};\nconst handleInterstitialState = (requestState, opts)=>{\n    const response = new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_clerkClient__WEBPACK_IMPORTED_MODULE_2__.clerkClient.localInterstitial({\n        frontendApi: opts.frontendApi || _clerkClient__WEBPACK_IMPORTED_MODULE_2__.FRONTEND_API,\n        publishableKey: opts.publishableKey || _clerkClient__WEBPACK_IMPORTED_MODULE_2__.PUBLISHABLE_KEY,\n        clerkJSUrl: _clerkClient__WEBPACK_IMPORTED_MODULE_2__.CLERK_JS_URL,\n        clerkJSVersion: _clerkClient__WEBPACK_IMPORTED_MODULE_2__.CLERK_JS_VERSION,\n        proxyUrl: requestState.proxyUrl,\n        isSatellite: requestState.isSatellite,\n        domain: requestState.domain,\n        debugData: (0,_clerkClient__WEBPACK_IMPORTED_MODULE_2__.debugRequestState)(requestState),\n        signInUrl: requestState.signInUrl\n    }), {\n        status: 401,\n        headers: {\n            \"content-type\": \"text/html\"\n        }\n    });\n    (0,_withClerkMiddleware__WEBPACK_IMPORTED_MODULE_3__.decorateResponseWithObservabilityHeaders)(response, requestState);\n    return response;\n};\n //# sourceMappingURL=authenticateRequest.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9hdXRoZW50aWNhdGVSZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkM7QUFVcEI7QUFDa0U7QUFDUjtBQUNqRixNQUFNWSxzQkFBc0IsT0FBT0MsS0FBS0M7SUFDdEMsTUFBTSxFQUFFQyxXQUFXLEVBQUVDLE1BQU0sRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUUsR0FBR1IsaUVBQXlCQSxDQUFDRyxLQUFLQztJQUNwRixPQUFPLE1BQU1WLHFEQUFXQSxDQUFDUSxtQkFBbUIsQ0FBQztRQUMzQyxHQUFHRSxJQUFJO1FBQ1BLLFFBQVFMLEtBQUtLLE1BQU0sSUFBSWxCLGlEQUFPQTtRQUM5Qm1CLFdBQVdOLEtBQUtNLFNBQVMsSUFBSVosb0RBQVVBO1FBQ3ZDYSxhQUFhUCxLQUFLTyxXQUFXLElBQUlmLHNEQUFZQTtRQUM3Q2dCLGdCQUFnQlIsS0FBS1EsY0FBYyxJQUFJZix5REFBZUE7UUFDdERRO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FLLFNBQVNWO0lBQ1g7QUFDRjtBQUNBLE1BQU1XLHFCQUFxQixDQUFDQztJQUMxQixNQUFNQyxXQUFXakIsMkVBQW1DQTtJQUNwREUsOEZBQXdDQSxDQUFDZSxVQUFVRDtJQUNuRCxPQUFPQztBQUNUO0FBQ0EsTUFBTUMsMEJBQTBCLENBQUNGLGNBQWNYO0lBQzdDLE1BQU1ZLFdBQVcsSUFBSTFCLGtGQUFZQSxDQUMvQkkscURBQVdBLENBQUN3QixpQkFBaUIsQ0FBQztRQUM1QlAsYUFBYVAsS0FBS08sV0FBVyxJQUFJZixzREFBWUE7UUFDN0NnQixnQkFBZ0JSLEtBQUtRLGNBQWMsSUFBSWYseURBQWVBO1FBQ3REc0IsWUFBWTNCLHNEQUFZQTtRQUN4QjRCLGdCQUFnQjNCLDBEQUFnQkE7UUFDaENlLFVBQVVPLGFBQWFQLFFBQVE7UUFDL0JILGFBQWFVLGFBQWFWLFdBQVc7UUFDckNDLFFBQVFTLGFBQWFULE1BQU07UUFDM0JlLFdBQVcxQiwrREFBaUJBLENBQUNvQjtRQUM3QlIsV0FBV1EsYUFBYVIsU0FBUztJQUNuQyxJQUNBO1FBQ0VlLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtRQUNsQjtJQUNGO0lBRUZ0Qiw4RkFBd0NBLENBQUNlLFVBQVVEO0lBQ25ELE9BQU9DO0FBQ1Q7QUFLRSxDQUNGLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2F1dGhlbnRpY2F0ZVJlcXVlc3QuanM/YjllYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7XG4gIEFQSV9LRVksXG4gIENMRVJLX0pTX1VSTCxcbiAgQ0xFUktfSlNfVkVSU0lPTixcbiAgY2xlcmtDbGllbnQsXG4gIGRlYnVnUmVxdWVzdFN0YXRlLFxuICBGUk9OVEVORF9BUEksXG4gIFBVQkxJU0hBQkxFX0tFWSxcbiAgU0VDUkVUX0tFWVxufSBmcm9tIFwiLi9jbGVya0NsaWVudFwiO1xuaW1wb3J0IHsgYXBpRW5kcG9pbnRVbmF1dGhvcml6ZWROZXh0UmVzcG9uc2UsIGhhbmRsZU11bHRpRG9tYWluQW5kUHJveHkgfSBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHsgZGVjb3JhdGVSZXNwb25zZVdpdGhPYnNlcnZhYmlsaXR5SGVhZGVycyB9IGZyb20gXCIuL3dpdGhDbGVya01pZGRsZXdhcmVcIjtcbmNvbnN0IGF1dGhlbnRpY2F0ZVJlcXVlc3QgPSBhc3luYyAocmVxLCBvcHRzKSA9PiB7XG4gIGNvbnN0IHsgaXNTYXRlbGxpdGUsIGRvbWFpbiwgc2lnbkluVXJsLCBwcm94eVVybCB9ID0gaGFuZGxlTXVsdGlEb21haW5BbmRQcm94eShyZXEsIG9wdHMpO1xuICByZXR1cm4gYXdhaXQgY2xlcmtDbGllbnQuYXV0aGVudGljYXRlUmVxdWVzdCh7XG4gICAgLi4ub3B0cyxcbiAgICBhcGlLZXk6IG9wdHMuYXBpS2V5IHx8IEFQSV9LRVksXG4gICAgc2VjcmV0S2V5OiBvcHRzLnNlY3JldEtleSB8fCBTRUNSRVRfS0VZLFxuICAgIGZyb250ZW5kQXBpOiBvcHRzLmZyb250ZW5kQXBpIHx8IEZST05URU5EX0FQSSxcbiAgICBwdWJsaXNoYWJsZUtleTogb3B0cy5wdWJsaXNoYWJsZUtleSB8fCBQVUJMSVNIQUJMRV9LRVksXG4gICAgaXNTYXRlbGxpdGUsXG4gICAgZG9tYWluLFxuICAgIHNpZ25JblVybCxcbiAgICBwcm94eVVybCxcbiAgICByZXF1ZXN0OiByZXFcbiAgfSk7XG59O1xuY29uc3QgaGFuZGxlVW5rbm93blN0YXRlID0gKHJlcXVlc3RTdGF0ZSkgPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGFwaUVuZHBvaW50VW5hdXRob3JpemVkTmV4dFJlc3BvbnNlKCk7XG4gIGRlY29yYXRlUmVzcG9uc2VXaXRoT2JzZXJ2YWJpbGl0eUhlYWRlcnMocmVzcG9uc2UsIHJlcXVlc3RTdGF0ZSk7XG4gIHJldHVybiByZXNwb25zZTtcbn07XG5jb25zdCBoYW5kbGVJbnRlcnN0aXRpYWxTdGF0ZSA9IChyZXF1ZXN0U3RhdGUsIG9wdHMpID0+IHtcbiAgY29uc3QgcmVzcG9uc2UgPSBuZXcgTmV4dFJlc3BvbnNlKFxuICAgIGNsZXJrQ2xpZW50LmxvY2FsSW50ZXJzdGl0aWFsKHtcbiAgICAgIGZyb250ZW5kQXBpOiBvcHRzLmZyb250ZW5kQXBpIHx8IEZST05URU5EX0FQSSxcbiAgICAgIHB1Ymxpc2hhYmxlS2V5OiBvcHRzLnB1Ymxpc2hhYmxlS2V5IHx8IFBVQkxJU0hBQkxFX0tFWSxcbiAgICAgIGNsZXJrSlNVcmw6IENMRVJLX0pTX1VSTCxcbiAgICAgIGNsZXJrSlNWZXJzaW9uOiBDTEVSS19KU19WRVJTSU9OLFxuICAgICAgcHJveHlVcmw6IHJlcXVlc3RTdGF0ZS5wcm94eVVybCxcbiAgICAgIGlzU2F0ZWxsaXRlOiByZXF1ZXN0U3RhdGUuaXNTYXRlbGxpdGUsXG4gICAgICBkb21haW46IHJlcXVlc3RTdGF0ZS5kb21haW4sXG4gICAgICBkZWJ1Z0RhdGE6IGRlYnVnUmVxdWVzdFN0YXRlKHJlcXVlc3RTdGF0ZSksXG4gICAgICBzaWduSW5Vcmw6IHJlcXVlc3RTdGF0ZS5zaWduSW5VcmxcbiAgICB9KSxcbiAgICB7XG4gICAgICBzdGF0dXM6IDQwMSxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJ0ZXh0L2h0bWxcIlxuICAgICAgfVxuICAgIH1cbiAgKTtcbiAgZGVjb3JhdGVSZXNwb25zZVdpdGhPYnNlcnZhYmlsaXR5SGVhZGVycyhyZXNwb25zZSwgcmVxdWVzdFN0YXRlKTtcbiAgcmV0dXJuIHJlc3BvbnNlO1xufTtcbmV4cG9ydCB7XG4gIGF1dGhlbnRpY2F0ZVJlcXVlc3QsXG4gIGhhbmRsZUludGVyc3RpdGlhbFN0YXRlLFxuICBoYW5kbGVVbmtub3duU3RhdGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoZW50aWNhdGVSZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJBUElfS0VZIiwiQ0xFUktfSlNfVVJMIiwiQ0xFUktfSlNfVkVSU0lPTiIsImNsZXJrQ2xpZW50IiwiZGVidWdSZXF1ZXN0U3RhdGUiLCJGUk9OVEVORF9BUEkiLCJQVUJMSVNIQUJMRV9LRVkiLCJTRUNSRVRfS0VZIiwiYXBpRW5kcG9pbnRVbmF1dGhvcml6ZWROZXh0UmVzcG9uc2UiLCJoYW5kbGVNdWx0aURvbWFpbkFuZFByb3h5IiwiZGVjb3JhdGVSZXNwb25zZVdpdGhPYnNlcnZhYmlsaXR5SGVhZGVycyIsImF1dGhlbnRpY2F0ZVJlcXVlc3QiLCJyZXEiLCJvcHRzIiwiaXNTYXRlbGxpdGUiLCJkb21haW4iLCJzaWduSW5VcmwiLCJwcm94eVVybCIsImFwaUtleSIsInNlY3JldEtleSIsImZyb250ZW5kQXBpIiwicHVibGlzaGFibGVLZXkiLCJyZXF1ZXN0IiwiaGFuZGxlVW5rbm93blN0YXRlIiwicmVxdWVzdFN0YXRlIiwicmVzcG9uc2UiLCJoYW5kbGVJbnRlcnN0aXRpYWxTdGF0ZSIsImxvY2FsSW50ZXJzdGl0aWFsIiwiY2xlcmtKU1VybCIsImNsZXJrSlNWZXJzaW9uIiwiZGVidWdEYXRhIiwic3RhdHVzIiwiaGVhZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/authenticateRequest.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClerkProps: () => (/* binding */ buildClerkProps)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/../../node_modules/@clerk/backend/dist/esm/index.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n\n\n\nconst buildClerkProps = (req, initState = {})=>{\n    const authToken = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getAuthKeyFromRequest)(req, \"AuthToken\");\n    const authStatus = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getAuthKeyFromRequest)(req, \"AuthStatus\");\n    const authMessage = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getAuthKeyFromRequest)(req, \"AuthMessage\");\n    const authReason = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getAuthKeyFromRequest)(req, \"AuthReason\");\n    const options = {\n        apiKey: _clerkClient__WEBPACK_IMPORTED_MODULE_2__.API_KEY,\n        secretKey: _clerkClient__WEBPACK_IMPORTED_MODULE_2__.SECRET_KEY,\n        apiUrl: _clerkClient__WEBPACK_IMPORTED_MODULE_2__.API_URL,\n        apiVersion: _clerkClient__WEBPACK_IMPORTED_MODULE_2__.API_VERSION,\n        authStatus,\n        authMessage,\n        authReason\n    };\n    let authObject;\n    if (!authStatus || authStatus !== _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.AuthStatus.SignedIn) {\n        authObject = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.signedOutAuthObject)(options);\n    } else {\n        const { payload, raw } = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(authToken);\n        authObject = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.signedInAuthObject)(payload, {\n            ...options,\n            token: raw.text\n        });\n    }\n    const sanitizedAuthObject = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.makeAuthObjectSerializable)((0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.sanitizeAuthObject)({\n        ...authObject,\n        ...initState\n    }));\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.injectSSRStateIntoObject)({}, sanitizedAuthObject);\n};\n //# sourceMappingURL=buildClerkProps.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9idWlsZENsZXJrUHJvcHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQU93QjtBQUNrRDtBQUNBO0FBQzFFLE1BQU1ZLGtCQUFrQixDQUFDQyxLQUFLQyxZQUFZLENBQUMsQ0FBQztJQUMxQyxNQUFNQyxZQUFZTCw2REFBcUJBLENBQUNHLEtBQUs7SUFDN0MsTUFBTUcsYUFBYU4sNkRBQXFCQSxDQUFDRyxLQUFLO0lBQzlDLE1BQU1JLGNBQWNQLDZEQUFxQkEsQ0FBQ0csS0FBSztJQUMvQyxNQUFNSyxhQUFhUiw2REFBcUJBLENBQUNHLEtBQUs7SUFDOUMsTUFBTU0sVUFBVTtRQUNkQyxRQUFRZCxpREFBT0E7UUFDZmUsV0FBV1osb0RBQVVBO1FBQ3JCYSxRQUFRZixpREFBT0E7UUFDZmdCLFlBQVlmLHFEQUFXQTtRQUN2QlE7UUFDQUM7UUFDQUM7SUFDRjtJQUNBLElBQUlNO0lBQ0osSUFBSSxDQUFDUixjQUFjQSxlQUFlaEIsc0RBQVVBLENBQUN5QixRQUFRLEVBQUU7UUFDckRELGFBQWFuQixtRUFBbUJBLENBQUNjO0lBQ25DLE9BQU87UUFDTCxNQUFNLEVBQUVPLE9BQU8sRUFBRUMsR0FBRyxFQUFFLEdBQUcxQix5REFBU0EsQ0FBQ2M7UUFDbkNTLGFBQWFwQixrRUFBa0JBLENBQUNzQixTQUFTO1lBQUUsR0FBR1AsT0FBTztZQUFFUyxPQUFPRCxJQUFJRSxJQUFJO1FBQUM7SUFDekU7SUFDQSxNQUFNQyxzQkFBc0I1QiwwRUFBMEJBLENBQUNDLGtFQUFrQkEsQ0FBQztRQUFFLEdBQUdxQixVQUFVO1FBQUUsR0FBR1YsU0FBUztJQUFDO0lBQ3hHLE9BQU9ILGdFQUF3QkEsQ0FBQyxDQUFDLEdBQUdtQjtBQUN0QztBQUdFLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvYnVpbGRDbGVya1Byb3BzLmpzPzFiMjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQXV0aFN0YXR1cyxcbiAgZGVjb2RlSnd0LFxuICBtYWtlQXV0aE9iamVjdFNlcmlhbGl6YWJsZSxcbiAgc2FuaXRpemVBdXRoT2JqZWN0LFxuICBzaWduZWRJbkF1dGhPYmplY3QsXG4gIHNpZ25lZE91dEF1dGhPYmplY3Rcbn0gZnJvbSBcIkBjbGVyay9iYWNrZW5kXCI7XG5pbXBvcnQgeyBBUElfS0VZLCBBUElfVVJMLCBBUElfVkVSU0lPTiwgU0VDUkVUX0tFWSB9IGZyb20gXCIuL2NsZXJrQ2xpZW50XCI7XG5pbXBvcnQgeyBnZXRBdXRoS2V5RnJvbVJlcXVlc3QsIGluamVjdFNTUlN0YXRlSW50b09iamVjdCB9IGZyb20gXCIuL3V0aWxzXCI7XG5jb25zdCBidWlsZENsZXJrUHJvcHMgPSAocmVxLCBpbml0U3RhdGUgPSB7fSkgPT4ge1xuICBjb25zdCBhdXRoVG9rZW4gPSBnZXRBdXRoS2V5RnJvbVJlcXVlc3QocmVxLCBcIkF1dGhUb2tlblwiKTtcbiAgY29uc3QgYXV0aFN0YXR1cyA9IGdldEF1dGhLZXlGcm9tUmVxdWVzdChyZXEsIFwiQXV0aFN0YXR1c1wiKTtcbiAgY29uc3QgYXV0aE1lc3NhZ2UgPSBnZXRBdXRoS2V5RnJvbVJlcXVlc3QocmVxLCBcIkF1dGhNZXNzYWdlXCIpO1xuICBjb25zdCBhdXRoUmVhc29uID0gZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcSwgXCJBdXRoUmVhc29uXCIpO1xuICBjb25zdCBvcHRpb25zID0ge1xuICAgIGFwaUtleTogQVBJX0tFWSxcbiAgICBzZWNyZXRLZXk6IFNFQ1JFVF9LRVksXG4gICAgYXBpVXJsOiBBUElfVVJMLFxuICAgIGFwaVZlcnNpb246IEFQSV9WRVJTSU9OLFxuICAgIGF1dGhTdGF0dXMsXG4gICAgYXV0aE1lc3NhZ2UsXG4gICAgYXV0aFJlYXNvblxuICB9O1xuICBsZXQgYXV0aE9iamVjdDtcbiAgaWYgKCFhdXRoU3RhdHVzIHx8IGF1dGhTdGF0dXMgIT09IEF1dGhTdGF0dXMuU2lnbmVkSW4pIHtcbiAgICBhdXRoT2JqZWN0ID0gc2lnbmVkT3V0QXV0aE9iamVjdChvcHRpb25zKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCB7IHBheWxvYWQsIHJhdyB9ID0gZGVjb2RlSnd0KGF1dGhUb2tlbik7XG4gICAgYXV0aE9iamVjdCA9IHNpZ25lZEluQXV0aE9iamVjdChwYXlsb2FkLCB7IC4uLm9wdGlvbnMsIHRva2VuOiByYXcudGV4dCB9KTtcbiAgfVxuICBjb25zdCBzYW5pdGl6ZWRBdXRoT2JqZWN0ID0gbWFrZUF1dGhPYmplY3RTZXJpYWxpemFibGUoc2FuaXRpemVBdXRoT2JqZWN0KHsgLi4uYXV0aE9iamVjdCwgLi4uaW5pdFN0YXRlIH0pKTtcbiAgcmV0dXJuIGluamVjdFNTUlN0YXRlSW50b09iamVjdCh7fSwgc2FuaXRpemVkQXV0aE9iamVjdCk7XG59O1xuZXhwb3J0IHtcbiAgYnVpbGRDbGVya1Byb3BzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YnVpbGRDbGVya1Byb3BzLmpzLm1hcCJdLCJuYW1lcyI6WyJBdXRoU3RhdHVzIiwiZGVjb2RlSnd0IiwibWFrZUF1dGhPYmplY3RTZXJpYWxpemFibGUiLCJzYW5pdGl6ZUF1dGhPYmplY3QiLCJzaWduZWRJbkF1dGhPYmplY3QiLCJzaWduZWRPdXRBdXRoT2JqZWN0IiwiQVBJX0tFWSIsIkFQSV9VUkwiLCJBUElfVkVSU0lPTiIsIlNFQ1JFVF9LRVkiLCJnZXRBdXRoS2V5RnJvbVJlcXVlc3QiLCJpbmplY3RTU1JTdGF0ZUludG9PYmplY3QiLCJidWlsZENsZXJrUHJvcHMiLCJyZXEiLCJpbml0U3RhdGUiLCJhdXRoVG9rZW4iLCJhdXRoU3RhdHVzIiwiYXV0aE1lc3NhZ2UiLCJhdXRoUmVhc29uIiwib3B0aW9ucyIsImFwaUtleSIsInNlY3JldEtleSIsImFwaVVybCIsImFwaVZlcnNpb24iLCJhdXRoT2JqZWN0IiwiU2lnbmVkSW4iLCJwYXlsb2FkIiwicmF3IiwidG9rZW4iLCJ0ZXh0Iiwic2FuaXRpemVkQXV0aE9iamVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Clerk: () => (/* reexport safe */ _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.Clerk),\n/* harmony export */   clerkClient: () => (/* binding */ clerkClient),\n/* harmony export */   createClerkClient: () => (/* binding */ createClerkClient)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/../../node_modules/@clerk/backend/dist/esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/constants.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _clerk_backend__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"Clerk\",\"clerkClient\",\"createClerkClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _clerk_backend__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _constants__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"Clerk\",\"clerkClient\",\"createClerkClient\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _constants__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\nconst clerkClient = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.Clerk)({\n    apiKey: _constants__WEBPACK_IMPORTED_MODULE_1__.API_KEY,\n    secretKey: _constants__WEBPACK_IMPORTED_MODULE_1__.SECRET_KEY,\n    apiUrl: _constants__WEBPACK_IMPORTED_MODULE_1__.API_URL,\n    apiVersion: _constants__WEBPACK_IMPORTED_MODULE_1__.API_VERSION,\n    userAgent: `${\"@clerk/nextjs\"}@${\"4.29.3\"}`,\n    proxyUrl: _constants__WEBPACK_IMPORTED_MODULE_1__.PROXY_URL,\n    domain: _constants__WEBPACK_IMPORTED_MODULE_1__.DOMAIN,\n    isSatellite: _constants__WEBPACK_IMPORTED_MODULE_1__.IS_SATELLITE\n});\nconst createClerkClient = _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.Clerk;\n\n\n //# sourceMappingURL=clerkClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9jbGVya0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUF1QztBQUNrRTtBQUN6RyxNQUFNUSxjQUFjUixxREFBS0EsQ0FBQztJQUN4QlMsUUFBUVIsK0NBQU9BO0lBQ2ZTLFdBQVdILGtEQUFVQTtJQUNyQkksUUFBUVQsK0NBQU9BO0lBQ2ZVLFlBQVlULG1EQUFXQTtJQUN2QlUsV0FBVyxDQUFDLEVBQUUsZ0JBQWdCLENBQUMsRUFBRSxTQUFTLENBQUM7SUFDM0NDLFVBQVVSLGlEQUFTQTtJQUNuQlMsUUFBUVgsOENBQU1BO0lBQ2RZLGFBQWFYLG9EQUFZQTtBQUMzQjtBQUNBLE1BQU1ZLG9CQUFvQmpCLGlEQUFLQTtBQUNBO0FBQ0g7QUFLMUIsQ0FDRix1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9jbGVya0NsaWVudC5qcz84NjQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsZXJrIH0gZnJvbSBcIkBjbGVyay9iYWNrZW5kXCI7XG5pbXBvcnQgeyBBUElfS0VZLCBBUElfVVJMLCBBUElfVkVSU0lPTiwgRE9NQUlOLCBJU19TQVRFTExJVEUsIFBST1hZX1VSTCwgU0VDUkVUX0tFWSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuY29uc3QgY2xlcmtDbGllbnQgPSBDbGVyayh7XG4gIGFwaUtleTogQVBJX0tFWSxcbiAgc2VjcmV0S2V5OiBTRUNSRVRfS0VZLFxuICBhcGlVcmw6IEFQSV9VUkwsXG4gIGFwaVZlcnNpb246IEFQSV9WRVJTSU9OLFxuICB1c2VyQWdlbnQ6IGAke1wiQGNsZXJrL25leHRqc1wifUAke1wiNC4yOS4zXCJ9YCxcbiAgcHJveHlVcmw6IFBST1hZX1VSTCxcbiAgZG9tYWluOiBET01BSU4sXG4gIGlzU2F0ZWxsaXRlOiBJU19TQVRFTExJVEVcbn0pO1xuY29uc3QgY3JlYXRlQ2xlcmtDbGllbnQgPSBDbGVyaztcbmV4cG9ydCAqIGZyb20gXCJAY2xlcmsvYmFja2VuZFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQge1xuICBDbGVyayxcbiAgY2xlcmtDbGllbnQsXG4gIGNyZWF0ZUNsZXJrQ2xpZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xlcmtDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbIkNsZXJrIiwiQVBJX0tFWSIsIkFQSV9VUkwiLCJBUElfVkVSU0lPTiIsIkRPTUFJTiIsIklTX1NBVEVMTElURSIsIlBST1hZX1VSTCIsIlNFQ1JFVF9LRVkiLCJjbGVya0NsaWVudCIsImFwaUtleSIsInNlY3JldEtleSIsImFwaVVybCIsImFwaVZlcnNpb24iLCJ1c2VyQWdlbnQiLCJwcm94eVVybCIsImRvbWFpbiIsImlzU2F0ZWxsaXRlIiwiY3JlYXRlQ2xlcmtDbGllbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/constants.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/constants.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_KEY: () => (/* binding */ API_KEY),\n/* harmony export */   API_URL: () => (/* binding */ API_URL),\n/* harmony export */   API_VERSION: () => (/* binding */ API_VERSION),\n/* harmony export */   CLERK_JS_URL: () => (/* binding */ CLERK_JS_URL),\n/* harmony export */   CLERK_JS_VERSION: () => (/* binding */ CLERK_JS_VERSION),\n/* harmony export */   DOMAIN: () => (/* binding */ DOMAIN),\n/* harmony export */   FRONTEND_API: () => (/* binding */ FRONTEND_API),\n/* harmony export */   IS_SATELLITE: () => (/* binding */ IS_SATELLITE),\n/* harmony export */   JS_VERSION: () => (/* binding */ JS_VERSION),\n/* harmony export */   PROXY_URL: () => (/* binding */ PROXY_URL),\n/* harmony export */   PUBLISHABLE_KEY: () => (/* binding */ PUBLISHABLE_KEY),\n/* harmony export */   SECRET_KEY: () => (/* binding */ SECRET_KEY),\n/* harmony export */   SIGN_IN_URL: () => (/* binding */ SIGN_IN_URL),\n/* harmony export */   SIGN_UP_URL: () => (/* binding */ SIGN_UP_URL)\n/* harmony export */ });\n/* harmony import */ var _clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/shared/deprecated */ \"(middleware)/../../node_modules/@clerk/shared/dist/deprecated.mjs\");\n\nconst JS_VERSION = process.env.CLERK_JS_VERSION || \"\";\nif (JS_VERSION) {\n    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"CLERK_JS_VERSION\", \"Use `NEXT_PUBLIC_CLERK_JS_VERSION` environment variable instead.\");\n}\nconst CLERK_JS_VERSION = process.env.NEXT_PUBLIC_CLERK_JS_VERSION || \"\";\nconst CLERK_JS_URL = process.env.NEXT_PUBLIC_CLERK_JS || \"\";\nconst API_URL = process.env.CLERK_API_URL || \"https://api.clerk.dev\";\nconst API_VERSION = process.env.CLERK_API_VERSION || \"v1\";\nconst API_KEY = process.env.CLERK_API_KEY || \"\";\nif (API_KEY) {\n    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"CLERK_API_KEY\", \"Use `CLERK_SECRET_KEY` environment variable instead.\");\n}\nconst SECRET_KEY = process.env.CLERK_SECRET_KEY || \"\";\nconst FRONTEND_API = process.env.NEXT_PUBLIC_CLERK_FRONTEND_API || \"\";\nif (FRONTEND_API) {\n    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"NEXT_PUBLIC_CLERK_FRONTEND_API\", \"Use `NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY` environment variable instead.\");\n}\nconst PUBLISHABLE_KEY = \"pk_test_Ym9sZC10ZWFsLTU3LmNsZXJrLmFjY291bnRzLmRldiQ\" || 0;\nconst DOMAIN = process.env.NEXT_PUBLIC_CLERK_DOMAIN || \"\";\nconst PROXY_URL = process.env.NEXT_PUBLIC_CLERK_PROXY_URL || \"\";\nconst IS_SATELLITE = process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE === \"true\" || false;\nconst SIGN_IN_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || \"\";\nconst SIGN_UP_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || \"\";\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNEO0FBQ3RELE1BQU1DLGFBQWFDLFFBQVFDLEdBQUcsQ0FBQ0MsZ0JBQWdCLElBQUk7QUFDbkQsSUFBSUgsWUFBWTtJQUNkRCxvRUFBVUEsQ0FBQyxvQkFBb0I7QUFDakM7QUFDQSxNQUFNSSxtQkFBbUJGLFFBQVFDLEdBQUcsQ0FBQ0UsNEJBQTRCLElBQUk7QUFDckUsTUFBTUMsZUFBZUosUUFBUUMsR0FBRyxDQUFDSSxvQkFBb0IsSUFBSTtBQUN6RCxNQUFNQyxVQUFVTixRQUFRQyxHQUFHLENBQUNNLGFBQWEsSUFBSTtBQUM3QyxNQUFNQyxjQUFjUixRQUFRQyxHQUFHLENBQUNRLGlCQUFpQixJQUFJO0FBQ3JELE1BQU1DLFVBQVVWLFFBQVFDLEdBQUcsQ0FBQ1UsYUFBYSxJQUFJO0FBQzdDLElBQUlELFNBQVM7SUFDWFosb0VBQVVBLENBQUMsaUJBQWlCO0FBQzlCO0FBQ0EsTUFBTWMsYUFBYVosUUFBUUMsR0FBRyxDQUFDWSxnQkFBZ0IsSUFBSTtBQUNuRCxNQUFNQyxlQUFlZCxRQUFRQyxHQUFHLENBQUNjLDhCQUE4QixJQUFJO0FBQ25FLElBQUlELGNBQWM7SUFDaEJoQixvRUFBVUEsQ0FBQyxrQ0FBa0M7QUFDL0M7QUFDQSxNQUFNa0Isa0JBQWtCaEIscURBQTZDLElBQUksQ0FBRTtBQUMzRSxNQUFNa0IsU0FBU2xCLFFBQVFDLEdBQUcsQ0FBQ2tCLHdCQUF3QixJQUFJO0FBQ3ZELE1BQU1DLFlBQVlwQixRQUFRQyxHQUFHLENBQUNvQiwyQkFBMkIsSUFBSTtBQUM3RCxNQUFNQyxlQUFldEIsUUFBUUMsR0FBRyxDQUFDc0IsOEJBQThCLEtBQUssVUFBVTtBQUM5RSxNQUFNQyxjQUFjeEIsUUFBUUMsR0FBRyxDQUFDd0IsNkJBQTZCLElBQUk7QUFDakUsTUFBTUMsY0FBYzFCLFFBQVFDLEdBQUcsQ0FBQzBCLDZCQUE2QixJQUFJO0FBZ0IvRCxDQUNGLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL2NvbnN0YW50cy5qcz9iZGJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlcHJlY2F0ZWQgfSBmcm9tIFwiQGNsZXJrL3NoYXJlZC9kZXByZWNhdGVkXCI7XG5jb25zdCBKU19WRVJTSU9OID0gcHJvY2Vzcy5lbnYuQ0xFUktfSlNfVkVSU0lPTiB8fCBcIlwiO1xuaWYgKEpTX1ZFUlNJT04pIHtcbiAgZGVwcmVjYXRlZChcIkNMRVJLX0pTX1ZFUlNJT05cIiwgXCJVc2UgYE5FWFRfUFVCTElDX0NMRVJLX0pTX1ZFUlNJT05gIGVudmlyb25tZW50IHZhcmlhYmxlIGluc3RlYWQuXCIpO1xufVxuY29uc3QgQ0xFUktfSlNfVkVSU0lPTiA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0pTX1ZFUlNJT04gfHwgXCJcIjtcbmNvbnN0IENMRVJLX0pTX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0pTIHx8IFwiXCI7XG5jb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuQ0xFUktfQVBJX1VSTCB8fCBcImh0dHBzOi8vYXBpLmNsZXJrLmRldlwiO1xuY29uc3QgQVBJX1ZFUlNJT04gPSBwcm9jZXNzLmVudi5DTEVSS19BUElfVkVSU0lPTiB8fCBcInYxXCI7XG5jb25zdCBBUElfS0VZID0gcHJvY2Vzcy5lbnYuQ0xFUktfQVBJX0tFWSB8fCBcIlwiO1xuaWYgKEFQSV9LRVkpIHtcbiAgZGVwcmVjYXRlZChcIkNMRVJLX0FQSV9LRVlcIiwgXCJVc2UgYENMRVJLX1NFQ1JFVF9LRVlgIGVudmlyb25tZW50IHZhcmlhYmxlIGluc3RlYWQuXCIpO1xufVxuY29uc3QgU0VDUkVUX0tFWSA9IHByb2Nlc3MuZW52LkNMRVJLX1NFQ1JFVF9LRVkgfHwgXCJcIjtcbmNvbnN0IEZST05URU5EX0FQSSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX0ZST05URU5EX0FQSSB8fCBcIlwiO1xuaWYgKEZST05URU5EX0FQSSkge1xuICBkZXByZWNhdGVkKFwiTkVYVF9QVUJMSUNfQ0xFUktfRlJPTlRFTkRfQVBJXCIsIFwiVXNlIGBORVhUX1BVQkxJQ19DTEVSS19QVUJMSVNIQUJMRV9LRVlgIGVudmlyb25tZW50IHZhcmlhYmxlIGluc3RlYWQuXCIpO1xufVxuY29uc3QgUFVCTElTSEFCTEVfS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfUFVCTElTSEFCTEVfS0VZIHx8IFwiXCI7XG5jb25zdCBET01BSU4gPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19DTEVSS19ET01BSU4gfHwgXCJcIjtcbmNvbnN0IFBST1hZX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0NMRVJLX1BST1hZX1VSTCB8fCBcIlwiO1xuY29uc3QgSVNfU0FURUxMSVRFID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfSVNfU0FURUxMSVRFID09PSBcInRydWVcIiB8fCBmYWxzZTtcbmNvbnN0IFNJR05fSU5fVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfU0lHTl9JTl9VUkwgfHwgXCJcIjtcbmNvbnN0IFNJR05fVVBfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0xFUktfU0lHTl9VUF9VUkwgfHwgXCJcIjtcbmV4cG9ydCB7XG4gIEFQSV9LRVksXG4gIEFQSV9VUkwsXG4gIEFQSV9WRVJTSU9OLFxuICBDTEVSS19KU19VUkwsXG4gIENMRVJLX0pTX1ZFUlNJT04sXG4gIERPTUFJTixcbiAgRlJPTlRFTkRfQVBJLFxuICBJU19TQVRFTExJVEUsXG4gIEpTX1ZFUlNJT04sXG4gIFBST1hZX1VSTCxcbiAgUFVCTElTSEFCTEVfS0VZLFxuICBTRUNSRVRfS0VZLFxuICBTSUdOX0lOX1VSTCxcbiAgU0lHTl9VUF9VUkxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbImRlcHJlY2F0ZWQiLCJKU19WRVJTSU9OIiwicHJvY2VzcyIsImVudiIsIkNMRVJLX0pTX1ZFUlNJT04iLCJORVhUX1BVQkxJQ19DTEVSS19KU19WRVJTSU9OIiwiQ0xFUktfSlNfVVJMIiwiTkVYVF9QVUJMSUNfQ0xFUktfSlMiLCJBUElfVVJMIiwiQ0xFUktfQVBJX1VSTCIsIkFQSV9WRVJTSU9OIiwiQ0xFUktfQVBJX1ZFUlNJT04iLCJBUElfS0VZIiwiQ0xFUktfQVBJX0tFWSIsIlNFQ1JFVF9LRVkiLCJDTEVSS19TRUNSRVRfS0VZIiwiRlJPTlRFTkRfQVBJIiwiTkVYVF9QVUJMSUNfQ0xFUktfRlJPTlRFTkRfQVBJIiwiUFVCTElTSEFCTEVfS0VZIiwiTkVYVF9QVUJMSUNfQ0xFUktfUFVCTElTSEFCTEVfS0VZIiwiRE9NQUlOIiwiTkVYVF9QVUJMSUNfQ0xFUktfRE9NQUlOIiwiUFJPWFlfVVJMIiwiTkVYVF9QVUJMSUNfQ0xFUktfUFJPWFlfVVJMIiwiSVNfU0FURUxMSVRFIiwiTkVYVF9QVUJMSUNfQ0xFUktfSVNfU0FURUxMSVRFIiwiU0lHTl9JTl9VUkwiLCJORVhUX1BVQkxJQ19DTEVSS19TSUdOX0lOX1VSTCIsIlNJR05fVVBfVVJMIiwiTkVYVF9QVUJMSUNfQ0xFUktfU0lHTl9VUF9VUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/constants.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGetAuth: () => (/* binding */ createGetAuth),\n/* harmony export */   getAuth: () => (/* binding */ getAuth),\n/* harmony export */   parseJwt: () => (/* binding */ parseJwt)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/../../node_modules/@clerk/backend/dist/esm/index.js\");\n/* harmony import */ var _clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/deprecated */ \"(middleware)/../../node_modules/@clerk/shared/dist/deprecated.mjs\");\n/* harmony import */ var _utils_debugLogger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/debugLogger */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n\n\n\n\n\n\nconst createGetAuth = ({ debugLoggerName, noAuthStatusMessage })=>(0,_utils_debugLogger__WEBPACK_IMPORTED_MODULE_2__.withLogger)(debugLoggerName, (logger)=>{\n        return (req, opts)=>{\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_3__.getHeader)(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.EnableDebug) === \"true\") {\n                logger.enable();\n            }\n            const authToken = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getAuthKeyFromRequest)(req, \"AuthToken\");\n            const authStatus = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getAuthKeyFromRequest)(req, \"AuthStatus\");\n            const authMessage = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getAuthKeyFromRequest)(req, \"AuthMessage\");\n            const authReason = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getAuthKeyFromRequest)(req, \"AuthReason\");\n            logger.debug(\"Debug\", {\n                authReason,\n                authMessage,\n                authStatus,\n                authToken\n            });\n            if (!authStatus) {\n                throw new Error(noAuthStatusMessage);\n            }\n            const options = {\n                apiKey: opts?.apiKey || _clerkClient__WEBPACK_IMPORTED_MODULE_4__.API_KEY,\n                authStatus,\n                authMessage,\n                secretKey: opts?.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_4__.SECRET_KEY,\n                authReason,\n                authToken,\n                apiUrl: _clerkClient__WEBPACK_IMPORTED_MODULE_4__.API_URL,\n                apiVersion: _clerkClient__WEBPACK_IMPORTED_MODULE_4__.API_VERSION\n            };\n            logger.debug(\"Options debug\", options);\n            if (authStatus !== _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.AuthStatus.SignedIn) {\n                return (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.signedOutAuthObject)(options);\n            }\n            const jwt = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(authToken);\n            logger.debug(\"JWT debug\", jwt.raw.text);\n            const signedIn = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.signedInAuthObject)(jwt.payload, {\n                ...options,\n                token: jwt.raw.text\n            });\n            if (signedIn) {\n                if (signedIn.user) {\n                    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_1__.deprecatedObjectProperty)(signedIn, \"user\", \"Use `clerkClient.users.getUser` instead.\");\n                }\n                if (signedIn.organization) {\n                    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_1__.deprecatedObjectProperty)(signedIn, \"organization\", \"Use `clerkClient.organizations.getOrganization` instead.\");\n                }\n                if (signedIn.session) {\n                    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_1__.deprecatedObjectProperty)(signedIn, \"session\", \"Use `clerkClient.sessions.getSession` instead.\");\n                }\n            }\n            return signedIn;\n        };\n    });\nconst parseJwt = (req)=>{\n    const cookieToken = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getCookie)(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Cookies.Session);\n    const headerToken = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getHeader)(req, \"authorization\")?.replace(\"Bearer \", \"\");\n    return (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.decodeJwt)(cookieToken || headerToken || \"\");\n};\nconst getAuth = createGetAuth({\n    debugLoggerName: \"getAuth()\",\n    noAuthStatusMessage: (0,_errors__WEBPACK_IMPORTED_MODULE_5__.getAuthAuthHeaderMissing)()\n});\n //# sourceMappingURL=createGetAuth.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9jcmVhdGVHZXRBdXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUEyRztBQUN2QztBQUNsQjtBQUN3QjtBQUN0QjtBQUNrQjtBQUN0RSxNQUFNZSxnQkFBZ0IsQ0FBQyxFQUNyQkMsZUFBZSxFQUNmQyxtQkFBbUIsRUFDcEIsR0FBS1gsOERBQVVBLENBQUNVLGlCQUFpQixDQUFDRTtRQUNqQyxPQUFPLENBQUNDLEtBQUtDO1lBQ1gsSUFBSU4saURBQVNBLENBQUNLLEtBQUtsQixxREFBU0EsQ0FBQ29CLE9BQU8sQ0FBQ0MsV0FBVyxNQUFNLFFBQVE7Z0JBQzVESixPQUFPSyxNQUFNO1lBQ2Y7WUFDQSxNQUFNQyxZQUFZWiw2REFBcUJBLENBQUNPLEtBQUs7WUFDN0MsTUFBTU0sYUFBYWIsNkRBQXFCQSxDQUFDTyxLQUFLO1lBQzlDLE1BQU1PLGNBQWNkLDZEQUFxQkEsQ0FBQ08sS0FBSztZQUMvQyxNQUFNUSxhQUFhZiw2REFBcUJBLENBQUNPLEtBQUs7WUFDOUNELE9BQU9VLEtBQUssQ0FBQyxTQUFTO2dCQUNwQkQ7Z0JBQ0FEO2dCQUNBRDtnQkFDQUQ7WUFDRjtZQUNBLElBQUksQ0FBQ0MsWUFBWTtnQkFDZixNQUFNLElBQUlJLE1BQU1aO1lBQ2xCO1lBQ0EsTUFBTWEsVUFBVTtnQkFDZEMsUUFBUVgsTUFBTVcsVUFBVXhCLGlEQUFPQTtnQkFDL0JrQjtnQkFDQUM7Z0JBQ0FNLFdBQVdaLE1BQU1ZLGFBQWF0QixvREFBVUE7Z0JBQ3hDaUI7Z0JBQ0FIO2dCQUNBUyxRQUFRekIsaURBQU9BO2dCQUNmMEIsWUFBWXpCLHFEQUFXQTtZQUN6QjtZQUNBUyxPQUFPVSxLQUFLLENBQUMsaUJBQWlCRTtZQUM5QixJQUFJTCxlQUFlekIsc0RBQVVBLENBQUNtQyxRQUFRLEVBQUU7Z0JBQ3RDLE9BQU8vQixtRUFBbUJBLENBQUMwQjtZQUM3QjtZQUNBLE1BQU1NLE1BQU1sQyx5REFBU0EsQ0FBQ3NCO1lBQ3RCTixPQUFPVSxLQUFLLENBQUMsYUFBYVEsSUFBSUMsR0FBRyxDQUFDQyxJQUFJO1lBQ3RDLE1BQU1DLFdBQVdwQyxrRUFBa0JBLENBQUNpQyxJQUFJSSxPQUFPLEVBQUU7Z0JBQy9DLEdBQUdWLE9BQU87Z0JBQ1ZXLE9BQU9MLElBQUlDLEdBQUcsQ0FBQ0MsSUFBSTtZQUNyQjtZQUNBLElBQUlDLFVBQVU7Z0JBQ1osSUFBSUEsU0FBU0csSUFBSSxFQUFFO29CQUNqQnJDLGtGQUF3QkEsQ0FBQ2tDLFVBQVUsUUFBUTtnQkFDN0M7Z0JBQ0EsSUFBSUEsU0FBU0ksWUFBWSxFQUFFO29CQUN6QnRDLGtGQUF3QkEsQ0FDdEJrQyxVQUNBLGdCQUNBO2dCQUVKO2dCQUNBLElBQUlBLFNBQVNLLE9BQU8sRUFBRTtvQkFDcEJ2QyxrRkFBd0JBLENBQUNrQyxVQUFVLFdBQVc7Z0JBQ2hEO1lBQ0Y7WUFDQSxPQUFPQTtRQUNUO0lBQ0Y7QUFDQSxNQUFNTSxXQUFXLENBQUMxQjtJQUNoQixNQUFNMkIsY0FBY2pDLGlEQUFTQSxDQUFDTSxLQUFLbEIscURBQVNBLENBQUM4QyxPQUFPLENBQUNDLE9BQU87SUFDNUQsTUFBTUMsY0FBY25DLGlEQUFTQSxDQUFDSyxLQUFLLGtCQUFrQitCLFFBQVEsV0FBVztJQUN4RSxPQUFPaEQseURBQVNBLENBQUM0QyxlQUFlRyxlQUFlO0FBQ2pEO0FBQ0EsTUFBTUUsVUFBVXBDLGNBQWM7SUFDNUJDLGlCQUFpQjtJQUNqQkMscUJBQXFCTixpRUFBd0JBO0FBQy9DO0FBS0UsQ0FDRix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9jcmVhdGVHZXRBdXRoLmpzP2QwMDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXV0aFN0YXR1cywgY29uc3RhbnRzLCBkZWNvZGVKd3QsIHNpZ25lZEluQXV0aE9iamVjdCwgc2lnbmVkT3V0QXV0aE9iamVjdCB9IGZyb20gXCJAY2xlcmsvYmFja2VuZFwiO1xuaW1wb3J0IHsgZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5IH0gZnJvbSBcIkBjbGVyay9zaGFyZWQvZGVwcmVjYXRlZFwiO1xuaW1wb3J0IHsgd2l0aExvZ2dlciB9IGZyb20gXCIuLi91dGlscy9kZWJ1Z0xvZ2dlclwiO1xuaW1wb3J0IHsgQVBJX0tFWSwgQVBJX1VSTCwgQVBJX1ZFUlNJT04sIFNFQ1JFVF9LRVkgfSBmcm9tIFwiLi9jbGVya0NsaWVudFwiO1xuaW1wb3J0IHsgZ2V0QXV0aEF1dGhIZWFkZXJNaXNzaW5nIH0gZnJvbSBcIi4vZXJyb3JzXCI7XG5pbXBvcnQgeyBnZXRBdXRoS2V5RnJvbVJlcXVlc3QsIGdldENvb2tpZSwgZ2V0SGVhZGVyIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmNvbnN0IGNyZWF0ZUdldEF1dGggPSAoe1xuICBkZWJ1Z0xvZ2dlck5hbWUsXG4gIG5vQXV0aFN0YXR1c01lc3NhZ2Vcbn0pID0+IHdpdGhMb2dnZXIoZGVidWdMb2dnZXJOYW1lLCAobG9nZ2VyKSA9PiB7XG4gIHJldHVybiAocmVxLCBvcHRzKSA9PiB7XG4gICAgaWYgKGdldEhlYWRlcihyZXEsIGNvbnN0YW50cy5IZWFkZXJzLkVuYWJsZURlYnVnKSA9PT0gXCJ0cnVlXCIpIHtcbiAgICAgIGxvZ2dlci5lbmFibGUoKTtcbiAgICB9XG4gICAgY29uc3QgYXV0aFRva2VuID0gZ2V0QXV0aEtleUZyb21SZXF1ZXN0KHJlcSwgXCJBdXRoVG9rZW5cIik7XG4gICAgY29uc3QgYXV0aFN0YXR1cyA9IGdldEF1dGhLZXlGcm9tUmVxdWVzdChyZXEsIFwiQXV0aFN0YXR1c1wiKTtcbiAgICBjb25zdCBhdXRoTWVzc2FnZSA9IGdldEF1dGhLZXlGcm9tUmVxdWVzdChyZXEsIFwiQXV0aE1lc3NhZ2VcIik7XG4gICAgY29uc3QgYXV0aFJlYXNvbiA9IGdldEF1dGhLZXlGcm9tUmVxdWVzdChyZXEsIFwiQXV0aFJlYXNvblwiKTtcbiAgICBsb2dnZXIuZGVidWcoXCJEZWJ1Z1wiLCB7XG4gICAgICBhdXRoUmVhc29uLFxuICAgICAgYXV0aE1lc3NhZ2UsXG4gICAgICBhdXRoU3RhdHVzLFxuICAgICAgYXV0aFRva2VuXG4gICAgfSk7XG4gICAgaWYgKCFhdXRoU3RhdHVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3Iobm9BdXRoU3RhdHVzTWVzc2FnZSk7XG4gICAgfVxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICBhcGlLZXk6IG9wdHM/LmFwaUtleSB8fCBBUElfS0VZLFxuICAgICAgYXV0aFN0YXR1cyxcbiAgICAgIGF1dGhNZXNzYWdlLFxuICAgICAgc2VjcmV0S2V5OiBvcHRzPy5zZWNyZXRLZXkgfHwgU0VDUkVUX0tFWSxcbiAgICAgIGF1dGhSZWFzb24sXG4gICAgICBhdXRoVG9rZW4sXG4gICAgICBhcGlVcmw6IEFQSV9VUkwsXG4gICAgICBhcGlWZXJzaW9uOiBBUElfVkVSU0lPTlxuICAgIH07XG4gICAgbG9nZ2VyLmRlYnVnKFwiT3B0aW9ucyBkZWJ1Z1wiLCBvcHRpb25zKTtcbiAgICBpZiAoYXV0aFN0YXR1cyAhPT0gQXV0aFN0YXR1cy5TaWduZWRJbikge1xuICAgICAgcmV0dXJuIHNpZ25lZE91dEF1dGhPYmplY3Qob3B0aW9ucyk7XG4gICAgfVxuICAgIGNvbnN0IGp3dCA9IGRlY29kZUp3dChhdXRoVG9rZW4pO1xuICAgIGxvZ2dlci5kZWJ1ZyhcIkpXVCBkZWJ1Z1wiLCBqd3QucmF3LnRleHQpO1xuICAgIGNvbnN0IHNpZ25lZEluID0gc2lnbmVkSW5BdXRoT2JqZWN0KGp3dC5wYXlsb2FkLCB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgdG9rZW46IGp3dC5yYXcudGV4dFxuICAgIH0pO1xuICAgIGlmIChzaWduZWRJbikge1xuICAgICAgaWYgKHNpZ25lZEluLnVzZXIpIHtcbiAgICAgICAgZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5KHNpZ25lZEluLCBcInVzZXJcIiwgXCJVc2UgYGNsZXJrQ2xpZW50LnVzZXJzLmdldFVzZXJgIGluc3RlYWQuXCIpO1xuICAgICAgfVxuICAgICAgaWYgKHNpZ25lZEluLm9yZ2FuaXphdGlvbikge1xuICAgICAgICBkZXByZWNhdGVkT2JqZWN0UHJvcGVydHkoXG4gICAgICAgICAgc2lnbmVkSW4sXG4gICAgICAgICAgXCJvcmdhbml6YXRpb25cIixcbiAgICAgICAgICBcIlVzZSBgY2xlcmtDbGllbnQub3JnYW5pemF0aW9ucy5nZXRPcmdhbml6YXRpb25gIGluc3RlYWQuXCJcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIGlmIChzaWduZWRJbi5zZXNzaW9uKSB7XG4gICAgICAgIGRlcHJlY2F0ZWRPYmplY3RQcm9wZXJ0eShzaWduZWRJbiwgXCJzZXNzaW9uXCIsIFwiVXNlIGBjbGVya0NsaWVudC5zZXNzaW9ucy5nZXRTZXNzaW9uYCBpbnN0ZWFkLlwiKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHNpZ25lZEluO1xuICB9O1xufSk7XG5jb25zdCBwYXJzZUp3dCA9IChyZXEpID0+IHtcbiAgY29uc3QgY29va2llVG9rZW4gPSBnZXRDb29raWUocmVxLCBjb25zdGFudHMuQ29va2llcy5TZXNzaW9uKTtcbiAgY29uc3QgaGVhZGVyVG9rZW4gPSBnZXRIZWFkZXIocmVxLCBcImF1dGhvcml6YXRpb25cIik/LnJlcGxhY2UoXCJCZWFyZXIgXCIsIFwiXCIpO1xuICByZXR1cm4gZGVjb2RlSnd0KGNvb2tpZVRva2VuIHx8IGhlYWRlclRva2VuIHx8IFwiXCIpO1xufTtcbmNvbnN0IGdldEF1dGggPSBjcmVhdGVHZXRBdXRoKHtcbiAgZGVidWdMb2dnZXJOYW1lOiBcImdldEF1dGgoKVwiLFxuICBub0F1dGhTdGF0dXNNZXNzYWdlOiBnZXRBdXRoQXV0aEhlYWRlck1pc3NpbmcoKVxufSk7XG5leHBvcnQge1xuICBjcmVhdGVHZXRBdXRoLFxuICBnZXRBdXRoLFxuICBwYXJzZUp3dFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUdldEF1dGguanMubWFwIl0sIm5hbWVzIjpbIkF1dGhTdGF0dXMiLCJjb25zdGFudHMiLCJkZWNvZGVKd3QiLCJzaWduZWRJbkF1dGhPYmplY3QiLCJzaWduZWRPdXRBdXRoT2JqZWN0IiwiZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5Iiwid2l0aExvZ2dlciIsIkFQSV9LRVkiLCJBUElfVVJMIiwiQVBJX1ZFUlNJT04iLCJTRUNSRVRfS0VZIiwiZ2V0QXV0aEF1dGhIZWFkZXJNaXNzaW5nIiwiZ2V0QXV0aEtleUZyb21SZXF1ZXN0IiwiZ2V0Q29va2llIiwiZ2V0SGVhZGVyIiwiY3JlYXRlR2V0QXV0aCIsImRlYnVnTG9nZ2VyTmFtZSIsIm5vQXV0aFN0YXR1c01lc3NhZ2UiLCJsb2dnZXIiLCJyZXEiLCJvcHRzIiwiSGVhZGVycyIsIkVuYWJsZURlYnVnIiwiZW5hYmxlIiwiYXV0aFRva2VuIiwiYXV0aFN0YXR1cyIsImF1dGhNZXNzYWdlIiwiYXV0aFJlYXNvbiIsImRlYnVnIiwiRXJyb3IiLCJvcHRpb25zIiwiYXBpS2V5Iiwic2VjcmV0S2V5IiwiYXBpVXJsIiwiYXBpVmVyc2lvbiIsIlNpZ25lZEluIiwiand0IiwicmF3IiwidGV4dCIsInNpZ25lZEluIiwicGF5bG9hZCIsInRva2VuIiwidXNlciIsIm9yZ2FuaXphdGlvbiIsInNlc3Npb24iLCJwYXJzZUp3dCIsImNvb2tpZVRva2VuIiwiQ29va2llcyIsIlNlc3Npb24iLCJoZWFkZXJUb2tlbiIsInJlcGxhY2UiLCJnZXRBdXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/errors.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/errors.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authAuthHeaderMissing: () => (/* binding */ authAuthHeaderMissing),\n/* harmony export */   clockSkewDetected: () => (/* binding */ clockSkewDetected),\n/* harmony export */   getAuthAuthHeaderMissing: () => (/* binding */ getAuthAuthHeaderMissing),\n/* harmony export */   infiniteRedirectLoopDetected: () => (/* binding */ infiniteRedirectLoopDetected),\n/* harmony export */   informAboutProtectedRouteInfo: () => (/* binding */ informAboutProtectedRouteInfo),\n/* harmony export */   missingDomainAndProxy: () => (/* binding */ missingDomainAndProxy),\n/* harmony export */   missingSignInUrlInDev: () => (/* binding */ missingSignInUrlInDev),\n/* harmony export */   receivedRequestForIgnoredRoute: () => (/* binding */ receivedRequestForIgnoredRoute)\n/* harmony export */ });\nconst missingDomainAndProxy = `\nMissing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl.\n\n1) With middleware\n   e.g. export default withClerkMiddleware(req => {...}, {domain:'YOUR_DOMAIN',isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_DOMAIN='YOUR_DOMAIN'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'\n   `;\nconst missingSignInUrlInDev = `\nInvalid signInUrl. A satellite application requires a signInUrl for development instances.\nCheck if signInUrl is missing from your configuration or if it is not an absolute URL\n\n1) With middleware\n   e.g. export default withClerkMiddleware(req => {...}, {signInUrl:'SOME_URL',isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_SIGN_IN_URL='SOME_URL'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'`;\nconst receivedRequestForIgnoredRoute = (url, matcher)=>`Clerk: The middleware was skipped for this request URL: ${url}. For performance reasons, it's recommended to your middleware matcher to:\nexport const config = {\n  matcher: ${matcher},\n};\n\nAlternatively, you can set your own ignoredRoutes. See https://clerk.com/docs/nextjs/middleware\n(This log only appears in development mode)\n`;\nconst getAuthAuthHeaderMissing = ()=>authAuthHeaderMissing(\"getAuth\");\nconst authAuthHeaderMissing = (helperName = \"auth\")=>`Clerk: ${helperName}() was called but Clerk can't detect usage of authMiddleware(). Please ensure the following:\n- authMiddleware() is used in your Next.js Middleware.\n- Your Middleware matcher is configured to match this route or page.\n- If you are using the src directory, make sure the Middleware file is inside of it.\n\nFor more details, see https://clerk.com/docs/quickstarts/nextjs\n`;\nconst clockSkewDetected = (verifyMessage)=>`Clerk: Clock skew detected. This usually means that your system clock is inaccurate. Clerk will continuously try to issue new tokens, as the existing ones will be treated as \"expired\" due to clock skew.\n\nTo resolve this issue, make sure your system's clock is set to the correct time (e.g. turn off and on automatic time synchronization).\n\n---\n\n${verifyMessage}`;\nconst infiniteRedirectLoopDetected = ()=>`Clerk: Infinite redirect loop detected. That usually means that we were not able to determine the auth state for this request. A list of common causes and solutions follows.\n\nReason 1:\nYour Clerk instance keys are incorrect, or you recently changed keys (Publishable Key, Secret Key).\nHow to resolve:\n-> Make sure you're using the correct keys from the Clerk Dashboard. If you changed keys recently, make sure to clear your browser application data and cookies.\n\nReason 2:\nA bug that may have already been fixed in the latest version of Clerk NextJS package.\nHow to resolve:\n-> Make sure you are using the latest version of '@clerk/nextjs' and 'next'.\n`;\nconst informAboutProtectedRouteInfo = (path, hasPublicRoutes, hasIgnoredRoutes, isApiRoute, defaultIgnoredRoutes)=>{\n    const infoText = isApiRoute ? `INFO: Clerk: The request to ${path} is being protected (401) because there is no signed-in user, and the path is included in \\`apiRoutes\\`. To prevent this behavior, choose one of:` : `INFO: Clerk: The request to ${path} is being redirected because there is no signed-in user, and the path is not included in \\`ignoredRoutes\\` or \\`publicRoutes\\`. To prevent this behavior, choose one of:`;\n    const apiRoutesText = isApiRoute ? `To prevent Clerk authentication from protecting (401) the api route, remove the rule matching \"${path}\" from the \\`apiRoutes\\` array passed to authMiddleware` : void 0;\n    const publicRoutesText = hasPublicRoutes ? `To make the route accessible to both signed in and signed out users, add \"${path}\" to the \\`publicRoutes\\` array passed to authMiddleware` : `To make the route accessible to both signed in and signed out users, pass \\`publicRoutes: [\"${path}\"]\\` to authMiddleware`;\n    const ignoredRoutes = [\n        ...defaultIgnoredRoutes,\n        path\n    ].map((r)=>`\"${r}\"`).join(\", \");\n    const ignoredRoutesText = hasIgnoredRoutes ? `To prevent Clerk authentication from running at all, add \"${path}\" to the \\`ignoredRoutes\\` array passed to authMiddleware` : `To prevent Clerk authentication from running at all, pass \\`ignoredRoutes: [${ignoredRoutes}]\\` to authMiddleware`;\n    const afterAuthText = \"Pass a custom `afterAuth` to authMiddleware, and replace Clerk's default behavior of redirecting unless a route is included in publicRoutes\";\n    return `${infoText}\n\n${[\n        apiRoutesText,\n        publicRoutesText,\n        ignoredRoutesText,\n        afterAuthText\n    ].filter(Boolean).map((text, index)=>`${index + 1}. ${text}`).join(\"\\n\")}\n\nFor additional information about middleware, please visit https://clerk.com/docs/nextjs/middleware\n(This log only appears in development mode, or if \\`debug: true\\` is passed to authMiddleware)`;\n};\n //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/errors.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/index.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* reexport safe */ _app_router_server_auth__WEBPACK_IMPORTED_MODULE_2__.auth),\n/* harmony export */   authMiddleware: () => (/* reexport safe */ _authMiddleware__WEBPACK_IMPORTED_MODULE_3__.authMiddleware),\n/* harmony export */   buildClerkProps: () => (/* reexport safe */ _buildClerkProps__WEBPACK_IMPORTED_MODULE_4__.buildClerkProps),\n/* harmony export */   currentUser: () => (/* reexport safe */ _app_router_server_currentUser__WEBPACK_IMPORTED_MODULE_5__.currentUser),\n/* harmony export */   getAuth: () => (/* reexport safe */ _createGetAuth__WEBPACK_IMPORTED_MODULE_6__.getAuth),\n/* harmony export */   redirectToSignIn: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_7__.redirectToSignIn),\n/* harmony export */   redirectToSignUp: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_7__.redirectToSignUp)\n/* harmony export */ });\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _clerkClient__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"auth\",\"authMiddleware\",\"buildClerkProps\",\"currentUser\",\"getAuth\",\"redirectToSignIn\",\"redirectToSignUp\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _clerkClient__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _createGetAuth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./createGetAuth */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/createGetAuth.js\");\n/* harmony import */ var _buildClerkProps__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./buildClerkProps */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/buildClerkProps.js\");\n/* harmony import */ var _withClerkMiddleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./withClerkMiddleware */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/withClerkMiddleware.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _withClerkMiddleware__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"auth\",\"authMiddleware\",\"buildClerkProps\",\"currentUser\",\"getAuth\",\"redirectToSignIn\",\"redirectToSignUp\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _withClerkMiddleware__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _redirect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./redirect */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/redirect.js\");\n/* harmony import */ var _app_router_server_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../app-router/server/auth */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/auth.js\");\n/* harmony import */ var _app_router_server_currentUser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../app-router/server/currentUser */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\");\n/* harmony import */ var _authMiddleware__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authMiddleware */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/authMiddleware.js\");\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBOEI7QUFDWTtBQUNVO0FBQ2Q7QUFDMEI7QUFDZjtBQUNjO0FBQ2I7QUFTaEQsQ0FDRixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9pbmRleC5qcz80MGE5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NsZXJrQ2xpZW50XCI7XG5pbXBvcnQgeyBnZXRBdXRoIH0gZnJvbSBcIi4vY3JlYXRlR2V0QXV0aFwiO1xuaW1wb3J0IHsgYnVpbGRDbGVya1Byb3BzIH0gZnJvbSBcIi4vYnVpbGRDbGVya1Byb3BzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi93aXRoQ2xlcmtNaWRkbGV3YXJlXCI7XG5pbXBvcnQgeyByZWRpcmVjdFRvU2lnblVwLCByZWRpcmVjdFRvU2lnbkluIH0gZnJvbSBcIi4vcmVkaXJlY3RcIjtcbmltcG9ydCB7IGF1dGggfSBmcm9tIFwiLi4vYXBwLXJvdXRlci9zZXJ2ZXIvYXV0aFwiO1xuaW1wb3J0IHsgY3VycmVudFVzZXIgfSBmcm9tIFwiLi4vYXBwLXJvdXRlci9zZXJ2ZXIvY3VycmVudFVzZXJcIjtcbmltcG9ydCB7IGF1dGhNaWRkbGV3YXJlIH0gZnJvbSBcIi4vYXV0aE1pZGRsZXdhcmVcIjtcbmV4cG9ydCB7XG4gIGF1dGgsXG4gIGF1dGhNaWRkbGV3YXJlLFxuICBidWlsZENsZXJrUHJvcHMsXG4gIGN1cnJlbnRVc2VyLFxuICBnZXRBdXRoLFxuICByZWRpcmVjdFRvU2lnbkluLFxuICByZWRpcmVjdFRvU2lnblVwXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImdldEF1dGgiLCJidWlsZENsZXJrUHJvcHMiLCJyZWRpcmVjdFRvU2lnblVwIiwicmVkaXJlY3RUb1NpZ25JbiIsImF1dGgiLCJjdXJyZW50VXNlciIsImF1dGhNaWRkbGV3YXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/redirect.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/redirect.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   redirectToSignIn: () => (/* binding */ redirectToSignIn),\n/* harmony export */   redirectToSignUp: () => (/* binding */ redirectToSignUp)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/../../node_modules/@clerk/backend/dist/esm/index.js\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/index.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n\n\n\n\nconst redirectAdapter = (url)=>{\n    const res = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].redirect(url);\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_2__.setHeader)(res, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.ClerkRedirectTo, \"true\");\n};\nconst { redirectToSignIn, redirectToSignUp } = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.redirect)({\n    redirectAdapter,\n    signInUrl: _clerkClient__WEBPACK_IMPORTED_MODULE_3__.SIGN_IN_URL,\n    signUpUrl: _clerkClient__WEBPACK_IMPORTED_MODULE_3__.SIGN_UP_URL,\n    publishableKey: _clerkClient__WEBPACK_IMPORTED_MODULE_3__.PUBLISHABLE_KEY,\n    frontendApi: _clerkClient__WEBPACK_IMPORTED_MODULE_3__.FRONTEND_API\n});\n //# sourceMappingURL=redirect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci9yZWRpcmVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBcUQ7QUFDVjtBQUNOO0FBQ21EO0FBQ3hGLE1BQU1RLGtCQUFrQixDQUFDQztJQUN2QixNQUFNQyxNQUFNUiwyRkFBcUIsQ0FBQ087SUFDbEMsT0FBT04saURBQVNBLENBQUNPLEtBQUtWLHFEQUFTQSxDQUFDVyxPQUFPLENBQUNDLGVBQWUsRUFBRTtBQUMzRDtBQUNBLE1BQU0sRUFBRUMsZ0JBQWdCLEVBQUVDLGdCQUFnQixFQUFFLEdBQUdiLHdEQUFRQSxDQUFDO0lBQ3RETztJQUNBTyxXQUFXVCxxREFBV0E7SUFDdEJVLFdBQVdULHFEQUFXQTtJQUN0QlUsZ0JBQWdCWix5REFBZUE7SUFDL0JhLGFBQWFkLHNEQUFZQTtBQUMzQjtBQUlFLENBQ0Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS9zZXJ2ZXIvcmVkaXJlY3QuanM/MTU0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25zdGFudHMsIHJlZGlyZWN0IH0gZnJvbSBcIkBjbGVyay9iYWNrZW5kXCI7XG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IHNldEhlYWRlciB9IGZyb20gXCIuLi91dGlsc1wiO1xuaW1wb3J0IHsgRlJPTlRFTkRfQVBJLCBQVUJMSVNIQUJMRV9LRVksIFNJR05fSU5fVVJMLCBTSUdOX1VQX1VSTCB9IGZyb20gXCIuL2NsZXJrQ2xpZW50XCI7XG5jb25zdCByZWRpcmVjdEFkYXB0ZXIgPSAodXJsKSA9PiB7XG4gIGNvbnN0IHJlcyA9IE5leHRSZXNwb25zZS5yZWRpcmVjdCh1cmwpO1xuICByZXR1cm4gc2V0SGVhZGVyKHJlcywgY29uc3RhbnRzLkhlYWRlcnMuQ2xlcmtSZWRpcmVjdFRvLCBcInRydWVcIik7XG59O1xuY29uc3QgeyByZWRpcmVjdFRvU2lnbkluLCByZWRpcmVjdFRvU2lnblVwIH0gPSByZWRpcmVjdCh7XG4gIHJlZGlyZWN0QWRhcHRlcixcbiAgc2lnbkluVXJsOiBTSUdOX0lOX1VSTCxcbiAgc2lnblVwVXJsOiBTSUdOX1VQX1VSTCxcbiAgcHVibGlzaGFibGVLZXk6IFBVQkxJU0hBQkxFX0tFWSxcbiAgZnJvbnRlbmRBcGk6IEZST05URU5EX0FQSVxufSk7XG5leHBvcnQge1xuICByZWRpcmVjdFRvU2lnbkluLFxuICByZWRpcmVjdFRvU2lnblVwXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkaXJlY3QuanMubWFwIl0sIm5hbWVzIjpbImNvbnN0YW50cyIsInJlZGlyZWN0IiwiTmV4dFJlc3BvbnNlIiwic2V0SGVhZGVyIiwiRlJPTlRFTkRfQVBJIiwiUFVCTElTSEFCTEVfS0VZIiwiU0lHTl9JTl9VUkwiLCJTSUdOX1VQX1VSTCIsInJlZGlyZWN0QWRhcHRlciIsInVybCIsInJlcyIsIkhlYWRlcnMiLCJDbGVya1JlZGlyZWN0VG8iLCJyZWRpcmVjdFRvU2lnbkluIiwicmVkaXJlY3RUb1NpZ25VcCIsInNpZ25JblVybCIsInNpZ25VcFVybCIsInB1Ymxpc2hhYmxlS2V5IiwiZnJvbnRlbmRBcGkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/redirect.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/url.js":
/*!***************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/url.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_DEV_SUFFIXES: () => (/* binding */ CURRENT_DEV_SUFFIXES),\n/* harmony export */   LEGACY_DEV_SUFFIXES: () => (/* binding */ LEGACY_DEV_SUFFIXES),\n/* harmony export */   isDevAccountPortalOrigin: () => (/* binding */ isDevAccountPortalOrigin)\n/* harmony export */ });\nconst LEGACY_DEV_SUFFIXES = [\n    \".lcl.dev\",\n    \".lclstage.dev\",\n    \".lclclerk.com\"\n];\nconst CURRENT_DEV_SUFFIXES = [\n    \".accounts.dev\",\n    \".accountsstage.dev\",\n    \".accounts.lclclerk.com\"\n];\nconst accountPortalCache = /* @__PURE__ */ new Map();\nfunction isDevAccountPortalOrigin(hostname) {\n    if (!hostname) {\n        return false;\n    }\n    let res = accountPortalCache.get(hostname);\n    if (res === void 0) {\n        res = isLegacyDevAccountPortalOrigin(hostname) || isCurrentDevAccountPortalOrigin(hostname);\n        accountPortalCache.set(hostname, res);\n    }\n    return res;\n}\nfunction isLegacyDevAccountPortalOrigin(host) {\n    return LEGACY_DEV_SUFFIXES.some((legacyDevSuffix)=>{\n        return host.startsWith(\"accounts.\") && host.endsWith(legacyDevSuffix);\n    });\n}\nfunction isCurrentDevAccountPortalOrigin(host) {\n    return CURRENT_DEV_SUFFIXES.some((currentDevSuffix)=>{\n        return host.endsWith(currentDevSuffix) && !host.endsWith(\".clerk\" + currentDevSuffix);\n    });\n}\n //# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3NlcnZlci91cmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsTUFBTUEsc0JBQXNCO0lBQUM7SUFBWTtJQUFpQjtDQUFnQjtBQUMxRSxNQUFNQyx1QkFBdUI7SUFBQztJQUFpQjtJQUFzQjtDQUF5QjtBQUM5RixNQUFNQyxxQkFBcUIsYUFBYSxHQUFHLElBQUlDO0FBQy9DLFNBQVNDLHlCQUF5QkMsUUFBUTtJQUN4QyxJQUFJLENBQUNBLFVBQVU7UUFDYixPQUFPO0lBQ1Q7SUFDQSxJQUFJQyxNQUFNSixtQkFBbUJLLEdBQUcsQ0FBQ0Y7SUFDakMsSUFBSUMsUUFBUSxLQUFLLEdBQUc7UUFDbEJBLE1BQU1FLCtCQUErQkgsYUFBYUksZ0NBQWdDSjtRQUNsRkgsbUJBQW1CUSxHQUFHLENBQUNMLFVBQVVDO0lBQ25DO0lBQ0EsT0FBT0E7QUFDVDtBQUNBLFNBQVNFLCtCQUErQkcsSUFBSTtJQUMxQyxPQUFPWCxvQkFBb0JZLElBQUksQ0FBQyxDQUFDQztRQUMvQixPQUFPRixLQUFLRyxVQUFVLENBQUMsZ0JBQWdCSCxLQUFLSSxRQUFRLENBQUNGO0lBQ3ZEO0FBQ0Y7QUFDQSxTQUFTSixnQ0FBZ0NFLElBQUk7SUFDM0MsT0FBT1YscUJBQXFCVyxJQUFJLENBQUMsQ0FBQ0k7UUFDaEMsT0FBT0wsS0FBS0ksUUFBUSxDQUFDQyxxQkFBcUIsQ0FBQ0wsS0FBS0ksUUFBUSxDQUFDLFdBQVdDO0lBQ3RFO0FBQ0Y7QUFLRSxDQUNGLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vc2VydmVyL3VybC5qcz84NGRkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IExFR0FDWV9ERVZfU1VGRklYRVMgPSBbXCIubGNsLmRldlwiLCBcIi5sY2xzdGFnZS5kZXZcIiwgXCIubGNsY2xlcmsuY29tXCJdO1xuY29uc3QgQ1VSUkVOVF9ERVZfU1VGRklYRVMgPSBbXCIuYWNjb3VudHMuZGV2XCIsIFwiLmFjY291bnRzc3RhZ2UuZGV2XCIsIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiXTtcbmNvbnN0IGFjY291bnRQb3J0YWxDYWNoZSA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG5mdW5jdGlvbiBpc0RldkFjY291bnRQb3J0YWxPcmlnaW4oaG9zdG5hbWUpIHtcbiAgaWYgKCFob3N0bmFtZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBsZXQgcmVzID0gYWNjb3VudFBvcnRhbENhY2hlLmdldChob3N0bmFtZSk7XG4gIGlmIChyZXMgPT09IHZvaWQgMCkge1xuICAgIHJlcyA9IGlzTGVnYWN5RGV2QWNjb3VudFBvcnRhbE9yaWdpbihob3N0bmFtZSkgfHwgaXNDdXJyZW50RGV2QWNjb3VudFBvcnRhbE9yaWdpbihob3N0bmFtZSk7XG4gICAgYWNjb3VudFBvcnRhbENhY2hlLnNldChob3N0bmFtZSwgcmVzKTtcbiAgfVxuICByZXR1cm4gcmVzO1xufVxuZnVuY3Rpb24gaXNMZWdhY3lEZXZBY2NvdW50UG9ydGFsT3JpZ2luKGhvc3QpIHtcbiAgcmV0dXJuIExFR0FDWV9ERVZfU1VGRklYRVMuc29tZSgobGVnYWN5RGV2U3VmZml4KSA9PiB7XG4gICAgcmV0dXJuIGhvc3Quc3RhcnRzV2l0aChcImFjY291bnRzLlwiKSAmJiBob3N0LmVuZHNXaXRoKGxlZ2FjeURldlN1ZmZpeCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gaXNDdXJyZW50RGV2QWNjb3VudFBvcnRhbE9yaWdpbihob3N0KSB7XG4gIHJldHVybiBDVVJSRU5UX0RFVl9TVUZGSVhFUy5zb21lKChjdXJyZW50RGV2U3VmZml4KSA9PiB7XG4gICAgcmV0dXJuIGhvc3QuZW5kc1dpdGgoY3VycmVudERldlN1ZmZpeCkgJiYgIWhvc3QuZW5kc1dpdGgoXCIuY2xlcmtcIiArIGN1cnJlbnREZXZTdWZmaXgpO1xuICB9KTtcbn1cbmV4cG9ydCB7XG4gIENVUlJFTlRfREVWX1NVRkZJWEVTLFxuICBMRUdBQ1lfREVWX1NVRkZJWEVTLFxuICBpc0RldkFjY291bnRQb3J0YWxPcmlnaW5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwuanMubWFwIl0sIm5hbWVzIjpbIkxFR0FDWV9ERVZfU1VGRklYRVMiLCJDVVJSRU5UX0RFVl9TVUZGSVhFUyIsImFjY291bnRQb3J0YWxDYWNoZSIsIk1hcCIsImlzRGV2QWNjb3VudFBvcnRhbE9yaWdpbiIsImhvc3RuYW1lIiwicmVzIiwiZ2V0IiwiaXNMZWdhY3lEZXZBY2NvdW50UG9ydGFsT3JpZ2luIiwiaXNDdXJyZW50RGV2QWNjb3VudFBvcnRhbE9yaWdpbiIsInNldCIsImhvc3QiLCJzb21lIiwibGVnYWN5RGV2U3VmZml4Iiwic3RhcnRzV2l0aCIsImVuZHNXaXRoIiwiY3VycmVudERldlN1ZmZpeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/url.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/utils.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiEndpointUnauthorizedNextResponse: () => (/* binding */ apiEndpointUnauthorizedNextResponse),\n/* harmony export */   decorateRequest: () => (/* binding */ decorateRequest),\n/* harmony export */   getAuthKeyFromRequest: () => (/* binding */ getAuthKeyFromRequest),\n/* harmony export */   getAuthStatusFromRequest: () => (/* binding */ getAuthStatusFromRequest),\n/* harmony export */   getCookie: () => (/* binding */ getCookie),\n/* harmony export */   getCustomAttributeFromRequest: () => (/* binding */ getCustomAttributeFromRequest),\n/* harmony export */   getHeader: () => (/* binding */ getHeader),\n/* harmony export */   handleMultiDomainAndProxy: () => (/* binding */ handleMultiDomainAndProxy),\n/* harmony export */   injectSSRStateIntoObject: () => (/* binding */ injectSSRStateIntoObject),\n/* harmony export */   isCrossOrigin: () => (/* binding */ isCrossOrigin),\n/* harmony export */   isDevelopmentFromApiKey: () => (/* binding */ isDevelopmentFromApiKey),\n/* harmony export */   nextJsVersionCanOverrideRequestHeaders: () => (/* binding */ nextJsVersionCanOverrideRequestHeaders),\n/* harmony export */   setCustomAttributeOnRequest: () => (/* binding */ setCustomAttributeOnRequest),\n/* harmony export */   setRequestHeadersOnNextResponse: () => (/* binding */ setRequestHeadersOnNextResponse)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/../../node_modules/@clerk/backend/dist/esm/index.js\");\n/* harmony import */ var _clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/handleValueOrFn */ \"(middleware)/../../node_modules/@clerk/shared/dist/handleValueOrFn.mjs\");\n/* harmony import */ var _clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/proxy */ \"(middleware)/../../node_modules/@clerk/shared/dist/proxy.mjs\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/constants.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errors */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/errors.js\");\n\n\n\n\n\n\n\nfunction setCustomAttributeOnRequest(req, key, value) {\n    Object.assign(req, {\n        [key]: value\n    });\n}\nfunction getCustomAttributeFromRequest(req, key) {\n    return key in req ? req[key] : void 0;\n}\nfunction getAuthKeyFromRequest(req, key) {\n    const val = getCustomAttributeFromRequest(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes[key]) || getHeader(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers[key]);\n    if (val) {\n        return val;\n    }\n    if (key === \"AuthStatus\" || key === \"AuthToken\") {\n        return getQueryParam(req, key) || void 0;\n    }\n    return void 0;\n}\nfunction getAuthStatusFromRequest(req) {\n    return getCustomAttributeFromRequest(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes.AuthStatus) || getHeader(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthStatus) || getQueryParam(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.SearchParams.AuthStatus);\n}\nfunction getQueryParam(req, name) {\n    if (isNextRequest(req)) {\n        return req.nextUrl.searchParams.get(name);\n    }\n    let queryParam;\n    if (\"query\" in req) {\n        queryParam = req.query[name];\n    }\n    if (!queryParam) {\n        const qs = (req.url || \"\").split(\"?\")[1];\n        queryParam = new URLSearchParams(qs).get(name);\n    }\n    return queryParam;\n}\nfunction getHeader(req, name) {\n    if (isNextRequest(req)) {\n        return req.headers.get(name);\n    }\n    return req.headers[name] || req.headers[name.toLowerCase()] || req.socket?._httpMessage?.getHeader(name);\n}\nfunction getCookie(req, name) {\n    if (isNextRequest(req)) {\n        const reqCookieOrString = req.cookies.get(name);\n        if (!reqCookieOrString) {\n            return void 0;\n        }\n        return typeof reqCookieOrString === \"string\" ? reqCookieOrString : reqCookieOrString.value;\n    }\n    return req.cookies[name];\n}\nfunction isNextRequest(val) {\n    try {\n        const { headers, nextUrl, cookies } = val || {};\n        return typeof headers?.get === \"function\" && typeof nextUrl?.searchParams.get === \"function\" && typeof cookies?.get === \"function\";\n    } catch (e) {\n        return false;\n    }\n}\nconst OVERRIDE_HEADERS = \"x-middleware-override-headers\";\nconst MIDDLEWARE_HEADER_PREFIX = \"x-middleware-request\";\nconst setRequestHeadersOnNextResponse = (res, req, newHeaders)=>{\n    if (!res.headers.get(OVERRIDE_HEADERS)) {\n        res.headers.set(OVERRIDE_HEADERS, [\n            ...req.headers.keys()\n        ]);\n        req.headers.forEach((val, key)=>{\n            res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n        });\n    }\n    Object.entries(newHeaders).forEach(([key, val])=>{\n        res.headers.set(OVERRIDE_HEADERS, `${res.headers.get(OVERRIDE_HEADERS)},${key}`);\n        res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n    });\n};\nconst nextJsVersionCanOverrideRequestHeaders = ()=>{\n    try {\n        const headerKey = \"clerkTest\";\n        const headerKeyInRes = `${MIDDLEWARE_HEADER_PREFIX}-${headerKey}`;\n        const res = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__[\"default\"].next({\n            request: {\n                headers: new Headers({\n                    [headerKey]: \"true\"\n                })\n            }\n        });\n        return res.headers.has(headerKeyInRes);\n    } catch (e) {\n        return false;\n    }\n};\nconst injectSSRStateIntoObject = (obj, authObject)=>{\n    const __clerk_ssr_state =  true ? JSON.parse(JSON.stringify({\n        ...authObject\n    })) : 0;\n    return {\n        ...obj,\n        __clerk_ssr_state\n    };\n};\nfunction isDevelopmentFromApiKey(apiKey) {\n    return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"sk_test_\");\n}\nfunction decorateRequest(req, res, requestState) {\n    const { reason, message, status, token } = requestState;\n    if (!res) {\n        res = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__[\"default\"].next();\n    }\n    if (res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_4__.constants.Headers.NextRedirect)) {\n        return res;\n    }\n    let rewriteURL;\n    if (res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_4__.constants.Headers.NextResume) === \"1\") {\n        res.headers.delete(_constants__WEBPACK_IMPORTED_MODULE_4__.constants.Headers.NextResume);\n        rewriteURL = new URL(req.url);\n    }\n    const rewriteURLHeader = res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_4__.constants.Headers.NextRewrite);\n    if (rewriteURLHeader) {\n        const reqURL = new URL(req.url);\n        rewriteURL = new URL(rewriteURLHeader);\n        if (rewriteURL.origin !== reqURL.origin) {\n            return res;\n        }\n    }\n    if (rewriteURL) {\n        if (nextJsVersionCanOverrideRequestHeaders()) {\n            setRequestHeadersOnNextResponse(res, req, {\n                [_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthStatus]: status,\n                [_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthToken]: token || \"\",\n                [_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthMessage]: message || \"\",\n                [_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason]: reason || \"\"\n            });\n        } else {\n            res.headers.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthStatus, status);\n            res.headers.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthToken, token || \"\");\n            res.headers.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthMessage, message || \"\");\n            res.headers.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, reason || \"\");\n            rewriteURL.searchParams.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.SearchParams.AuthStatus, status);\n            rewriteURL.searchParams.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.SearchParams.AuthToken, token || \"\");\n            rewriteURL.searchParams.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthMessage, message || \"\");\n            rewriteURL.searchParams.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, reason || \"\");\n        }\n        res.headers.set(_constants__WEBPACK_IMPORTED_MODULE_4__.constants.Headers.NextRewrite, rewriteURL.href);\n    }\n    return res;\n}\nconst apiEndpointUnauthorizedNextResponse = ()=>{\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_3__[\"default\"].json(null, {\n        status: 401,\n        statusText: \"Unauthorized\"\n    });\n};\nconst isCrossOrigin = (from, to)=>{\n    const fromUrl = new URL(from);\n    const toUrl = new URL(to);\n    return fromUrl.origin !== toUrl.origin;\n};\nconst handleMultiDomainAndProxy = (req, opts)=>{\n    const requestURL = (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.buildRequestUrl)(req);\n    const relativeOrAbsoluteProxyUrl = (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_1__.handleValueOrFn)(opts?.proxyUrl, requestURL, _clerkClient__WEBPACK_IMPORTED_MODULE_5__.PROXY_URL);\n    let proxyUrl;\n    if (!!relativeOrAbsoluteProxyUrl && !(0,_clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_2__.isHttpOrHttps)(relativeOrAbsoluteProxyUrl)) {\n        proxyUrl = new URL(relativeOrAbsoluteProxyUrl, requestURL).toString();\n    } else {\n        proxyUrl = relativeOrAbsoluteProxyUrl;\n    }\n    const isSatellite = (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_1__.handleValueOrFn)(opts.isSatellite, new URL(req.url), _clerkClient__WEBPACK_IMPORTED_MODULE_5__.IS_SATELLITE);\n    const domain = (0,_clerk_shared_handleValueOrFn__WEBPACK_IMPORTED_MODULE_1__.handleValueOrFn)(opts.domain, new URL(req.url), _clerkClient__WEBPACK_IMPORTED_MODULE_5__.DOMAIN);\n    const signInUrl = opts?.signInUrl || _clerkClient__WEBPACK_IMPORTED_MODULE_5__.SIGN_IN_URL;\n    if (isSatellite && !proxyUrl && !domain) {\n        throw new Error(_errors__WEBPACK_IMPORTED_MODULE_6__.missingDomainAndProxy);\n    }\n    if (isSatellite && !(0,_clerk_shared_proxy__WEBPACK_IMPORTED_MODULE_2__.isHttpOrHttps)(signInUrl) && isDevelopmentFromApiKey(_clerkClient__WEBPACK_IMPORTED_MODULE_5__.SECRET_KEY || _clerkClient__WEBPACK_IMPORTED_MODULE_5__.API_KEY)) {\n        throw new Error(_errors__WEBPACK_IMPORTED_MODULE_6__.missingSignInUrlInDev);\n    }\n    return {\n        proxyUrl,\n        isSatellite,\n        domain,\n        signInUrl\n    };\n};\n //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/utils.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/withClerkMiddleware.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/server/withClerkMiddleware.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decorateResponseWithObservabilityHeaders: () => (/* binding */ decorateResponseWithObservabilityHeaders),\n/* harmony export */   withClerkMiddleware: () => (/* binding */ withClerkMiddleware)\n/* harmony export */ });\n/* harmony import */ var _clerk_backend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @clerk/backend */ \"(middleware)/../../node_modules/@clerk/backend/dist/esm/index.js\");\n/* harmony import */ var _clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/shared/deprecated */ \"(middleware)/../../node_modules/@clerk/shared/dist/deprecated.mjs\");\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _clerkClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clerkClient */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/clerkClient.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/utils.js\");\n\n\n\n\n\nconst decorateResponseWithObservabilityHeaders = (res, requestState)=>{\n    requestState.message && res.headers.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthMessage, encodeURIComponent(requestState.message));\n    requestState.reason && res.headers.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthReason, encodeURIComponent(requestState.reason));\n    requestState.status && res.headers.set(_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Headers.AuthStatus, encodeURIComponent(requestState.status));\n};\nconst withClerkMiddleware = (...args)=>{\n    const noop = ()=>void 0;\n    const [handler = noop, opts = {}] = args;\n    (0,_clerk_shared_deprecated__WEBPACK_IMPORTED_MODULE_1__.deprecated)(\"withClerkMiddleware\", \"Use `authMiddleware` instead.\\nFor more details, consult the middleware documentation: https://clerk.com/docs/nextjs/middleware\");\n    return async (req, event)=>{\n        const { isSatellite, domain, signInUrl, proxyUrl } = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.handleMultiDomainAndProxy)(req, opts);\n        const requestState = await _clerkClient__WEBPACK_IMPORTED_MODULE_4__.clerkClient.authenticateRequest({\n            ...opts,\n            apiKey: opts.apiKey || _clerkClient__WEBPACK_IMPORTED_MODULE_4__.API_KEY,\n            secretKey: opts.secretKey || _clerkClient__WEBPACK_IMPORTED_MODULE_4__.SECRET_KEY,\n            frontendApi: opts.frontendApi || _clerkClient__WEBPACK_IMPORTED_MODULE_4__.FRONTEND_API,\n            publishableKey: opts.publishableKey || _clerkClient__WEBPACK_IMPORTED_MODULE_4__.PUBLISHABLE_KEY,\n            isSatellite,\n            domain,\n            signInUrl,\n            proxyUrl,\n            request: req\n        });\n        if (requestState.isUnknown) {\n            const response = new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"](null, {\n                status: 401,\n                headers: {\n                    \"Content-Type\": \"text/html\"\n                }\n            });\n            decorateResponseWithObservabilityHeaders(response, requestState);\n            return response;\n        }\n        if (requestState.isInterstitial) {\n            const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rewrite(_clerkClient__WEBPACK_IMPORTED_MODULE_4__.clerkClient.remotePublicInterstitialUrl({\n                apiUrl: _clerkClient__WEBPACK_IMPORTED_MODULE_4__.API_URL,\n                frontendApi: opts.frontendApi || _clerkClient__WEBPACK_IMPORTED_MODULE_4__.FRONTEND_API,\n                publishableKey: opts.publishableKey || _clerkClient__WEBPACK_IMPORTED_MODULE_4__.PUBLISHABLE_KEY,\n                clerkJSUrl: _clerkClient__WEBPACK_IMPORTED_MODULE_4__.CLERK_JS_URL,\n                clerkJSVersion: _clerkClient__WEBPACK_IMPORTED_MODULE_4__.CLERK_JS_VERSION,\n                proxyUrl: requestState.proxyUrl,\n                isSatellite: requestState.isSatellite,\n                domain: requestState.domain,\n                debugData: (0,_clerk_backend__WEBPACK_IMPORTED_MODULE_0__.debugRequestState)(requestState),\n                signInUrl: requestState.signInUrl\n            }), {\n                status: 401\n            });\n            decorateResponseWithObservabilityHeaders(response, requestState);\n            return response;\n        }\n        (0,_utils__WEBPACK_IMPORTED_MODULE_3__.setCustomAttributeOnRequest)(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes.AuthStatus, requestState.status);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_3__.setCustomAttributeOnRequest)(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes.AuthToken, requestState.token || \"\");\n        (0,_utils__WEBPACK_IMPORTED_MODULE_3__.setCustomAttributeOnRequest)(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes.AuthMessage, requestState.message || \"\");\n        (0,_utils__WEBPACK_IMPORTED_MODULE_3__.setCustomAttributeOnRequest)(req, _clerk_backend__WEBPACK_IMPORTED_MODULE_0__.constants.Attributes.AuthReason, requestState.reason || \"\");\n        const res = await handler(req, event);\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.decorateRequest)(req, res, requestState);\n    };\n};\n //# sourceMappingURL=withClerkMiddleware.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/server/withClerkMiddleware.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDebugLogger: () => (/* binding */ createDebugLogger),\n/* harmony export */   withLogger: () => (/* binding */ withLogger)\n/* harmony export */ });\n/* harmony import */ var next_package_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/package.json */ \"(middleware)/../../node_modules/next/package.json\");\n/* harmony import */ var _logFormatter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logFormatter */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js\");\n\n\nconst createDebugLogger = (name, formatter)=>()=>{\n        const entries = [];\n        let isEnabled = false;\n        return {\n            enable: ()=>{\n                isEnabled = true;\n            },\n            debug: (...args)=>{\n                if (isEnabled) {\n                    entries.push(args.map((arg)=>typeof arg === \"function\" ? arg() : arg));\n                }\n            },\n            commit: ()=>{\n                if (isEnabled) {\n                    console.log(debugLogHeader(name));\n                    for (const log of entries){\n                        let output = formatter(log);\n                        output = output.split(\"\\n\").map((l)=>`  ${l}`).join(\"\\n\");\n                        if (process.env.VERCEL) {\n                            output = truncate(output, 4096);\n                        }\n                        console.log(output);\n                    }\n                    console.log(debugLogFooter(name));\n                }\n            }\n        };\n    };\nconst withLogger = (loggerFactoryOrName, handlerCtor)=>{\n    return (...args)=>{\n        const factory = typeof loggerFactoryOrName === \"string\" ? createDebugLogger(loggerFactoryOrName, _logFormatter__WEBPACK_IMPORTED_MODULE_1__.logFormatter) : loggerFactoryOrName;\n        const logger = factory();\n        const handler = handlerCtor(logger);\n        try {\n            const res = handler(...args);\n            if (typeof res === \"object\" && \"then\" in res && typeof res.then === \"function\") {\n                return res.then((val)=>{\n                    logger.commit();\n                    return val;\n                }).catch((err)=>{\n                    logger.commit();\n                    throw err;\n                });\n            }\n            logger.commit();\n            return res;\n        } catch (err) {\n            logger.commit();\n            throw err;\n        }\n    };\n};\nfunction debugLogHeader(name) {\n    return `[clerk debug start: ${name}]`;\n}\nfunction debugLogFooter(name) {\n    return `[clerk debug end: ${name}] (@clerk/nextjs=${\"4.29.3\"},next=${next_package_json__WEBPACK_IMPORTED_MODULE_0__.version})`;\n}\nfunction truncate(str, maxLength) {\n    const encoder = new TextEncoder();\n    const decoder = new TextDecoder(\"utf-8\");\n    const encodedString = encoder.encode(str);\n    const truncatedString = encodedString.slice(0, maxLength);\n    return decoder.decode(truncatedString).replace(/\\uFFFD/g, \"\");\n}\n //# sourceMappingURL=debugLogger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL2RlYnVnTG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFDTTtBQUM5QyxNQUFNRSxvQkFBb0IsQ0FBQ0MsTUFBTUMsWUFBYztRQUM3QyxNQUFNQyxVQUFVLEVBQUU7UUFDbEIsSUFBSUMsWUFBWTtRQUNoQixPQUFPO1lBQ0xDLFFBQVE7Z0JBQ05ELFlBQVk7WUFDZDtZQUNBRSxPQUFPLENBQUMsR0FBR0M7Z0JBQ1QsSUFBSUgsV0FBVztvQkFDYkQsUUFBUUssSUFBSSxDQUFDRCxLQUFLRSxHQUFHLENBQUMsQ0FBQ0MsTUFBUSxPQUFPQSxRQUFRLGFBQWFBLFFBQVFBO2dCQUNyRTtZQUNGO1lBQ0FDLFFBQVE7Z0JBQ04sSUFBSVAsV0FBVztvQkFDYlEsUUFBUUMsR0FBRyxDQUFDQyxlQUFlYjtvQkFDM0IsS0FBSyxNQUFNWSxPQUFPVixRQUFTO3dCQUN6QixJQUFJWSxTQUFTYixVQUFVVzt3QkFDdkJFLFNBQVNBLE9BQU9DLEtBQUssQ0FBQyxNQUFNUCxHQUFHLENBQUMsQ0FBQ1EsSUFBTSxDQUFDLEVBQUUsRUFBRUEsRUFBRSxDQUFDLEVBQUVDLElBQUksQ0FBQzt3QkFDdEQsSUFBSUMsUUFBUUMsR0FBRyxDQUFDQyxNQUFNLEVBQUU7NEJBQ3RCTixTQUFTTyxTQUFTUCxRQUFRO3dCQUM1Qjt3QkFDQUgsUUFBUUMsR0FBRyxDQUFDRTtvQkFDZDtvQkFDQUgsUUFBUUMsR0FBRyxDQUFDVSxlQUFldEI7Z0JBQzdCO1lBQ0Y7UUFDRjtJQUNGO0FBQ0EsTUFBTXVCLGFBQWEsQ0FBQ0MscUJBQXFCQztJQUN2QyxPQUFPLENBQUMsR0FBR25CO1FBQ1QsTUFBTW9CLFVBQVUsT0FBT0Ysd0JBQXdCLFdBQVd6QixrQkFBa0J5QixxQkFBcUIxQix1REFBWUEsSUFBSTBCO1FBQ2pILE1BQU1HLFNBQVNEO1FBQ2YsTUFBTUUsVUFBVUgsWUFBWUU7UUFDNUIsSUFBSTtZQUNGLE1BQU1FLE1BQU1ELFdBQVd0QjtZQUN2QixJQUFJLE9BQU91QixRQUFRLFlBQVksVUFBVUEsT0FBTyxPQUFPQSxJQUFJQyxJQUFJLEtBQUssWUFBWTtnQkFDOUUsT0FBT0QsSUFBSUMsSUFBSSxDQUFDLENBQUNDO29CQUNmSixPQUFPakIsTUFBTTtvQkFDYixPQUFPcUI7Z0JBQ1QsR0FBR0MsS0FBSyxDQUFDLENBQUNDO29CQUNSTixPQUFPakIsTUFBTTtvQkFDYixNQUFNdUI7Z0JBQ1I7WUFDRjtZQUNBTixPQUFPakIsTUFBTTtZQUNiLE9BQU9tQjtRQUNULEVBQUUsT0FBT0ksS0FBSztZQUNaTixPQUFPakIsTUFBTTtZQUNiLE1BQU11QjtRQUNSO0lBQ0Y7QUFDRjtBQUNBLFNBQVNwQixlQUFlYixJQUFJO0lBQzFCLE9BQU8sQ0FBQyxvQkFBb0IsRUFBRUEsS0FBSyxDQUFDLENBQUM7QUFDdkM7QUFDQSxTQUFTc0IsZUFBZXRCLElBQUk7SUFDMUIsT0FBTyxDQUFDLGtCQUFrQixFQUFFQSxLQUFLLGlCQUFpQixFQUFFLFNBQVMsTUFBTSxFQUFFSCxzREFBZSxDQUFDLENBQUMsQ0FBQztBQUN6RjtBQUNBLFNBQVN3QixTQUFTYyxHQUFHLEVBQUVDLFNBQVM7SUFDOUIsTUFBTUMsVUFBVSxJQUFJQztJQUNwQixNQUFNQyxVQUFVLElBQUlDLFlBQVk7SUFDaEMsTUFBTUMsZ0JBQWdCSixRQUFRSyxNQUFNLENBQUNQO0lBQ3JDLE1BQU1RLGtCQUFrQkYsY0FBY0csS0FBSyxDQUFDLEdBQUdSO0lBQy9DLE9BQU9HLFFBQVFNLE1BQU0sQ0FBQ0YsaUJBQWlCRyxPQUFPLENBQUMsV0FBVztBQUM1RDtBQUlFLENBQ0YsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL25leHRqcy9kaXN0L2VzbS91dGlscy9kZWJ1Z0xvZ2dlci5qcz9jYjhmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBuZXh0UGtnIGZyb20gXCJuZXh0L3BhY2thZ2UuanNvblwiO1xuaW1wb3J0IHsgbG9nRm9ybWF0dGVyIH0gZnJvbSBcIi4vbG9nRm9ybWF0dGVyXCI7XG5jb25zdCBjcmVhdGVEZWJ1Z0xvZ2dlciA9IChuYW1lLCBmb3JtYXR0ZXIpID0+ICgpID0+IHtcbiAgY29uc3QgZW50cmllcyA9IFtdO1xuICBsZXQgaXNFbmFibGVkID0gZmFsc2U7XG4gIHJldHVybiB7XG4gICAgZW5hYmxlOiAoKSA9PiB7XG4gICAgICBpc0VuYWJsZWQgPSB0cnVlO1xuICAgIH0sXG4gICAgZGVidWc6ICguLi5hcmdzKSA9PiB7XG4gICAgICBpZiAoaXNFbmFibGVkKSB7XG4gICAgICAgIGVudHJpZXMucHVzaChhcmdzLm1hcCgoYXJnKSA9PiB0eXBlb2YgYXJnID09PSBcImZ1bmN0aW9uXCIgPyBhcmcoKSA6IGFyZykpO1xuICAgICAgfVxuICAgIH0sXG4gICAgY29tbWl0OiAoKSA9PiB7XG4gICAgICBpZiAoaXNFbmFibGVkKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGRlYnVnTG9nSGVhZGVyKG5hbWUpKTtcbiAgICAgICAgZm9yIChjb25zdCBsb2cgb2YgZW50cmllcykge1xuICAgICAgICAgIGxldCBvdXRwdXQgPSBmb3JtYXR0ZXIobG9nKTtcbiAgICAgICAgICBvdXRwdXQgPSBvdXRwdXQuc3BsaXQoXCJcXG5cIikubWFwKChsKSA9PiBgICAke2x9YCkuam9pbihcIlxcblwiKTtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuVkVSQ0VMKSB7XG4gICAgICAgICAgICBvdXRwdXQgPSB0cnVuY2F0ZShvdXRwdXQsIDQwOTYpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zb2xlLmxvZyhvdXRwdXQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKGRlYnVnTG9nRm9vdGVyKG5hbWUpKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuY29uc3Qgd2l0aExvZ2dlciA9IChsb2dnZXJGYWN0b3J5T3JOYW1lLCBoYW5kbGVyQ3RvcikgPT4ge1xuICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICBjb25zdCBmYWN0b3J5ID0gdHlwZW9mIGxvZ2dlckZhY3RvcnlPck5hbWUgPT09IFwic3RyaW5nXCIgPyBjcmVhdGVEZWJ1Z0xvZ2dlcihsb2dnZXJGYWN0b3J5T3JOYW1lLCBsb2dGb3JtYXR0ZXIpIDogbG9nZ2VyRmFjdG9yeU9yTmFtZTtcbiAgICBjb25zdCBsb2dnZXIgPSBmYWN0b3J5KCk7XG4gICAgY29uc3QgaGFuZGxlciA9IGhhbmRsZXJDdG9yKGxvZ2dlcik7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlcyA9IGhhbmRsZXIoLi4uYXJncyk7XG4gICAgICBpZiAodHlwZW9mIHJlcyA9PT0gXCJvYmplY3RcIiAmJiBcInRoZW5cIiBpbiByZXMgJiYgdHlwZW9mIHJlcy50aGVuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHJlcy50aGVuKCh2YWwpID0+IHtcbiAgICAgICAgICBsb2dnZXIuY29tbWl0KCk7XG4gICAgICAgICAgcmV0dXJuIHZhbDtcbiAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgIGxvZ2dlci5jb21taXQoKTtcbiAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgbG9nZ2VyLmNvbW1pdCgpO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGxvZ2dlci5jb21taXQoKTtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH07XG59O1xuZnVuY3Rpb24gZGVidWdMb2dIZWFkZXIobmFtZSkge1xuICByZXR1cm4gYFtjbGVyayBkZWJ1ZyBzdGFydDogJHtuYW1lfV1gO1xufVxuZnVuY3Rpb24gZGVidWdMb2dGb290ZXIobmFtZSkge1xuICByZXR1cm4gYFtjbGVyayBkZWJ1ZyBlbmQ6ICR7bmFtZX1dIChAY2xlcmsvbmV4dGpzPSR7XCI0LjI5LjNcIn0sbmV4dD0ke25leHRQa2cudmVyc2lvbn0pYDtcbn1cbmZ1bmN0aW9uIHRydW5jYXRlKHN0ciwgbWF4TGVuZ3RoKSB7XG4gIGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcihcInV0Zi04XCIpO1xuICBjb25zdCBlbmNvZGVkU3RyaW5nID0gZW5jb2Rlci5lbmNvZGUoc3RyKTtcbiAgY29uc3QgdHJ1bmNhdGVkU3RyaW5nID0gZW5jb2RlZFN0cmluZy5zbGljZSgwLCBtYXhMZW5ndGgpO1xuICByZXR1cm4gZGVjb2Rlci5kZWNvZGUodHJ1bmNhdGVkU3RyaW5nKS5yZXBsYWNlKC9cXHVGRkZEL2csIFwiXCIpO1xufVxuZXhwb3J0IHtcbiAgY3JlYXRlRGVidWdMb2dnZXIsXG4gIHdpdGhMb2dnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Z0xvZ2dlci5qcy5tYXAiXSwibmFtZXMiOlsibmV4dFBrZyIsImxvZ0Zvcm1hdHRlciIsImNyZWF0ZURlYnVnTG9nZ2VyIiwibmFtZSIsImZvcm1hdHRlciIsImVudHJpZXMiLCJpc0VuYWJsZWQiLCJlbmFibGUiLCJkZWJ1ZyIsImFyZ3MiLCJwdXNoIiwibWFwIiwiYXJnIiwiY29tbWl0IiwiY29uc29sZSIsImxvZyIsImRlYnVnTG9nSGVhZGVyIiwib3V0cHV0Iiwic3BsaXQiLCJsIiwiam9pbiIsInByb2Nlc3MiLCJlbnYiLCJWRVJDRUwiLCJ0cnVuY2F0ZSIsImRlYnVnTG9nRm9vdGVyIiwid2l0aExvZ2dlciIsImxvZ2dlckZhY3RvcnlPck5hbWUiLCJoYW5kbGVyQ3RvciIsImZhY3RvcnkiLCJsb2dnZXIiLCJoYW5kbGVyIiwicmVzIiwidGhlbiIsInZhbCIsImNhdGNoIiwiZXJyIiwidmVyc2lvbiIsInN0ciIsIm1heExlbmd0aCIsImVuY29kZXIiLCJUZXh0RW5jb2RlciIsImRlY29kZXIiLCJUZXh0RGVjb2RlciIsImVuY29kZWRTdHJpbmciLCJlbmNvZGUiLCJ0cnVuY2F0ZWRTdHJpbmciLCJzbGljZSIsImRlY29kZSIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/debugLogger.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/index.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/utils/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pathMatchers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pathMatchers */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/pathMatchers.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _pathMatchers__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _pathMatchers__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./response */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/response.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _response__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _response__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQjtBQUNKLENBQzNCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvaW5kZXguanM/OGVlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9wYXRoTWF0Y2hlcnNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Jlc3BvbnNlXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logFormatter: () => (/* binding */ logFormatter)\n/* harmony export */ });\nconst maskSecretKey = (str)=>{\n    if (!str || typeof str !== \"string\") {\n        return str;\n    }\n    try {\n        return (str || \"\").replace(/^(sk_(live|test)_)(.+?)(.{3})$/, \"$1*********$4\");\n    } catch (e) {\n        return \"\";\n    }\n};\nconst logFormatter = (entry)=>{\n    return (Array.isArray(entry) ? entry : [\n        entry\n    ]).map((entry2)=>{\n        if (typeof entry2 === \"string\") {\n            return maskSecretKey(entry2);\n        }\n        const masked = Object.fromEntries(Object.entries(entry2).map(([k, v])=>[\n                k,\n                maskSecretKey(v)\n            ]));\n        return JSON.stringify(masked, null, 2);\n    }).join(\", \");\n};\n //# sourceMappingURL=logFormatter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL2xvZ0Zvcm1hdHRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsZ0JBQWdCLENBQUNDO0lBQ3JCLElBQUksQ0FBQ0EsT0FBTyxPQUFPQSxRQUFRLFVBQVU7UUFDbkMsT0FBT0E7SUFDVDtJQUNBLElBQUk7UUFDRixPQUFPLENBQUNBLE9BQU8sRUFBQyxFQUFHQyxPQUFPLENBQUMsa0NBQWtDO0lBQy9ELEVBQUUsT0FBT0MsR0FBRztRQUNWLE9BQU87SUFDVDtBQUNGO0FBQ0EsTUFBTUMsZUFBZSxDQUFDQztJQUNwQixPQUFPLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0YsU0FBU0EsUUFBUTtRQUFDQTtLQUFNLEVBQUVHLEdBQUcsQ0FBQyxDQUFDQztRQUNuRCxJQUFJLE9BQU9BLFdBQVcsVUFBVTtZQUM5QixPQUFPVCxjQUFjUztRQUN2QjtRQUNBLE1BQU1DLFNBQVNDLE9BQU9DLFdBQVcsQ0FBQ0QsT0FBT0UsT0FBTyxDQUFDSixRQUFRRCxHQUFHLENBQUMsQ0FBQyxDQUFDTSxHQUFHQyxFQUFFLEdBQUs7Z0JBQUNEO2dCQUFHZCxjQUFjZTthQUFHO1FBQzlGLE9BQU9DLEtBQUtDLFNBQVMsQ0FBQ1AsUUFBUSxNQUFNO0lBQ3RDLEdBQUdRLElBQUksQ0FBQztBQUNWO0FBR0UsQ0FDRix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL2xvZ0Zvcm1hdHRlci5qcz8xMDY3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1hc2tTZWNyZXRLZXkgPSAoc3RyKSA9PiB7XG4gIGlmICghc3RyIHx8IHR5cGVvZiBzdHIgIT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG4gIHRyeSB7XG4gICAgcmV0dXJuIChzdHIgfHwgXCJcIikucmVwbGFjZSgvXihza18obGl2ZXx0ZXN0KV8pKC4rPykoLnszfSkkLywgXCIkMSoqKioqKioqKiQ0XCIpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn07XG5jb25zdCBsb2dGb3JtYXR0ZXIgPSAoZW50cnkpID0+IHtcbiAgcmV0dXJuIChBcnJheS5pc0FycmF5KGVudHJ5KSA/IGVudHJ5IDogW2VudHJ5XSkubWFwKChlbnRyeTIpID0+IHtcbiAgICBpZiAodHlwZW9mIGVudHJ5MiA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgcmV0dXJuIG1hc2tTZWNyZXRLZXkoZW50cnkyKTtcbiAgICB9XG4gICAgY29uc3QgbWFza2VkID0gT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKGVudHJ5MikubWFwKChbaywgdl0pID0+IFtrLCBtYXNrU2VjcmV0S2V5KHYpXSkpO1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShtYXNrZWQsIG51bGwsIDIpO1xuICB9KS5qb2luKFwiLCBcIik7XG59O1xuZXhwb3J0IHtcbiAgbG9nRm9ybWF0dGVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nRm9ybWF0dGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJtYXNrU2VjcmV0S2V5Iiwic3RyIiwicmVwbGFjZSIsImUiLCJsb2dGb3JtYXR0ZXIiLCJlbnRyeSIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsImVudHJ5MiIsIm1hc2tlZCIsIk9iamVjdCIsImZyb21FbnRyaWVzIiwiZW50cmllcyIsImsiLCJ2IiwiSlNPTiIsInN0cmluZ2lmeSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/logFormatter.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/pathMatchers.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/utils/pathMatchers.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   paths: () => (/* binding */ paths)\n/* harmony export */ });\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path-to-regexp */ \"(middleware)/../../node_modules/path-to-regexp/dist.es2015/index.js\");\n\nconst paths = {\n    toRegexp: (path)=>{\n        try {\n            return (0,path_to_regexp__WEBPACK_IMPORTED_MODULE_0__.pathToRegexp)(path);\n        } catch (e) {\n            throw new Error(`Invalid path: ${path}.\nConsult the documentation of path-to-regexp here: https://github.com/pillarjs/path-to-regexp\n${e.message}`);\n        }\n    }\n};\n //# sourceMappingURL=pathMatchers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL3BhdGhNYXRjaGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QztBQUM5QyxNQUFNQyxRQUFRO0lBQ1pDLFVBQVUsQ0FBQ0M7UUFDVCxJQUFJO1lBQ0YsT0FBT0gsNERBQVlBLENBQUNHO1FBQ3RCLEVBQUUsT0FBT0MsR0FBRztZQUNWLE1BQU0sSUFBSUMsTUFDUixDQUFDLGNBQWMsRUFBRUYsS0FBSzs7QUFFOUIsRUFBRUMsRUFBRUUsT0FBTyxDQUFDLENBQUM7UUFFVDtJQUNGO0FBQ0Y7QUFHRSxDQUNGLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9uZXh0anMvZGlzdC9lc20vdXRpbHMvcGF0aE1hdGNoZXJzLmpzPzk4ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGF0aFRvUmVnZXhwIH0gZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5jb25zdCBwYXRocyA9IHtcbiAgdG9SZWdleHA6IChwYXRoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBwYXRoVG9SZWdleHAocGF0aCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgSW52YWxpZCBwYXRoOiAke3BhdGh9LlxuQ29uc3VsdCB0aGUgZG9jdW1lbnRhdGlvbiBvZiBwYXRoLXRvLXJlZ2V4cCBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vcGlsbGFyanMvcGF0aC10by1yZWdleHBcbiR7ZS5tZXNzYWdlfWBcbiAgICAgICk7XG4gICAgfVxuICB9XG59O1xuZXhwb3J0IHtcbiAgcGF0aHNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoTWF0Y2hlcnMuanMubWFwIl0sIm5hbWVzIjpbInBhdGhUb1JlZ2V4cCIsInBhdGhzIiwidG9SZWdleHAiLCJwYXRoIiwiZSIsIkVycm9yIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/pathMatchers.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/response.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@clerk/nextjs/dist/esm/utils/response.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isRedirect: () => (/* binding */ isRedirect),\n/* harmony export */   mergeResponses: () => (/* binding */ mergeResponses),\n/* harmony export */   setHeader: () => (/* binding */ setHeader),\n/* harmony export */   stringifyHeaders: () => (/* binding */ stringifyHeaders)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-response.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(middleware)/../../node_modules/@clerk/nextjs/dist/esm/constants.js\");\n\n\nconst mergeResponses = (...responses)=>{\n    const normalisedResponses = responses.filter(Boolean).map((res)=>{\n        if (res instanceof next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n            return res;\n        }\n        return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](res.body, res);\n    });\n    if (normalisedResponses.length === 0) {\n        return;\n    }\n    const lastResponse = normalisedResponses[normalisedResponses.length - 1];\n    const finalResponse = new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](lastResponse.body, lastResponse);\n    for (const response of normalisedResponses){\n        response.headers.forEach((value, name)=>{\n            finalResponse.headers.set(name, value);\n        });\n        response.cookies.getAll().forEach((cookie)=>{\n            const { name, value, ...options } = cookie;\n            finalResponse.cookies.set(name, value, options);\n        });\n    }\n    return finalResponse;\n};\nconst isRedirect = (res)=>{\n    return res.headers.get(_constants__WEBPACK_IMPORTED_MODULE_1__.constants.Headers.NextRedirect);\n};\nconst setHeader = (res, name, val)=>{\n    res.headers.set(name, val);\n    return res;\n};\nconst stringifyHeaders = (headers)=>{\n    if (!headers) {\n        return JSON.stringify({});\n    }\n    const obj = {};\n    headers.forEach((value, name)=>{\n        obj[name] = value;\n    });\n    return JSON.stringify(obj);\n};\n //# sourceMappingURL=response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL3Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQztBQUNlO0FBQzFELE1BQU1HLGlCQUFpQixDQUFDLEdBQUdDO0lBQ3pCLE1BQU1DLHNCQUFzQkQsVUFBVUUsTUFBTSxDQUFDQyxTQUFTQyxHQUFHLENBQUMsQ0FBQ0M7UUFDekQsSUFBSUEsZUFBZVQsa0ZBQVlBLEVBQUU7WUFDL0IsT0FBT1M7UUFDVDtRQUNBLE9BQU8sSUFBSVQsa0ZBQVlBLENBQUNTLElBQUlDLElBQUksRUFBRUQ7SUFDcEM7SUFDQSxJQUFJSixvQkFBb0JNLE1BQU0sS0FBSyxHQUFHO1FBQ3BDO0lBQ0Y7SUFDQSxNQUFNQyxlQUFlUCxtQkFBbUIsQ0FBQ0Esb0JBQW9CTSxNQUFNLEdBQUcsRUFBRTtJQUN4RSxNQUFNRSxnQkFBZ0IsSUFBSWIsa0ZBQVlBLENBQUNZLGFBQWFGLElBQUksRUFBRUU7SUFDMUQsS0FBSyxNQUFNRSxZQUFZVCxvQkFBcUI7UUFDMUNTLFNBQVNDLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDLENBQUNDLE9BQU9DO1lBQy9CTCxjQUFjRSxPQUFPLENBQUNJLEdBQUcsQ0FBQ0QsTUFBTUQ7UUFDbEM7UUFDQUgsU0FBU00sT0FBTyxDQUFDQyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyxDQUFDTTtZQUNqQyxNQUFNLEVBQUVKLElBQUksRUFBRUQsS0FBSyxFQUFFLEdBQUdNLFNBQVMsR0FBR0Q7WUFDcENULGNBQWNPLE9BQU8sQ0FBQ0QsR0FBRyxDQUFDRCxNQUFNRCxPQUFPTTtRQUN6QztJQUNGO0lBQ0EsT0FBT1Y7QUFDVDtBQUNBLE1BQU1XLGFBQWEsQ0FBQ2Y7SUFDbEIsT0FBT0EsSUFBSU0sT0FBTyxDQUFDVSxHQUFHLENBQUN2QixpREFBYUEsQ0FBQ3dCLE9BQU8sQ0FBQ0MsWUFBWTtBQUMzRDtBQUNBLE1BQU1DLFlBQVksQ0FBQ25CLEtBQUtTLE1BQU1XO0lBQzVCcEIsSUFBSU0sT0FBTyxDQUFDSSxHQUFHLENBQUNELE1BQU1XO0lBQ3RCLE9BQU9wQjtBQUNUO0FBQ0EsTUFBTXFCLG1CQUFtQixDQUFDZjtJQUN4QixJQUFJLENBQUNBLFNBQVM7UUFDWixPQUFPZ0IsS0FBS0MsU0FBUyxDQUFDLENBQUM7SUFDekI7SUFDQSxNQUFNQyxNQUFNLENBQUM7SUFDYmxCLFFBQVFDLE9BQU8sQ0FBQyxDQUFDQyxPQUFPQztRQUN0QmUsR0FBRyxDQUFDZixLQUFLLEdBQUdEO0lBQ2Q7SUFDQSxPQUFPYyxLQUFLQyxTQUFTLENBQUNDO0FBQ3hCO0FBTUUsQ0FDRixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvbmV4dGpzL2Rpc3QvZXNtL3V0aWxzL3Jlc3BvbnNlLmpzP2MzMTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5pbXBvcnQgeyBjb25zdGFudHMgYXMgbmV4dENvbnN0YW50cyB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcbmNvbnN0IG1lcmdlUmVzcG9uc2VzID0gKC4uLnJlc3BvbnNlcykgPT4ge1xuICBjb25zdCBub3JtYWxpc2VkUmVzcG9uc2VzID0gcmVzcG9uc2VzLmZpbHRlcihCb29sZWFuKS5tYXAoKHJlcykgPT4ge1xuICAgIGlmIChyZXMgaW5zdGFuY2VvZiBOZXh0UmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKHJlcy5ib2R5LCByZXMpO1xuICB9KTtcbiAgaWYgKG5vcm1hbGlzZWRSZXNwb25zZXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IGxhc3RSZXNwb25zZSA9IG5vcm1hbGlzZWRSZXNwb25zZXNbbm9ybWFsaXNlZFJlc3BvbnNlcy5sZW5ndGggLSAxXTtcbiAgY29uc3QgZmluYWxSZXNwb25zZSA9IG5ldyBOZXh0UmVzcG9uc2UobGFzdFJlc3BvbnNlLmJvZHksIGxhc3RSZXNwb25zZSk7XG4gIGZvciAoY29uc3QgcmVzcG9uc2Ugb2Ygbm9ybWFsaXNlZFJlc3BvbnNlcykge1xuICAgIHJlc3BvbnNlLmhlYWRlcnMuZm9yRWFjaCgodmFsdWUsIG5hbWUpID0+IHtcbiAgICAgIGZpbmFsUmVzcG9uc2UuaGVhZGVycy5zZXQobmFtZSwgdmFsdWUpO1xuICAgIH0pO1xuICAgIHJlc3BvbnNlLmNvb2tpZXMuZ2V0QWxsKCkuZm9yRWFjaCgoY29va2llKSA9PiB7XG4gICAgICBjb25zdCB7IG5hbWUsIHZhbHVlLCAuLi5vcHRpb25zIH0gPSBjb29raWU7XG4gICAgICBmaW5hbFJlc3BvbnNlLmNvb2tpZXMuc2V0KG5hbWUsIHZhbHVlLCBvcHRpb25zKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gZmluYWxSZXNwb25zZTtcbn07XG5jb25zdCBpc1JlZGlyZWN0ID0gKHJlcykgPT4ge1xuICByZXR1cm4gcmVzLmhlYWRlcnMuZ2V0KG5leHRDb25zdGFudHMuSGVhZGVycy5OZXh0UmVkaXJlY3QpO1xufTtcbmNvbnN0IHNldEhlYWRlciA9IChyZXMsIG5hbWUsIHZhbCkgPT4ge1xuICByZXMuaGVhZGVycy5zZXQobmFtZSwgdmFsKTtcbiAgcmV0dXJuIHJlcztcbn07XG5jb25zdCBzdHJpbmdpZnlIZWFkZXJzID0gKGhlYWRlcnMpID0+IHtcbiAgaWYgKCFoZWFkZXJzKSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHt9KTtcbiAgfVxuICBjb25zdCBvYmogPSB7fTtcbiAgaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwgbmFtZSkgPT4ge1xuICAgIG9ialtuYW1lXSA9IHZhbHVlO1xuICB9KTtcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG9iaik7XG59O1xuZXhwb3J0IHtcbiAgaXNSZWRpcmVjdCxcbiAgbWVyZ2VSZXNwb25zZXMsXG4gIHNldEhlYWRlcixcbiAgc3RyaW5naWZ5SGVhZGVyc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJjb25zdGFudHMiLCJuZXh0Q29uc3RhbnRzIiwibWVyZ2VSZXNwb25zZXMiLCJyZXNwb25zZXMiLCJub3JtYWxpc2VkUmVzcG9uc2VzIiwiZmlsdGVyIiwiQm9vbGVhbiIsIm1hcCIsInJlcyIsImJvZHkiLCJsZW5ndGgiLCJsYXN0UmVzcG9uc2UiLCJmaW5hbFJlc3BvbnNlIiwicmVzcG9uc2UiLCJoZWFkZXJzIiwiZm9yRWFjaCIsInZhbHVlIiwibmFtZSIsInNldCIsImNvb2tpZXMiLCJnZXRBbGwiLCJjb29raWUiLCJvcHRpb25zIiwiaXNSZWRpcmVjdCIsImdldCIsIkhlYWRlcnMiLCJOZXh0UmVkaXJlY3QiLCJzZXRIZWFkZXIiLCJ2YWwiLCJzdHJpbmdpZnlIZWFkZXJzIiwiSlNPTiIsInN0cmluZ2lmeSIsIm9iaiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/nextjs/dist/esm/utils/response.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/cookie/index.js":
/*!******************************************!*\
  !*** ../../node_modules/cookie/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ exports.parse = parse;\nexports.serialize = serialize;\n/**\n * Module variables.\n * @private\n */ var __toString = Object.prototype.toString;\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */ var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */ function parse(str, options) {\n    if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n    }\n    var obj = {};\n    var opt = options || {};\n    var dec = opt.decode || decode;\n    var index = 0;\n    while(index < str.length){\n        var eqIdx = str.indexOf(\"=\", index);\n        // no more cookie pairs\n        if (eqIdx === -1) {\n            break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n            endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        // only assign once\n        if (undefined === obj[key]) {\n            var val = str.slice(eqIdx + 1, endIdx).trim();\n            // quoted values\n            if (val.charCodeAt(0) === 0x22) {\n                val = val.slice(1, -1);\n            }\n            obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n    }\n    return obj;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */ function serialize(name, val, options) {\n    var opt = options || {};\n    var enc = opt.encode || encode;\n    if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n    }\n    var value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n    }\n    var str = name + \"=\" + value;\n    if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n    }\n    if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n            throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (opt.secure) {\n        str += \"; Secure\";\n    }\n    if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch(priority){\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(\"option priority is invalid\");\n        }\n    }\n    if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch(sameSite){\n            case true:\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(\"option sameSite is invalid\");\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */ function decode(str) {\n    return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n}\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */ function encode(val) {\n    return encodeURIComponent(val);\n}\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */ function isDate(val) {\n    return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */ function tryDecode(str, decode) {\n    try {\n        return decode(str);\n    } catch (e) {\n        return str;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/cookie/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/deepmerge/dist/cjs.js":
/*!************************************************!*\
  !*** ../../node_modules/deepmerge/dist/cjs.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\nvar isMergeableObject = function isMergeableObject(value) {\n    return isNonNullObject(value) && !isSpecial(value);\n};\nfunction isNonNullObject(value) {\n    return !!value && typeof value === \"object\";\n}\nfunction isSpecial(value) {\n    var stringValue = Object.prototype.toString.call(value);\n    return stringValue === \"[object RegExp]\" || stringValue === \"[object Date]\" || isReactElement(value);\n}\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === \"function\" && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for(\"react.element\") : 0xeac7;\nfunction isReactElement(value) {\n    return value.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {};\n}\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n    return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n}\nfunction defaultArrayMerge(target, source, options) {\n    return target.concat(source).map(function(element) {\n        return cloneUnlessOtherwiseSpecified(element, options);\n    });\n}\nfunction getMergeFunction(key, options) {\n    if (!options.customMerge) {\n        return deepmerge;\n    }\n    var customMerge = options.customMerge(key);\n    return typeof customMerge === \"function\" ? customMerge : deepmerge;\n}\nfunction getEnumerableOwnPropertySymbols(target) {\n    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n        return target.propertyIsEnumerable(symbol);\n    }) : [];\n}\nfunction getKeys(target) {\n    return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\nfunction propertyIsOnObject(object, property) {\n    try {\n        return property in object;\n    } catch (_) {\n        return false;\n    }\n}\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n    return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n     && !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n     && Object.propertyIsEnumerable.call(target, key) // and also unsafe if they're nonenumerable.\n    );\n}\nfunction mergeObject(target, source, options) {\n    var destination = {};\n    if (options.isMergeableObject(target)) {\n        getKeys(target).forEach(function(key) {\n            destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n        });\n    }\n    getKeys(source).forEach(function(key) {\n        if (propertyIsUnsafe(target, key)) {\n            return;\n        }\n        if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n            destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n        } else {\n            destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n        }\n    });\n    return destination;\n}\nfunction deepmerge(target, source, options) {\n    options = options || {};\n    options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n    options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n    // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n    // implementations can use it. The caller may not replace it.\n    options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n    if (!sourceAndTargetTypesMatch) {\n        return cloneUnlessOtherwiseSpecified(source, options);\n    } else if (sourceIsArray) {\n        return options.arrayMerge(target, source, options);\n    } else {\n        return mergeObject(target, source, options);\n    }\n}\ndeepmerge.all = function deepmergeAll(array, options) {\n    if (!Array.isArray(array)) {\n        throw new Error(\"first argument should be an array\");\n    }\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, options);\n    }, {});\n};\nvar deepmerge_1 = deepmerge;\nmodule.exports = deepmerge_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/deepmerge/dist/cjs.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/dot-case/dist.es2015/index.js":
/*!********************************************************!*\
  !*** ../../node_modules/dot-case/dist.es2015/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dotCase: () => (/* binding */ dotCase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(middleware)/../../node_modules/dot-case/node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var no_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! no-case */ \"(middleware)/../../node_modules/no-case/dist.es2015/index.js\");\n\n\nfunction dotCase(input, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return (0,no_case__WEBPACK_IMPORTED_MODULE_0__.noCase)(input, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({\n        delimiter: \".\"\n    }, options));\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9kb3QtY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUM7QUFDQTtBQUMxQixTQUFTRSxRQUFRQyxLQUFLLEVBQUVDLE9BQU87SUFDbEMsSUFBSUEsWUFBWSxLQUFLLEdBQUc7UUFBRUEsVUFBVSxDQUFDO0lBQUc7SUFDeEMsT0FBT0gsK0NBQU1BLENBQUNFLE9BQU9ILCtDQUFRQSxDQUFDO1FBQUVLLFdBQVc7SUFBSSxHQUFHRDtBQUN0RCxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL2RvdC1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzPzA4YWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IG5vQ2FzZSB9IGZyb20gXCJuby1jYXNlXCI7XG5leHBvcnQgZnVuY3Rpb24gZG90Q2FzZShpbnB1dCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgcmV0dXJuIG5vQ2FzZShpbnB1dCwgX19hc3NpZ24oeyBkZWxpbWl0ZXI6IFwiLlwiIH0sIG9wdGlvbnMpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIm5vQ2FzZSIsImRvdENhc2UiLCJpbnB1dCIsIm9wdGlvbnMiLCJkZWxpbWl0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/dot-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/lower-case/dist.es2015/index.js":
/*!**********************************************************!*\
  !*** ../../node_modules/lower-case/dist.es2015/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   localeLowerCase: () => (/* binding */ localeLowerCase),\n/* harmony export */   lowerCase: () => (/* binding */ lowerCase)\n/* harmony export */ });\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */ var SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"i\",\n            I: \"ı\",\n            İ: \"i\"\n        }\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"i\",\n            I: \"ı\",\n            İ: \"i\"\n        }\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"i̇\",\n            J: \"j̇\",\n            Į: \"į̇\",\n            Ì: \"i̇̀\",\n            Í: \"i̇́\",\n            Ĩ: \"i̇̃\"\n        }\n    }\n};\n/**\n * Localized lower case.\n */ function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang) return lowerCase(str.replace(lang.regexp, function(m) {\n        return lang.map[m];\n    }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */ function lowerCase(str) {\n    return str.toLowerCase();\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9sb3dlci1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0NBRUMsR0FDRCxJQUFJQSxtQkFBbUI7SUFDbkJDLElBQUk7UUFDQUMsUUFBUTtRQUNSQyxLQUFLO1lBQ0RDLEdBQUc7WUFDSEMsR0FBRztZQUNIQyxJQUFJO1FBQ1I7SUFDSjtJQUNBQyxJQUFJO1FBQ0FMLFFBQVE7UUFDUkMsS0FBSztZQUNEQyxHQUFHO1lBQ0hDLEdBQUc7WUFDSEMsSUFBSTtRQUNSO0lBQ0o7SUFDQUUsSUFBSTtRQUNBTixRQUFRO1FBQ1JDLEtBQUs7WUFDREUsR0FBRztZQUNISSxHQUFHO1lBQ0hDLEdBQUc7WUFDSEMsR0FBRztZQUNIQyxHQUFHO1lBQ0hDLEdBQUc7UUFDUDtJQUNKO0FBQ0o7QUFDQTs7Q0FFQyxHQUNNLFNBQVNDLGdCQUFnQkMsR0FBRyxFQUFFQyxNQUFNO0lBQ3ZDLElBQUlDLE9BQU9qQixnQkFBZ0IsQ0FBQ2dCLE9BQU9FLFdBQVcsR0FBRztJQUNqRCxJQUFJRCxNQUNBLE9BQU9FLFVBQVVKLElBQUlLLE9BQU8sQ0FBQ0gsS0FBS2YsTUFBTSxFQUFFLFNBQVVtQixDQUFDO1FBQUksT0FBT0osS0FBS2QsR0FBRyxDQUFDa0IsRUFBRTtJQUFFO0lBQ2pGLE9BQU9GLFVBQVVKO0FBQ3JCO0FBQ0E7O0NBRUMsR0FDTSxTQUFTSSxVQUFVSixHQUFHO0lBQ3pCLE9BQU9BLElBQUlHLFdBQVc7QUFDMUIsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9sb3dlci1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzP2RkZGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTb3VyY2U6IGZ0cDovL2Z0cC51bmljb2RlLm9yZy9QdWJsaWMvVUNEL2xhdGVzdC91Y2QvU3BlY2lhbENhc2luZy50eHRcbiAqL1xudmFyIFNVUFBPUlRFRF9MT0NBTEUgPSB7XG4gICAgdHI6IHtcbiAgICAgICAgcmVnZXhwOiAvXFx1MDEzMHxcXHUwMDQ5fFxcdTAwNDlcXHUwMzA3L2csXG4gICAgICAgIG1hcDoge1xuICAgICAgICAgICAgxLA6IFwiXFx1MDA2OVwiLFxuICAgICAgICAgICAgSTogXCJcXHUwMTMxXCIsXG4gICAgICAgICAgICBJzIc6IFwiXFx1MDA2OVwiLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgYXo6IHtcbiAgICAgICAgcmVnZXhwOiAvXFx1MDEzMC9nLFxuICAgICAgICBtYXA6IHtcbiAgICAgICAgICAgIMSwOiBcIlxcdTAwNjlcIixcbiAgICAgICAgICAgIEk6IFwiXFx1MDEzMVwiLFxuICAgICAgICAgICAgScyHOiBcIlxcdTAwNjlcIixcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIGx0OiB7XG4gICAgICAgIHJlZ2V4cDogL1xcdTAwNDl8XFx1MDA0QXxcXHUwMTJFfFxcdTAwQ0N8XFx1MDBDRHxcXHUwMTI4L2csXG4gICAgICAgIG1hcDoge1xuICAgICAgICAgICAgSTogXCJcXHUwMDY5XFx1MDMwN1wiLFxuICAgICAgICAgICAgSjogXCJcXHUwMDZBXFx1MDMwN1wiLFxuICAgICAgICAgICAgxK46IFwiXFx1MDEyRlxcdTAzMDdcIixcbiAgICAgICAgICAgIMOMOiBcIlxcdTAwNjlcXHUwMzA3XFx1MDMwMFwiLFxuICAgICAgICAgICAgw406IFwiXFx1MDA2OVxcdTAzMDdcXHUwMzAxXCIsXG4gICAgICAgICAgICDEqDogXCJcXHUwMDY5XFx1MDMwN1xcdTAzMDNcIixcbiAgICAgICAgfSxcbiAgICB9LFxufTtcbi8qKlxuICogTG9jYWxpemVkIGxvd2VyIGNhc2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb2NhbGVMb3dlckNhc2Uoc3RyLCBsb2NhbGUpIHtcbiAgICB2YXIgbGFuZyA9IFNVUFBPUlRFRF9MT0NBTEVbbG9jYWxlLnRvTG93ZXJDYXNlKCldO1xuICAgIGlmIChsYW5nKVxuICAgICAgICByZXR1cm4gbG93ZXJDYXNlKHN0ci5yZXBsYWNlKGxhbmcucmVnZXhwLCBmdW5jdGlvbiAobSkgeyByZXR1cm4gbGFuZy5tYXBbbV07IH0pKTtcbiAgICByZXR1cm4gbG93ZXJDYXNlKHN0cik7XG59XG4vKipcbiAqIExvd2VyIGNhc2UgYXMgYSBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvd2VyQ2FzZShzdHIpIHtcbiAgICByZXR1cm4gc3RyLnRvTG93ZXJDYXNlKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiU1VQUE9SVEVEX0xPQ0FMRSIsInRyIiwicmVnZXhwIiwibWFwIiwixLAiLCJJIiwiScyHIiwiYXoiLCJsdCIsIkoiLCLEriIsIsOMIiwiw40iLCLEqCIsImxvY2FsZUxvd2VyQ2FzZSIsInN0ciIsImxvY2FsZSIsImxhbmciLCJ0b0xvd2VyQ2FzZSIsImxvd2VyQ2FzZSIsInJlcGxhY2UiLCJtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/lower-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/map-obj/index.js":
/*!*******************************************!*\
  !*** ../../node_modules/map-obj/index.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\nconst isObject = (value)=>typeof value === \"object\" && value !== null;\nconst mapObjectSkip = Symbol(\"skip\");\n// Customized for this use-case\nconst isObjectCustom = (value)=>isObject(value) && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);\nconst mapObject = (object, mapper, options, isSeen = new WeakMap())=>{\n    options = {\n        deep: false,\n        target: {},\n        ...options\n    };\n    if (isSeen.has(object)) {\n        return isSeen.get(object);\n    }\n    isSeen.set(object, options.target);\n    const { target } = options;\n    delete options.target;\n    const mapArray = (array)=>array.map((element)=>isObjectCustom(element) ? mapObject(element, mapper, options, isSeen) : element);\n    if (Array.isArray(object)) {\n        return mapArray(object);\n    }\n    for (const [key, value] of Object.entries(object)){\n        const mapResult = mapper(key, value, object);\n        if (mapResult === mapObjectSkip) {\n            continue;\n        }\n        let [newKey, newValue, { shouldRecurse = true } = {}] = mapResult;\n        // Drop `__proto__` keys.\n        if (newKey === \"__proto__\") {\n            continue;\n        }\n        if (options.deep && shouldRecurse && isObjectCustom(newValue)) {\n            newValue = Array.isArray(newValue) ? mapArray(newValue) : mapObject(newValue, mapper, options, isSeen);\n        }\n        target[newKey] = newValue;\n    }\n    return target;\n};\nmodule.exports = (object, mapper, options)=>{\n    if (!isObject(object)) {\n        throw new TypeError(`Expected an object, got \\`${object}\\` (${typeof object})`);\n    }\n    return mapObject(object, mapper, options);\n};\nmodule.exports.mapObjectSkip = mapObjectSkip;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9tYXAtb2JqL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsV0FBV0MsQ0FBQUEsUUFBUyxPQUFPQSxVQUFVLFlBQVlBLFVBQVU7QUFDakUsTUFBTUMsZ0JBQWdCQyxPQUFPO0FBRTdCLCtCQUErQjtBQUMvQixNQUFNQyxpQkFBaUJILENBQUFBLFFBQ3RCRCxTQUFTQyxVQUNULENBQUVBLENBQUFBLGlCQUFpQkksTUFBSyxLQUN4QixDQUFFSixDQUFBQSxpQkFBaUJLLEtBQUksS0FDdkIsQ0FBRUwsQ0FBQUEsaUJBQWlCTSxJQUFHO0FBRXZCLE1BQU1DLFlBQVksQ0FBQ0MsUUFBUUMsUUFBUUMsU0FBU0MsU0FBUyxJQUFJQyxTQUFTO0lBQ2pFRixVQUFVO1FBQ1RHLE1BQU07UUFDTkMsUUFBUSxDQUFDO1FBQ1QsR0FBR0osT0FBTztJQUNYO0lBRUEsSUFBSUMsT0FBT0ksR0FBRyxDQUFDUCxTQUFTO1FBQ3ZCLE9BQU9HLE9BQU9LLEdBQUcsQ0FBQ1I7SUFDbkI7SUFFQUcsT0FBT00sR0FBRyxDQUFDVCxRQUFRRSxRQUFRSSxNQUFNO0lBRWpDLE1BQU0sRUFBQ0EsTUFBTSxFQUFDLEdBQUdKO0lBQ2pCLE9BQU9BLFFBQVFJLE1BQU07SUFFckIsTUFBTUksV0FBV0MsQ0FBQUEsUUFBU0EsTUFBTUMsR0FBRyxDQUFDQyxDQUFBQSxVQUFXbEIsZUFBZWtCLFdBQVdkLFVBQVVjLFNBQVNaLFFBQVFDLFNBQVNDLFVBQVVVO0lBQ3ZILElBQUlDLE1BQU1DLE9BQU8sQ0FBQ2YsU0FBUztRQUMxQixPQUFPVSxTQUFTVjtJQUNqQjtJQUVBLEtBQUssTUFBTSxDQUFDZ0IsS0FBS3hCLE1BQU0sSUFBSXlCLE9BQU9DLE9BQU8sQ0FBQ2xCLFFBQVM7UUFDbEQsTUFBTW1CLFlBQVlsQixPQUFPZSxLQUFLeEIsT0FBT1E7UUFFckMsSUFBSW1CLGNBQWMxQixlQUFlO1lBQ2hDO1FBQ0Q7UUFFQSxJQUFJLENBQUMyQixRQUFRQyxVQUFVLEVBQUNDLGdCQUFnQixJQUFJLEVBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHSDtRQUV0RCx5QkFBeUI7UUFDekIsSUFBSUMsV0FBVyxhQUFhO1lBQzNCO1FBQ0Q7UUFFQSxJQUFJbEIsUUFBUUcsSUFBSSxJQUFJaUIsaUJBQWlCM0IsZUFBZTBCLFdBQVc7WUFDOURBLFdBQVdQLE1BQU1DLE9BQU8sQ0FBQ00sWUFDeEJYLFNBQVNXLFlBQ1R0QixVQUFVc0IsVUFBVXBCLFFBQVFDLFNBQVNDO1FBQ3ZDO1FBRUFHLE1BQU0sQ0FBQ2MsT0FBTyxHQUFHQztJQUNsQjtJQUVBLE9BQU9mO0FBQ1I7QUFFQWlCLE9BQU9DLE9BQU8sR0FBRyxDQUFDeEIsUUFBUUMsUUFBUUM7SUFDakMsSUFBSSxDQUFDWCxTQUFTUyxTQUFTO1FBQ3RCLE1BQU0sSUFBSXlCLFVBQVUsQ0FBQywwQkFBMEIsRUFBRXpCLE9BQU8sSUFBSSxFQUFFLE9BQU9BLE9BQU8sQ0FBQyxDQUFDO0lBQy9FO0lBRUEsT0FBT0QsVUFBVUMsUUFBUUMsUUFBUUM7QUFDbEM7QUFFQXFCLDRCQUE0QixHQUFHOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9tYXAtb2JqL2luZGV4LmpzPzNkZDMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpc09iamVjdCA9IHZhbHVlID0+IHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGw7XG5jb25zdCBtYXBPYmplY3RTa2lwID0gU3ltYm9sKCdza2lwJyk7XG5cbi8vIEN1c3RvbWl6ZWQgZm9yIHRoaXMgdXNlLWNhc2VcbmNvbnN0IGlzT2JqZWN0Q3VzdG9tID0gdmFsdWUgPT5cblx0aXNPYmplY3QodmFsdWUpICYmXG5cdCEodmFsdWUgaW5zdGFuY2VvZiBSZWdFeHApICYmXG5cdCEodmFsdWUgaW5zdGFuY2VvZiBFcnJvcikgJiZcblx0ISh2YWx1ZSBpbnN0YW5jZW9mIERhdGUpO1xuXG5jb25zdCBtYXBPYmplY3QgPSAob2JqZWN0LCBtYXBwZXIsIG9wdGlvbnMsIGlzU2VlbiA9IG5ldyBXZWFrTWFwKCkpID0+IHtcblx0b3B0aW9ucyA9IHtcblx0XHRkZWVwOiBmYWxzZSxcblx0XHR0YXJnZXQ6IHt9LFxuXHRcdC4uLm9wdGlvbnNcblx0fTtcblxuXHRpZiAoaXNTZWVuLmhhcyhvYmplY3QpKSB7XG5cdFx0cmV0dXJuIGlzU2Vlbi5nZXQob2JqZWN0KTtcblx0fVxuXG5cdGlzU2Vlbi5zZXQob2JqZWN0LCBvcHRpb25zLnRhcmdldCk7XG5cblx0Y29uc3Qge3RhcmdldH0gPSBvcHRpb25zO1xuXHRkZWxldGUgb3B0aW9ucy50YXJnZXQ7XG5cblx0Y29uc3QgbWFwQXJyYXkgPSBhcnJheSA9PiBhcnJheS5tYXAoZWxlbWVudCA9PiBpc09iamVjdEN1c3RvbShlbGVtZW50KSA/IG1hcE9iamVjdChlbGVtZW50LCBtYXBwZXIsIG9wdGlvbnMsIGlzU2VlbikgOiBlbGVtZW50KTtcblx0aWYgKEFycmF5LmlzQXJyYXkob2JqZWN0KSkge1xuXHRcdHJldHVybiBtYXBBcnJheShvYmplY3QpO1xuXHR9XG5cblx0Zm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMob2JqZWN0KSkge1xuXHRcdGNvbnN0IG1hcFJlc3VsdCA9IG1hcHBlcihrZXksIHZhbHVlLCBvYmplY3QpO1xuXG5cdFx0aWYgKG1hcFJlc3VsdCA9PT0gbWFwT2JqZWN0U2tpcCkge1xuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0bGV0IFtuZXdLZXksIG5ld1ZhbHVlLCB7c2hvdWxkUmVjdXJzZSA9IHRydWV9ID0ge31dID0gbWFwUmVzdWx0O1xuXG5cdFx0Ly8gRHJvcCBgX19wcm90b19fYCBrZXlzLlxuXHRcdGlmIChuZXdLZXkgPT09ICdfX3Byb3RvX18nKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRpZiAob3B0aW9ucy5kZWVwICYmIHNob3VsZFJlY3Vyc2UgJiYgaXNPYmplY3RDdXN0b20obmV3VmFsdWUpKSB7XG5cdFx0XHRuZXdWYWx1ZSA9IEFycmF5LmlzQXJyYXkobmV3VmFsdWUpID9cblx0XHRcdFx0bWFwQXJyYXkobmV3VmFsdWUpIDpcblx0XHRcdFx0bWFwT2JqZWN0KG5ld1ZhbHVlLCBtYXBwZXIsIG9wdGlvbnMsIGlzU2Vlbik7XG5cdFx0fVxuXG5cdFx0dGFyZ2V0W25ld0tleV0gPSBuZXdWYWx1ZTtcblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IChvYmplY3QsIG1hcHBlciwgb3B0aW9ucykgPT4ge1xuXHRpZiAoIWlzT2JqZWN0KG9iamVjdCkpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGBFeHBlY3RlZCBhbiBvYmplY3QsIGdvdCBcXGAke29iamVjdH1cXGAgKCR7dHlwZW9mIG9iamVjdH0pYCk7XG5cdH1cblxuXHRyZXR1cm4gbWFwT2JqZWN0KG9iamVjdCwgbWFwcGVyLCBvcHRpb25zKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLm1hcE9iamVjdFNraXAgPSBtYXBPYmplY3RTa2lwO1xuIl0sIm5hbWVzIjpbImlzT2JqZWN0IiwidmFsdWUiLCJtYXBPYmplY3RTa2lwIiwiU3ltYm9sIiwiaXNPYmplY3RDdXN0b20iLCJSZWdFeHAiLCJFcnJvciIsIkRhdGUiLCJtYXBPYmplY3QiLCJvYmplY3QiLCJtYXBwZXIiLCJvcHRpb25zIiwiaXNTZWVuIiwiV2Vha01hcCIsImRlZXAiLCJ0YXJnZXQiLCJoYXMiLCJnZXQiLCJzZXQiLCJtYXBBcnJheSIsImFycmF5IiwibWFwIiwiZWxlbWVudCIsIkFycmF5IiwiaXNBcnJheSIsImtleSIsIk9iamVjdCIsImVudHJpZXMiLCJtYXBSZXN1bHQiLCJuZXdLZXkiLCJuZXdWYWx1ZSIsInNob3VsZFJlY3Vyc2UiLCJtb2R1bGUiLCJleHBvcnRzIiwiVHlwZUVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/map-obj/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/next/dist/compiled/@edge-runtime/cookies/index.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n    RequestCookies: ()=>RequestCookies,\n    ResponseCookies: ()=>ResponseCookies,\n    parseCookie: ()=>parseCookie,\n    parseSetCookie: ()=>parseSetCookie,\n    stringifyCookie: ()=>stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n// src/serialize.ts\nfunction stringifyCookie(c) {\n    var _a;\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n        \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n        \"priority\" in c && c.priority && `Priority=${c.priority}`\n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n    const map = /* @__PURE__ */ new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const splitAt = pair.indexOf(\"=\");\n        if (splitAt === -1) {\n            map.set(pair, \"true\");\n            continue;\n        }\n        const [key, value] = [\n            pair.slice(0, splitAt),\n            pair.slice(splitAt + 1)\n        ];\n        try {\n            map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n        } catch  {}\n    }\n    return map;\n}\nfunction parseSetCookie(setCookie) {\n    if (!setCookie) {\n        return void 0;\n    }\n    const [[name, value], ...attributes] = parseCookie(setCookie);\n    const { domain, expires, httponly, maxage, path, samesite, secure, priority } = Object.fromEntries(attributes.map(([key, value2])=>[\n            key.toLowerCase(),\n            value2\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        },\n        ...priority && {\n            priority: parsePriority(priority)\n        }\n    };\n    return compact(cookie);\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nvar SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\n    \"low\",\n    \"medium\",\n    \"high\"\n];\nfunction parsePriority(string) {\n    string = string.toLowerCase();\n    return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n    if (!cookiesString) return [];\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    cookiesSeparatorFound = true;\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n// src/request-cookies.ts\nvar RequestCookies = class {\n    constructor(requestHeaders){\n        /** @internal */ this._parsed = /* @__PURE__ */ new Map();\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookie(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var _a;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value2])=>stringifyCookie(value2)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>stringifyCookie(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n    toString() {\n        return [\n            ...this._parsed.values()\n        ].map((v)=>`${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n    }\n};\n// src/response-cookies.ts\nvar ResponseCookies = class {\n    constructor(responseHeaders){\n        /** @internal */ this._parsed = /* @__PURE__ */ new Map();\n        var _a, _b, _c;\n        this._headers = responseHeaders;\n        const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n        const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n        for (const cookieString of cookieStrings){\n            const parsed = parseSetCookie(cookieString);\n            if (parsed) this._parsed.set(parsed.name, parsed);\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var _a;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n        return all.filter((c)=>c.name === key);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const [name, path, domain] = typeof args[0] === \"string\" ? [\n            args[0]\n        ] : [\n            args[0].name,\n            args[0].path,\n            args[0].domain\n        ];\n        return this.set({\n            name,\n            path,\n            domain,\n            value: \"\",\n            expires: /* @__PURE__ */ new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n    toString() {\n        return [\n            ...this._parsed.values()\n        ].map(stringifyCookie).join(\"; \");\n    }\n};\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = stringifyCookie(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (typeof cookie.expires === \"number\") {\n        cookie.expires = new Date(cookie.expires);\n    }\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n    }\n    if (cookie.path === null || cookie.path === void 0) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/compiled/cookie/index.js":
/*!*************************************************************!*\
  !*** ../../node_modules/next/dist/compiled/cookie/index.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
eval("var __dirname = \"/\";\n\n(()=>{\n    \"use strict\";\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var e = {};\n    (()=>{\n        var r = e;\n        /*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ r.parse = parse;\n        r.serialize = serialize;\n        var i = decodeURIComponent;\n        var t = encodeURIComponent;\n        var a = /; */;\n        var n = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n        function parse(e, r) {\n            if (typeof e !== \"string\") {\n                throw new TypeError(\"argument str must be a string\");\n            }\n            var t = {};\n            var n = r || {};\n            var o = e.split(a);\n            var s = n.decode || i;\n            for(var p = 0; p < o.length; p++){\n                var f = o[p];\n                var u = f.indexOf(\"=\");\n                if (u < 0) {\n                    continue;\n                }\n                var v = f.substr(0, u).trim();\n                var c = f.substr(++u, f.length).trim();\n                if ('\"' == c[0]) {\n                    c = c.slice(1, -1);\n                }\n                if (undefined == t[v]) {\n                    t[v] = tryDecode(c, s);\n                }\n            }\n            return t;\n        }\n        function serialize(e, r, i) {\n            var a = i || {};\n            var o = a.encode || t;\n            if (typeof o !== \"function\") {\n                throw new TypeError(\"option encode is invalid\");\n            }\n            if (!n.test(e)) {\n                throw new TypeError(\"argument name is invalid\");\n            }\n            var s = o(r);\n            if (s && !n.test(s)) {\n                throw new TypeError(\"argument val is invalid\");\n            }\n            var p = e + \"=\" + s;\n            if (null != a.maxAge) {\n                var f = a.maxAge - 0;\n                if (isNaN(f) || !isFinite(f)) {\n                    throw new TypeError(\"option maxAge is invalid\");\n                }\n                p += \"; Max-Age=\" + Math.floor(f);\n            }\n            if (a.domain) {\n                if (!n.test(a.domain)) {\n                    throw new TypeError(\"option domain is invalid\");\n                }\n                p += \"; Domain=\" + a.domain;\n            }\n            if (a.path) {\n                if (!n.test(a.path)) {\n                    throw new TypeError(\"option path is invalid\");\n                }\n                p += \"; Path=\" + a.path;\n            }\n            if (a.expires) {\n                if (typeof a.expires.toUTCString !== \"function\") {\n                    throw new TypeError(\"option expires is invalid\");\n                }\n                p += \"; Expires=\" + a.expires.toUTCString();\n            }\n            if (a.httpOnly) {\n                p += \"; HttpOnly\";\n            }\n            if (a.secure) {\n                p += \"; Secure\";\n            }\n            if (a.sameSite) {\n                var u = typeof a.sameSite === \"string\" ? a.sameSite.toLowerCase() : a.sameSite;\n                switch(u){\n                    case true:\n                        p += \"; SameSite=Strict\";\n                        break;\n                    case \"lax\":\n                        p += \"; SameSite=Lax\";\n                        break;\n                    case \"strict\":\n                        p += \"; SameSite=Strict\";\n                        break;\n                    case \"none\":\n                        p += \"; SameSite=None\";\n                        break;\n                    default:\n                        throw new TypeError(\"option sameSite is invalid\");\n                }\n            }\n            return p;\n        }\n        function tryDecode(e, r) {\n            try {\n                return r(e);\n            } catch (r) {\n                return e;\n            }\n        }\n    })();\n    module.exports = e;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY29va2llL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7O0FBQUM7SUFBSztJQUFhLElBQUcsT0FBT0Esd0JBQXNCLGFBQVlBLG9CQUFvQkMsRUFBRSxHQUFDQyxTQUFTQSxHQUFDO0lBQUksSUFBSUMsSUFBRSxDQUFDO0lBQUc7UUFBSyxJQUFJQyxJQUFFRDtRQUN6SDs7Ozs7Q0FLQyxHQUFFQyxFQUFFQyxLQUFLLEdBQUNBO1FBQU1ELEVBQUVFLFNBQVMsR0FBQ0E7UUFBVSxJQUFJQyxJQUFFQztRQUFtQixJQUFJQyxJQUFFQztRQUFtQixJQUFJQyxJQUFFO1FBQU0sSUFBSUMsSUFBRTtRQUF3QyxTQUFTUCxNQUFNRixDQUFDLEVBQUNDLENBQUM7WUFBRSxJQUFHLE9BQU9ELE1BQUksVUFBUztnQkFBQyxNQUFNLElBQUlVLFVBQVU7WUFBZ0M7WUFBQyxJQUFJSixJQUFFLENBQUM7WUFBRSxJQUFJRyxJQUFFUixLQUFHLENBQUM7WUFBRSxJQUFJVSxJQUFFWCxFQUFFWSxLQUFLLENBQUNKO1lBQUcsSUFBSUssSUFBRUosRUFBRUssTUFBTSxJQUFFVjtZQUFFLElBQUksSUFBSVcsSUFBRSxHQUFFQSxJQUFFSixFQUFFSyxNQUFNLEVBQUNELElBQUk7Z0JBQUMsSUFBSUUsSUFBRU4sQ0FBQyxDQUFDSSxFQUFFO2dCQUFDLElBQUlHLElBQUVELEVBQUVFLE9BQU8sQ0FBQztnQkFBSyxJQUFHRCxJQUFFLEdBQUU7b0JBQUM7Z0JBQVE7Z0JBQUMsSUFBSUUsSUFBRUgsRUFBRUksTUFBTSxDQUFDLEdBQUVILEdBQUdJLElBQUk7Z0JBQUcsSUFBSUMsSUFBRU4sRUFBRUksTUFBTSxDQUFDLEVBQUVILEdBQUVELEVBQUVELE1BQU0sRUFBRU0sSUFBSTtnQkFBRyxJQUFHLE9BQUtDLENBQUMsQ0FBQyxFQUFFLEVBQUM7b0JBQUNBLElBQUVBLEVBQUVDLEtBQUssQ0FBQyxHQUFFLENBQUM7Z0JBQUU7Z0JBQUMsSUFBR0MsYUFBV25CLENBQUMsQ0FBQ2MsRUFBRSxFQUFDO29CQUFDZCxDQUFDLENBQUNjLEVBQUUsR0FBQ00sVUFBVUgsR0FBRVY7Z0JBQUU7WUFBQztZQUFDLE9BQU9QO1FBQUM7UUFBQyxTQUFTSCxVQUFVSCxDQUFDLEVBQUNDLENBQUMsRUFBQ0csQ0FBQztZQUFFLElBQUlJLElBQUVKLEtBQUcsQ0FBQztZQUFFLElBQUlPLElBQUVILEVBQUVtQixNQUFNLElBQUVyQjtZQUFFLElBQUcsT0FBT0ssTUFBSSxZQUFXO2dCQUFDLE1BQU0sSUFBSUQsVUFBVTtZQUEyQjtZQUFDLElBQUcsQ0FBQ0QsRUFBRW1CLElBQUksQ0FBQzVCLElBQUc7Z0JBQUMsTUFBTSxJQUFJVSxVQUFVO1lBQTJCO1lBQUMsSUFBSUcsSUFBRUYsRUFBRVY7WUFBRyxJQUFHWSxLQUFHLENBQUNKLEVBQUVtQixJQUFJLENBQUNmLElBQUc7Z0JBQUMsTUFBTSxJQUFJSCxVQUFVO1lBQTBCO1lBQUMsSUFBSUssSUFBRWYsSUFBRSxNQUFJYTtZQUFFLElBQUcsUUFBTUwsRUFBRXFCLE1BQU0sRUFBQztnQkFBQyxJQUFJWixJQUFFVCxFQUFFcUIsTUFBTSxHQUFDO2dCQUFFLElBQUdDLE1BQU1iLE1BQUksQ0FBQ2MsU0FBU2QsSUFBRztvQkFBQyxNQUFNLElBQUlQLFVBQVU7Z0JBQTJCO2dCQUFDSyxLQUFHLGVBQWFpQixLQUFLQyxLQUFLLENBQUNoQjtZQUFFO1lBQUMsSUFBR1QsRUFBRTBCLE1BQU0sRUFBQztnQkFBQyxJQUFHLENBQUN6QixFQUFFbUIsSUFBSSxDQUFDcEIsRUFBRTBCLE1BQU0sR0FBRTtvQkFBQyxNQUFNLElBQUl4QixVQUFVO2dCQUEyQjtnQkFBQ0ssS0FBRyxjQUFZUCxFQUFFMEIsTUFBTTtZQUFBO1lBQUMsSUFBRzFCLEVBQUUyQixJQUFJLEVBQUM7Z0JBQUMsSUFBRyxDQUFDMUIsRUFBRW1CLElBQUksQ0FBQ3BCLEVBQUUyQixJQUFJLEdBQUU7b0JBQUMsTUFBTSxJQUFJekIsVUFBVTtnQkFBeUI7Z0JBQUNLLEtBQUcsWUFBVVAsRUFBRTJCLElBQUk7WUFBQTtZQUFDLElBQUczQixFQUFFNEIsT0FBTyxFQUFDO2dCQUFDLElBQUcsT0FBTzVCLEVBQUU0QixPQUFPLENBQUNDLFdBQVcsS0FBRyxZQUFXO29CQUFDLE1BQU0sSUFBSTNCLFVBQVU7Z0JBQTRCO2dCQUFDSyxLQUFHLGVBQWFQLEVBQUU0QixPQUFPLENBQUNDLFdBQVc7WUFBRTtZQUFDLElBQUc3QixFQUFFOEIsUUFBUSxFQUFDO2dCQUFDdkIsS0FBRztZQUFZO1lBQUMsSUFBR1AsRUFBRStCLE1BQU0sRUFBQztnQkFBQ3hCLEtBQUc7WUFBVTtZQUFDLElBQUdQLEVBQUVnQyxRQUFRLEVBQUM7Z0JBQUMsSUFBSXRCLElBQUUsT0FBT1YsRUFBRWdDLFFBQVEsS0FBRyxXQUFTaEMsRUFBRWdDLFFBQVEsQ0FBQ0MsV0FBVyxLQUFHakMsRUFBRWdDLFFBQVE7Z0JBQUMsT0FBT3RCO29CQUFHLEtBQUs7d0JBQUtILEtBQUc7d0JBQW9CO29CQUFNLEtBQUk7d0JBQU1BLEtBQUc7d0JBQWlCO29CQUFNLEtBQUk7d0JBQVNBLEtBQUc7d0JBQW9CO29CQUFNLEtBQUk7d0JBQU9BLEtBQUc7d0JBQWtCO29CQUFNO3dCQUFRLE1BQU0sSUFBSUwsVUFBVTtnQkFBNkI7WUFBQztZQUFDLE9BQU9LO1FBQUM7UUFBQyxTQUFTVyxVQUFVMUIsQ0FBQyxFQUFDQyxDQUFDO1lBQUUsSUFBRztnQkFBQyxPQUFPQSxFQUFFRDtZQUFFLEVBQUMsT0FBTUMsR0FBRTtnQkFBQyxPQUFPRDtZQUFDO1FBQUM7SUFBQztJQUFLMEMsT0FBT0MsT0FBTyxHQUFDM0M7QUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jb29raWUvaW5kZXguanM/NmZmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIoKCk9PntcInVzZSBzdHJpY3RcIjtpZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIGU9e307KCgpPT57dmFyIHI9ZTtcbi8qIVxuICogY29va2llXG4gKiBDb3B5cmlnaHQoYykgMjAxMi0yMDE0IFJvbWFuIFNodHlsbWFuXG4gKiBDb3B5cmlnaHQoYykgMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9yLnBhcnNlPXBhcnNlO3Iuc2VyaWFsaXplPXNlcmlhbGl6ZTt2YXIgaT1kZWNvZGVVUklDb21wb25lbnQ7dmFyIHQ9ZW5jb2RlVVJJQ29tcG9uZW50O3ZhciBhPS87ICovO3ZhciBuPS9eW1xcdTAwMDlcXHUwMDIwLVxcdTAwN2VcXHUwMDgwLVxcdTAwZmZdKyQvO2Z1bmN0aW9uIHBhcnNlKGUscil7aWYodHlwZW9mIGUhPT1cInN0cmluZ1wiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXJndW1lbnQgc3RyIG11c3QgYmUgYSBzdHJpbmdcIil9dmFyIHQ9e307dmFyIG49cnx8e307dmFyIG89ZS5zcGxpdChhKTt2YXIgcz1uLmRlY29kZXx8aTtmb3IodmFyIHA9MDtwPG8ubGVuZ3RoO3ArKyl7dmFyIGY9b1twXTt2YXIgdT1mLmluZGV4T2YoXCI9XCIpO2lmKHU8MCl7Y29udGludWV9dmFyIHY9Zi5zdWJzdHIoMCx1KS50cmltKCk7dmFyIGM9Zi5zdWJzdHIoKyt1LGYubGVuZ3RoKS50cmltKCk7aWYoJ1wiJz09Y1swXSl7Yz1jLnNsaWNlKDEsLTEpfWlmKHVuZGVmaW5lZD09dFt2XSl7dFt2XT10cnlEZWNvZGUoYyxzKX19cmV0dXJuIHR9ZnVuY3Rpb24gc2VyaWFsaXplKGUscixpKXt2YXIgYT1pfHx7fTt2YXIgbz1hLmVuY29kZXx8dDtpZih0eXBlb2YgbyE9PVwiZnVuY3Rpb25cIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBlbmNvZGUgaXMgaW52YWxpZFwiKX1pZighbi50ZXN0KGUpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiYXJndW1lbnQgbmFtZSBpcyBpbnZhbGlkXCIpfXZhciBzPW8ocik7aWYocyYmIW4udGVzdChzKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHZhbCBpcyBpbnZhbGlkXCIpfXZhciBwPWUrXCI9XCIrcztpZihudWxsIT1hLm1heEFnZSl7dmFyIGY9YS5tYXhBZ2UtMDtpZihpc05hTihmKXx8IWlzRmluaXRlKGYpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIG1heEFnZSBpcyBpbnZhbGlkXCIpfXArPVwiOyBNYXgtQWdlPVwiK01hdGguZmxvb3IoZil9aWYoYS5kb21haW4pe2lmKCFuLnRlc3QoYS5kb21haW4pKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIGRvbWFpbiBpcyBpbnZhbGlkXCIpfXArPVwiOyBEb21haW49XCIrYS5kb21haW59aWYoYS5wYXRoKXtpZighbi50ZXN0KGEucGF0aCkpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gcGF0aCBpcyBpbnZhbGlkXCIpfXArPVwiOyBQYXRoPVwiK2EucGF0aH1pZihhLmV4cGlyZXMpe2lmKHR5cGVvZiBhLmV4cGlyZXMudG9VVENTdHJpbmchPT1cImZ1bmN0aW9uXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gZXhwaXJlcyBpcyBpbnZhbGlkXCIpfXArPVwiOyBFeHBpcmVzPVwiK2EuZXhwaXJlcy50b1VUQ1N0cmluZygpfWlmKGEuaHR0cE9ubHkpe3ArPVwiOyBIdHRwT25seVwifWlmKGEuc2VjdXJlKXtwKz1cIjsgU2VjdXJlXCJ9aWYoYS5zYW1lU2l0ZSl7dmFyIHU9dHlwZW9mIGEuc2FtZVNpdGU9PT1cInN0cmluZ1wiP2Euc2FtZVNpdGUudG9Mb3dlckNhc2UoKTphLnNhbWVTaXRlO3N3aXRjaCh1KXtjYXNlIHRydWU6cCs9XCI7IFNhbWVTaXRlPVN0cmljdFwiO2JyZWFrO2Nhc2VcImxheFwiOnArPVwiOyBTYW1lU2l0ZT1MYXhcIjticmVhaztjYXNlXCJzdHJpY3RcIjpwKz1cIjsgU2FtZVNpdGU9U3RyaWN0XCI7YnJlYWs7Y2FzZVwibm9uZVwiOnArPVwiOyBTYW1lU2l0ZT1Ob25lXCI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIHNhbWVTaXRlIGlzIGludmFsaWRcIil9fXJldHVybiBwfWZ1bmN0aW9uIHRyeURlY29kZShlLHIpe3RyeXtyZXR1cm4gcihlKX1jYXRjaChyKXtyZXR1cm4gZX19fSkoKTttb2R1bGUuZXhwb3J0cz1lfSkoKTsiXSwibmFtZXMiOlsiX19uY2N3cGNrX3JlcXVpcmVfXyIsImFiIiwiX19kaXJuYW1lIiwiZSIsInIiLCJwYXJzZSIsInNlcmlhbGl6ZSIsImkiLCJkZWNvZGVVUklDb21wb25lbnQiLCJ0IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiYSIsIm4iLCJUeXBlRXJyb3IiLCJvIiwic3BsaXQiLCJzIiwiZGVjb2RlIiwicCIsImxlbmd0aCIsImYiLCJ1IiwiaW5kZXhPZiIsInYiLCJzdWJzdHIiLCJ0cmltIiwiYyIsInNsaWNlIiwidW5kZWZpbmVkIiwidHJ5RGVjb2RlIiwiZW5jb2RlIiwidGVzdCIsIm1heEFnZSIsImlzTmFOIiwiaXNGaW5pdGUiLCJNYXRoIiwiZmxvb3IiLCJkb21haW4iLCJwYXRoIiwiZXhwaXJlcyIsInRvVVRDU3RyaW5nIiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJzYW1lU2l0ZSIsInRvTG93ZXJDYXNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/compiled/cookie/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/action-async-storage.external.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/action-async-storage.external.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionAsyncStorage: () => (/* binding */ actionAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/../../node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst actionAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=action-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2FjdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ3pELE1BQU1DLHFCQUFxQkQsNkVBQXVCQSxHQUFHLENBRTVELHlEQUF5RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYWN0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanM/YTNiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSB9IGZyb20gXCIuL2FzeW5jLWxvY2FsLXN0b3JhZ2VcIjtcbmV4cG9ydCBjb25zdCBhY3Rpb25Bc3luY1N0b3JhZ2UgPSBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY3Rpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiLCJhY3Rpb25Bc3luY1N0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/action-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/app-router-headers.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/app-router-headers.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION: () => (/* binding */ ACTION),\n/* harmony export */   FLIGHT_PARAMETERS: () => (/* binding */ FLIGHT_PARAMETERS),\n/* harmony export */   NEXT_ROUTER_PREFETCH: () => (/* binding */ NEXT_ROUTER_PREFETCH),\n/* harmony export */   NEXT_ROUTER_STATE_TREE: () => (/* binding */ NEXT_ROUTER_STATE_TREE),\n/* harmony export */   NEXT_RSC_UNION_QUERY: () => (/* binding */ NEXT_RSC_UNION_QUERY),\n/* harmony export */   NEXT_URL: () => (/* binding */ NEXT_URL),\n/* harmony export */   RSC: () => (/* binding */ RSC),\n/* harmony export */   RSC_CONTENT_TYPE_HEADER: () => (/* binding */ RSC_CONTENT_TYPE_HEADER),\n/* harmony export */   RSC_VARY_HEADER: () => (/* binding */ RSC_VARY_HEADER)\n/* harmony export */ });\nconst RSC = \"RSC\";\nconst ACTION = \"Next-Action\";\nconst NEXT_ROUTER_STATE_TREE = \"Next-Router-State-Tree\";\nconst NEXT_ROUTER_PREFETCH = \"Next-Router-Prefetch\";\nconst NEXT_URL = \"Next-Url\";\nconst RSC_CONTENT_TYPE_HEADER = \"text/x-component\";\nconst RSC_VARY_HEADER = RSC + \", \" + NEXT_ROUTER_STATE_TREE + \", \" + NEXT_ROUTER_PREFETCH + \", \" + NEXT_URL;\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ]\n];\nconst NEXT_RSC_UNION_QUERY = \"_rsc\"; //# sourceMappingURL=app-router-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxNQUFNLE1BQU07QUFDbEIsTUFBTUMsU0FBUyxjQUFjO0FBQzdCLE1BQU1DLHlCQUF5Qix5QkFBeUI7QUFDeEQsTUFBTUMsdUJBQXVCLHVCQUF1QjtBQUNwRCxNQUFNQyxXQUFXLFdBQVc7QUFDNUIsTUFBTUMsMEJBQTBCLG1CQUFtQjtBQUNuRCxNQUFNQyxrQkFBa0JOLE1BQU0sT0FBT0UseUJBQXlCLE9BQU9DLHVCQUF1QixPQUFPQyxTQUFTO0FBQzVHLE1BQU1HLG9CQUFvQjtJQUM3QjtRQUNJUDtLQUNIO0lBQ0Q7UUFDSUU7S0FDSDtJQUNEO1FBQ0lDO0tBQ0g7Q0FDSixDQUFDO0FBQ0ssTUFBTUssdUJBQXVCLE9BQU8sQ0FFM0MsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9hcHAtcm91dGVyLWhlYWRlcnMuanM/YTE3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUlNDID0gXCJSU0NcIjtcbmV4cG9ydCBjb25zdCBBQ1RJT04gPSBcIk5leHQtQWN0aW9uXCI7XG5leHBvcnQgY29uc3QgTkVYVF9ST1VURVJfU1RBVEVfVFJFRSA9IFwiTmV4dC1Sb3V0ZXItU3RhdGUtVHJlZVwiO1xuZXhwb3J0IGNvbnN0IE5FWFRfUk9VVEVSX1BSRUZFVENIID0gXCJOZXh0LVJvdXRlci1QcmVmZXRjaFwiO1xuZXhwb3J0IGNvbnN0IE5FWFRfVVJMID0gXCJOZXh0LVVybFwiO1xuZXhwb3J0IGNvbnN0IFJTQ19DT05URU5UX1RZUEVfSEVBREVSID0gXCJ0ZXh0L3gtY29tcG9uZW50XCI7XG5leHBvcnQgY29uc3QgUlNDX1ZBUllfSEVBREVSID0gUlNDICsgXCIsIFwiICsgTkVYVF9ST1VURVJfU1RBVEVfVFJFRSArIFwiLCBcIiArIE5FWFRfUk9VVEVSX1BSRUZFVENIICsgXCIsIFwiICsgTkVYVF9VUkw7XG5leHBvcnQgY29uc3QgRkxJR0hUX1BBUkFNRVRFUlMgPSBbXG4gICAgW1xuICAgICAgICBSU0NcbiAgICBdLFxuICAgIFtcbiAgICAgICAgTkVYVF9ST1VURVJfU1RBVEVfVFJFRVxuICAgIF0sXG4gICAgW1xuICAgICAgICBORVhUX1JPVVRFUl9QUkVGRVRDSFxuICAgIF1cbl07XG5leHBvcnQgY29uc3QgTkVYVF9SU0NfVU5JT05fUVVFUlkgPSBcIl9yc2NcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlci1oZWFkZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJSU0MiLCJBQ1RJT04iLCJORVhUX1JPVVRFUl9TVEFURV9UUkVFIiwiTkVYVF9ST1VURVJfUFJFRkVUQ0giLCJORVhUX1VSTCIsIlJTQ19DT05URU5UX1RZUEVfSEVBREVSIiwiUlNDX1ZBUllfSEVBREVSIiwiRkxJR0hUX1BBUkFNRVRFUlMiLCJORVhUX1JTQ19VTklPTl9RVUVSWSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/app-router-headers.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/async-local-storage.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/async-local-storage.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncLocalStorage: () => (/* binding */ createAsyncLocalStorage)\n/* harmony export */ });\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n} //# sourceMappingURL=async-local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2FzeW5jLWxvY2FsLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLDJDQUEyQyxJQUFJQyxNQUFNO0FBQzNELE1BQU1DO0lBQ0ZDLFVBQVU7UUFDTixNQUFNSDtJQUNWO0lBQ0FJLFdBQVc7UUFDUCw0RUFBNEU7UUFDNUUsT0FBT0M7SUFDWDtJQUNBQyxNQUFNO1FBQ0YsTUFBTU47SUFDVjtJQUNBTyxPQUFPO1FBQ0gsTUFBTVA7SUFDVjtJQUNBUSxZQUFZO1FBQ1IsTUFBTVI7SUFDVjtBQUNKO0FBQ0EsTUFBTVMsK0JBQStCQyxXQUFXQyxpQkFBaUI7QUFDMUQsU0FBU0M7SUFDWixJQUFJSCw4QkFBOEI7UUFDOUIsT0FBTyxJQUFJQTtJQUNmO0lBQ0EsT0FBTyxJQUFJUDtBQUNmLEVBRUEsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9hc3luYy1sb2NhbC1zdG9yYWdlLmpzPzhiZDAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvciA9IG5ldyBFcnJvcihcIkludmFyaWFudDogQXN5bmNMb2NhbFN0b3JhZ2UgYWNjZXNzZWQgaW4gcnVudGltZSB3aGVyZSBpdCBpcyBub3QgYXZhaWxhYmxlXCIpO1xuY2xhc3MgRmFrZUFzeW5jTG9jYWxTdG9yYWdlIHtcbiAgICBkaXNhYmxlKCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBnZXRTdG9yZSgpIHtcbiAgICAgICAgLy8gVGhpcyBmYWtlIGltcGxlbWVudGF0aW9uIG9mIEFzeW5jTG9jYWxTdG9yYWdlIGFsd2F5cyByZXR1cm5zIGB1bmRlZmluZWRgLlxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBydW4oKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxuICAgIGV4aXQoKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxuICAgIGVudGVyV2l0aCgpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG59XG5jb25zdCBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlID0gZ2xvYmFsVGhpcy5Bc3luY0xvY2FsU3RvcmFnZTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpIHtcbiAgICBpZiAobWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSkge1xuICAgICAgICByZXR1cm4gbmV3IG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBGYWtlQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXN5bmMtbG9jYWwtc3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOlsic2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvciIsIkVycm9yIiwiRmFrZUFzeW5jTG9jYWxTdG9yYWdlIiwiZGlzYWJsZSIsImdldFN0b3JlIiwidW5kZWZpbmVkIiwicnVuIiwiZXhpdCIsImVudGVyV2l0aCIsIm1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UiLCJnbG9iYWxUaGlzIiwiQXN5bmNMb2NhbFN0b3JhZ2UiLCJjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/async-local-storage.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bailoutToClientRendering: () => (/* binding */ bailoutToClientRendering)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_lazy_dynamic_dynamic_no_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/lazy-dynamic/dynamic-no-ssr */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/lazy-dynamic/dynamic-no-ssr.js\");\n/* harmony import */ var _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./static-generation-async-storage.external */ \"(middleware)/../../node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\n\nfunction bailoutToClientRendering() {\n    const staticGenerationStore = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.forceStatic) {\n        return true;\n    }\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.isStaticGeneration) {\n        (0,_shared_lib_lazy_dynamic_dynamic_no_ssr__WEBPACK_IMPORTED_MODULE_0__.suspense)();\n    }\n    return false;\n} //# sourceMappingURL=bailout-to-client-rendering.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2JhaWxvdXQtdG8tY2xpZW50LXJlbmRlcmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0U7QUFDa0I7QUFDbkYsU0FBU0U7SUFDWixNQUFNQyx3QkFBd0JGLG1HQUE0QkEsQ0FBQ0csUUFBUTtJQUNuRSxJQUFJRCx5QkFBeUIsT0FBTyxLQUFLLElBQUlBLHNCQUFzQkUsV0FBVyxFQUFFO1FBQzVFLE9BQU87SUFDWDtJQUNBLElBQUlGLHlCQUF5QixPQUFPLEtBQUssSUFBSUEsc0JBQXNCRyxrQkFBa0IsRUFBRTtRQUNuRk4saUZBQVFBO0lBQ1o7SUFDQSxPQUFPO0FBQ1gsRUFFQSx1REFBdUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2JhaWxvdXQtdG8tY2xpZW50LXJlbmRlcmluZy5qcz83Nzk2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN1c3BlbnNlIH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvbGF6eS1keW5hbWljL2R5bmFtaWMtbm8tc3NyXCI7XG5pbXBvcnQgeyBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbFwiO1xuZXhwb3J0IGZ1bmN0aW9uIGJhaWxvdXRUb0NsaWVudFJlbmRlcmluZygpIHtcbiAgICBjb25zdCBzdGF0aWNHZW5lcmF0aW9uU3RvcmUgPSBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9PSBudWxsID8gdm9pZCAwIDogc3RhdGljR2VuZXJhdGlvblN0b3JlLmZvcmNlU3RhdGljKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuaXNTdGF0aWNHZW5lcmF0aW9uKSB7XG4gICAgICAgIHN1c3BlbnNlKCk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFpbG91dC10by1jbGllbnQtcmVuZGVyaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJzdXNwZW5zZSIsInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UiLCJiYWlsb3V0VG9DbGllbnRSZW5kZXJpbmciLCJzdGF0aWNHZW5lcmF0aW9uU3RvcmUiLCJnZXRTdG9yZSIsImZvcmNlU3RhdGljIiwiaXNTdGF0aWNHZW5lcmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clientHookInServerComponentError: () => (/* binding */ clientHookInServerComponentError)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction clientHookInServerComponentError(hookName) {\n    if (true) {\n        // If useState is undefined we're in a server component\n        if (!(react__WEBPACK_IMPORTED_MODULE_0___default().useState)) {\n            throw new Error(\"\" + hookName + ' only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component');\n        }\n    }\n} //# sourceMappingURL=client-hook-in-server-component-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1ob29rLWluLXNlcnZlci1jb21wb25lbnQtZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBQ25CLFNBQVNDLGlDQUFpQ0MsUUFBUTtJQUNyRCxJQUFJQyxJQUFxQyxFQUFFO1FBQ3ZDLHVEQUF1RDtRQUN2RCxJQUFJLENBQUNILHVEQUFjLEVBQUU7WUFDakIsTUFBTSxJQUFJSyxNQUFNLEtBQUtILFdBQVc7UUFDcEM7SUFDSjtBQUNKLEVBRUEsaUVBQWlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9jbGllbnQtaG9vay1pbi1zZXJ2ZXItY29tcG9uZW50LWVycm9yLmpzPzBjMmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIGNsaWVudEhvb2tJblNlcnZlckNvbXBvbmVudEVycm9yKGhvb2tOYW1lKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAvLyBJZiB1c2VTdGF0ZSBpcyB1bmRlZmluZWQgd2UncmUgaW4gYSBzZXJ2ZXIgY29tcG9uZW50XG4gICAgICAgIGlmICghUmVhY3QudXNlU3RhdGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlwiICsgaG9va05hbWUgKyAnIG9ubHkgd29ya3MgaW4gQ2xpZW50IENvbXBvbmVudHMuIEFkZCB0aGUgXCJ1c2UgY2xpZW50XCIgZGlyZWN0aXZlIGF0IHRoZSB0b3Agb2YgdGhlIGZpbGUgdG8gdXNlIGl0LiBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL3JlYWN0LWNsaWVudC1ob29rLWluLXNlcnZlci1jb21wb25lbnQnKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50LWhvb2staW4tc2VydmVyLWNvbXBvbmVudC1lcnJvci5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJjbGllbnRIb29rSW5TZXJ2ZXJDb21wb25lbnRFcnJvciIsImhvb2tOYW1lIiwicHJvY2VzcyIsInVzZVN0YXRlIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/draft-mode.js":
/*!************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/draft-mode.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftMode: () => (/* binding */ DraftMode)\n/* harmony export */ });\n/* harmony import */ var _static_generation_bailout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./static-generation-bailout */ \"(middleware)/../../node_modules/next/dist/esm/client/components/static-generation-bailout.js\");\n\nclass DraftMode {\n    get isEnabled() {\n        return this._provider.isEnabled;\n    }\n    enable() {\n        if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_0__.staticGenerationBailout)(\"draftMode().enable()\")) {\n            return;\n        }\n        return this._provider.enable();\n    }\n    disable() {\n        if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_0__.staticGenerationBailout)(\"draftMode().disable()\")) {\n            return;\n        }\n        return this._provider.disable();\n    }\n    constructor(provider){\n        this._provider = provider;\n    }\n} //# sourceMappingURL=draft-mode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2RyYWZ0LW1vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0U7QUFDL0QsTUFBTUM7SUFDVCxJQUFJQyxZQUFZO1FBQ1osT0FBTyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0QsU0FBUztJQUNuQztJQUNBRSxTQUFTO1FBQ0wsSUFBSUosbUZBQXVCQSxDQUFDLHlCQUF5QjtZQUNqRDtRQUNKO1FBQ0EsT0FBTyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0MsTUFBTTtJQUNoQztJQUNBQyxVQUFVO1FBQ04sSUFBSUwsbUZBQXVCQSxDQUFDLDBCQUEwQjtZQUNsRDtRQUNKO1FBQ0EsT0FBTyxJQUFJLENBQUNHLFNBQVMsQ0FBQ0UsT0FBTztJQUNqQztJQUNBQyxZQUFZQyxRQUFRLENBQUM7UUFDakIsSUFBSSxDQUFDSixTQUFTLEdBQUdJO0lBQ3JCO0FBQ0osRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2RyYWZ0LW1vZGUuanM/YWI1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9IGZyb20gXCIuL3N0YXRpYy1nZW5lcmF0aW9uLWJhaWxvdXRcIjtcbmV4cG9ydCBjbGFzcyBEcmFmdE1vZGUge1xuICAgIGdldCBpc0VuYWJsZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wcm92aWRlci5pc0VuYWJsZWQ7XG4gICAgfVxuICAgIGVuYWJsZSgpIHtcbiAgICAgICAgaWYgKHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0KFwiZHJhZnRNb2RlKCkuZW5hYmxlKClcIikpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fcHJvdmlkZXIuZW5hYmxlKCk7XG4gICAgfVxuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uQmFpbG91dChcImRyYWZ0TW9kZSgpLmRpc2FibGUoKVwiKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9wcm92aWRlci5kaXNhYmxlKCk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKHByb3ZpZGVyKXtcbiAgICAgICAgdGhpcy5fcHJvdmlkZXIgPSBwcm92aWRlcjtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRyYWZ0LW1vZGUuanMubWFwIl0sIm5hbWVzIjpbInN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IiwiRHJhZnRNb2RlIiwiaXNFbmFibGVkIiwiX3Byb3ZpZGVyIiwiZW5hYmxlIiwiZGlzYWJsZSIsImNvbnN0cnVjdG9yIiwicHJvdmlkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/draft-mode.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/headers.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/headers.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* binding */ cookies),\n/* harmony export */   draftMode: () => (/* binding */ draftMode),\n/* harmony export */   headers: () => (/* binding */ headers)\n/* harmony export */ });\n/* harmony import */ var _server_web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/web/spec-extension/adapters/request-cookies */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/web/spec-extension/adapters/headers */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _server_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../server/web/spec-extension/cookies */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-async-storage.external */ \"(middleware)/../../node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _action_async_storage_external__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./action-async-storage.external */ \"(middleware)/../../node_modules/next/dist/esm/client/components/action-async-storage.external.js\");\n/* harmony import */ var _static_generation_bailout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./static-generation-bailout */ \"(middleware)/../../node_modules/next/dist/esm/client/components/static-generation-bailout.js\");\n/* harmony import */ var _draft_mode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./draft-mode */ \"(middleware)/../../node_modules/next/dist/esm/client/components/draft-mode.js\");\n\n\n\n\n\n\n\nfunction headers() {\n    if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_5__.staticGenerationBailout)(\"headers\", {\n        link: \"https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\"\n    })) {\n        return _server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(new Headers({}));\n    }\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: headers() expects to have requestAsyncStorage, none available.\");\n    }\n    return requestStore.headers;\n}\nfunction cookies() {\n    if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_5__.staticGenerationBailout)(\"cookies\", {\n        link: \"https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\"\n    })) {\n        return _server_web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookiesAdapter.seal(new _server_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookies(new Headers({})));\n    }\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: cookies() expects to have requestAsyncStorage, none available.\");\n    }\n    const asyncActionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_4__.actionAsyncStorage.getStore();\n    if (asyncActionStore && (asyncActionStore.isAction || asyncActionStore.isAppRoute)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        return requestStore.mutableCookies;\n    }\n    return requestStore.cookies;\n}\nfunction draftMode() {\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: draftMode() expects to have requestAsyncStorage, none available.\");\n    }\n    return new _draft_mode__WEBPACK_IMPORTED_MODULE_6__.DraftMode(requestStore.draftMode);\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFpRztBQUNmO0FBQ1Q7QUFDRjtBQUNGO0FBQ0M7QUFDN0I7QUFDbEMsU0FBU087SUFDWixJQUFJRixtRkFBdUJBLENBQUMsV0FBVztRQUNuQ0csTUFBTTtJQUNWLElBQUk7UUFDQSxPQUFPUCx1RkFBY0EsQ0FBQ1EsSUFBSSxDQUFDLElBQUlDLFFBQVEsQ0FBQztJQUM1QztJQUNBLE1BQU1DLGVBQWVSLGdGQUFtQkEsQ0FBQ1MsUUFBUTtJQUNqRCxJQUFJLENBQUNELGNBQWM7UUFDZixNQUFNLElBQUlFLE1BQU07SUFDcEI7SUFDQSxPQUFPRixhQUFhSixPQUFPO0FBQy9CO0FBQ08sU0FBU087SUFDWixJQUFJVCxtRkFBdUJBLENBQUMsV0FBVztRQUNuQ0csTUFBTTtJQUNWLElBQUk7UUFDQSxPQUFPUixzR0FBcUJBLENBQUNTLElBQUksQ0FBQyxJQUFJUCw4RUFBY0EsQ0FBQyxJQUFJUSxRQUFRLENBQUM7SUFDdEU7SUFDQSxNQUFNQyxlQUFlUixnRkFBbUJBLENBQUNTLFFBQVE7SUFDakQsSUFBSSxDQUFDRCxjQUFjO1FBQ2YsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsTUFBTUUsbUJBQW1CWCw4RUFBa0JBLENBQUNRLFFBQVE7SUFDcEQsSUFBSUcsb0JBQXFCQSxDQUFBQSxpQkFBaUJDLFFBQVEsSUFBSUQsaUJBQWlCRSxVQUFVLEdBQUc7UUFDaEYsMkVBQTJFO1FBQzNFLCtEQUErRDtRQUMvRCxPQUFPTixhQUFhTyxjQUFjO0lBQ3RDO0lBQ0EsT0FBT1AsYUFBYUcsT0FBTztBQUMvQjtBQUNPLFNBQVNLO0lBQ1osTUFBTVIsZUFBZVIsZ0ZBQW1CQSxDQUFDUyxRQUFRO0lBQ2pELElBQUksQ0FBQ0QsY0FBYztRQUNmLE1BQU0sSUFBSUUsTUFBTTtJQUNwQjtJQUNBLE9BQU8sSUFBSVAsa0RBQVNBLENBQUNLLGFBQWFRLFNBQVM7QUFDL0MsRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2hlYWRlcnMuanM/MDYxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXF1ZXN0Q29va2llc0FkYXB0ZXIgfSBmcm9tIFwiLi4vLi4vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZXF1ZXN0LWNvb2tpZXNcIjtcbmltcG9ydCB7IEhlYWRlcnNBZGFwdGVyIH0gZnJvbSBcIi4uLy4uL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvaGVhZGVyc1wiO1xuaW1wb3J0IHsgUmVxdWVzdENvb2tpZXMgfSBmcm9tIFwiLi4vLi4vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzXCI7XG5pbXBvcnQgeyByZXF1ZXN0QXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vcmVxdWVzdC1hc3luYy1zdG9yYWdlLmV4dGVybmFsXCI7XG5pbXBvcnQgeyBhY3Rpb25Bc3luY1N0b3JhZ2UgfSBmcm9tIFwiLi9hY3Rpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbFwiO1xuaW1wb3J0IHsgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSBmcm9tIFwiLi9zdGF0aWMtZ2VuZXJhdGlvbi1iYWlsb3V0XCI7XG5pbXBvcnQgeyBEcmFmdE1vZGUgfSBmcm9tIFwiLi9kcmFmdC1tb2RlXCI7XG5leHBvcnQgZnVuY3Rpb24gaGVhZGVycygpIHtcbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQoXCJoZWFkZXJzXCIsIHtcbiAgICAgICAgbGluazogXCJodHRwczovL25leHRqcy5vcmcvZG9jcy9hcHAvYnVpbGRpbmcteW91ci1hcHBsaWNhdGlvbi9yZW5kZXJpbmcvc3RhdGljLWFuZC1keW5hbWljI2R5bmFtaWMtcmVuZGVyaW5nXCJcbiAgICB9KSkge1xuICAgICAgICByZXR1cm4gSGVhZGVyc0FkYXB0ZXIuc2VhbChuZXcgSGVhZGVycyh7fSkpO1xuICAgIH1cbiAgICBjb25zdCByZXF1ZXN0U3RvcmUgPSByZXF1ZXN0QXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKCFyZXF1ZXN0U3RvcmUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YXJpYW50OiBoZWFkZXJzKCkgZXhwZWN0cyB0byBoYXZlIHJlcXVlc3RBc3luY1N0b3JhZ2UsIG5vbmUgYXZhaWxhYmxlLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcXVlc3RTdG9yZS5oZWFkZXJzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvb2tpZXMoKSB7XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0KFwiY29va2llc1wiLCB7XG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2J1aWxkaW5nLXlvdXItYXBwbGljYXRpb24vcmVuZGVyaW5nL3N0YXRpYy1hbmQtZHluYW1pYyNkeW5hbWljLXJlbmRlcmluZ1wiXG4gICAgfSkpIHtcbiAgICAgICAgcmV0dXJuIFJlcXVlc3RDb29raWVzQWRhcHRlci5zZWFsKG5ldyBSZXF1ZXN0Q29va2llcyhuZXcgSGVhZGVycyh7fSkpKTtcbiAgICB9XG4gICAgY29uc3QgcmVxdWVzdFN0b3JlID0gcmVxdWVzdEFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmICghcmVxdWVzdFN0b3JlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogY29va2llcygpIGV4cGVjdHMgdG8gaGF2ZSByZXF1ZXN0QXN5bmNTdG9yYWdlLCBub25lIGF2YWlsYWJsZS5cIik7XG4gICAgfVxuICAgIGNvbnN0IGFzeW5jQWN0aW9uU3RvcmUgPSBhY3Rpb25Bc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoYXN5bmNBY3Rpb25TdG9yZSAmJiAoYXN5bmNBY3Rpb25TdG9yZS5pc0FjdGlvbiB8fCBhc3luY0FjdGlvblN0b3JlLmlzQXBwUm91dGUpKSB7XG4gICAgICAgIC8vIFdlIGNhbid0IGNvbmRpdGlvbmFsbHkgcmV0dXJuIGRpZmZlcmVudCB0eXBlcyBoZXJlIGJhc2VkIG9uIHRoZSBjb250ZXh0LlxuICAgICAgICAvLyBUbyBhdm9pZCBjb25mdXNpb24sIHdlIGFsd2F5cyByZXR1cm4gdGhlIHJlYWRvbmx5IHR5cGUgaGVyZS5cbiAgICAgICAgcmV0dXJuIHJlcXVlc3RTdG9yZS5tdXRhYmxlQ29va2llcztcbiAgICB9XG4gICAgcmV0dXJuIHJlcXVlc3RTdG9yZS5jb29raWVzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRyYWZ0TW9kZSgpIHtcbiAgICBjb25zdCByZXF1ZXN0U3RvcmUgPSByZXF1ZXN0QXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKCFyZXF1ZXN0U3RvcmUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YXJpYW50OiBkcmFmdE1vZGUoKSBleHBlY3RzIHRvIGhhdmUgcmVxdWVzdEFzeW5jU3RvcmFnZSwgbm9uZSBhdmFpbGFibGUuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IERyYWZ0TW9kZShyZXF1ZXN0U3RvcmUuZHJhZnRNb2RlKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOlsiUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiSGVhZGVyc0FkYXB0ZXIiLCJSZXF1ZXN0Q29va2llcyIsInJlcXVlc3RBc3luY1N0b3JhZ2UiLCJhY3Rpb25Bc3luY1N0b3JhZ2UiLCJzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCIsIkRyYWZ0TW9kZSIsImhlYWRlcnMiLCJsaW5rIiwic2VhbCIsIkhlYWRlcnMiLCJyZXF1ZXN0U3RvcmUiLCJnZXRTdG9yZSIsIkVycm9yIiwiY29va2llcyIsImFzeW5jQWN0aW9uU3RvcmUiLCJpc0FjdGlvbiIsImlzQXBwUm91dGUiLCJtdXRhYmxlQ29va2llcyIsImRyYWZ0TW9kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/headers.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/hooks-server-context.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/hooks-server-context.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DYNAMIC_ERROR_CODE: () => (/* binding */ DYNAMIC_ERROR_CODE),\n/* harmony export */   DynamicServerError: () => (/* binding */ DynamicServerError)\n/* harmony export */ });\nconst DYNAMIC_ERROR_CODE = \"DYNAMIC_SERVER_USAGE\";\nclass DynamicServerError extends Error {\n    constructor(type){\n        super(\"Dynamic server usage: \" + type);\n        this.digest = DYNAMIC_ERROR_CODE;\n    }\n} //# sourceMappingURL=hooks-server-context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2hvb2tzLXNlcnZlci1jb250ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEscUJBQXFCLHVCQUF1QjtBQUNsRCxNQUFNQywyQkFBMkJDO0lBQ3BDQyxZQUFZQyxJQUFJLENBQUM7UUFDYixLQUFLLENBQUMsMkJBQTJCQTtRQUNqQyxJQUFJLENBQUNDLE1BQU0sR0FBR0w7SUFDbEI7QUFDSixFQUVBLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvaG9va3Mtc2VydmVyLWNvbnRleHQuanM/OTg5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgRFlOQU1JQ19FUlJPUl9DT0RFID0gXCJEWU5BTUlDX1NFUlZFUl9VU0FHRVwiO1xuZXhwb3J0IGNsYXNzIER5bmFtaWNTZXJ2ZXJFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlKXtcbiAgICAgICAgc3VwZXIoXCJEeW5hbWljIHNlcnZlciB1c2FnZTogXCIgKyB0eXBlKTtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBEWU5BTUlDX0VSUk9SX0NPREU7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob29rcy1zZXJ2ZXItY29udGV4dC5qcy5tYXAiXSwibmFtZXMiOlsiRFlOQU1JQ19FUlJPUl9DT0RFIiwiRHluYW1pY1NlcnZlckVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsInR5cGUiLCJkaWdlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/hooks-server-context.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/navigation.js":
/*!************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/navigation.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadonlyURLSearchParams: () => (/* binding */ ReadonlyURLSearchParams),\n/* harmony export */   RedirectType: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_6__.RedirectType),\n/* harmony export */   ServerInsertedHTMLContext: () => (/* reexport safe */ _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_5__.ServerInsertedHTMLContext),\n/* harmony export */   notFound: () => (/* reexport safe */ _not_found__WEBPACK_IMPORTED_MODULE_7__.notFound),\n/* harmony export */   permanentRedirect: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_6__.permanentRedirect),\n/* harmony export */   redirect: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_6__.redirect),\n/* harmony export */   useParams: () => (/* binding */ useParams),\n/* harmony export */   usePathname: () => (/* binding */ usePathname),\n/* harmony export */   useRouter: () => (/* binding */ useRouter),\n/* harmony export */   useSearchParams: () => (/* binding */ useSearchParams),\n/* harmony export */   useSelectedLayoutSegment: () => (/* binding */ useSelectedLayoutSegment),\n/* harmony export */   useSelectedLayoutSegments: () => (/* binding */ useSelectedLayoutSegments),\n/* harmony export */   useServerInsertedHTML: () => (/* reexport safe */ _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_5__.useServerInsertedHTML)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/app-router-context.shared-runtime */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\");\n/* harmony import */ var _shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/hooks-client-context.shared-runtime */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\");\n/* harmony import */ var _client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client-hook-in-server-component-error */ \"(middleware)/../../node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js\");\n/* harmony import */ var _router_reducer_reducers_get_segment_value__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./router-reducer/reducers/get-segment-value */ \"(middleware)/../../node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js\");\n/* harmony import */ var _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/server-inserted-html.shared-runtime */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\");\n/* harmony import */ var _redirect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./redirect */ \"(middleware)/../../node_modules/next/dist/esm/client/components/redirect.js\");\n/* harmony import */ var _not_found__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./not-found */ \"(middleware)/../../node_modules/next/dist/esm/client/components/not-found.js\");\n\n\n\n\n\nconst INTERNAL_URLSEARCHPARAMS_INSTANCE = Symbol(\"internal for urlsearchparams readonly\");\nfunction readonlyURLSearchParamsError() {\n    return new Error(\"ReadonlyURLSearchParams cannot be modified\");\n}\nclass ReadonlyURLSearchParams {\n    [Symbol.iterator]() {\n        return this[INTERNAL_URLSEARCHPARAMS_INSTANCE][Symbol.iterator]();\n    }\n    append() {\n        throw readonlyURLSearchParamsError();\n    }\n    delete() {\n        throw readonlyURLSearchParamsError();\n    }\n    set() {\n        throw readonlyURLSearchParamsError();\n    }\n    sort() {\n        throw readonlyURLSearchParamsError();\n    }\n    constructor(urlSearchParams){\n        this[INTERNAL_URLSEARCHPARAMS_INSTANCE] = urlSearchParams;\n        this.entries = urlSearchParams.entries.bind(urlSearchParams);\n        this.forEach = urlSearchParams.forEach.bind(urlSearchParams);\n        this.get = urlSearchParams.get.bind(urlSearchParams);\n        this.getAll = urlSearchParams.getAll.bind(urlSearchParams);\n        this.has = urlSearchParams.has.bind(urlSearchParams);\n        this.keys = urlSearchParams.keys.bind(urlSearchParams);\n        this.values = urlSearchParams.values.bind(urlSearchParams);\n        this.toString = urlSearchParams.toString.bind(urlSearchParams);\n        this.size = urlSearchParams.size;\n    }\n}\n/**\n * Get a read-only URLSearchParams object. For example searchParams.get('foo') would return 'bar' when ?foo=bar\n * Learn more about URLSearchParams here: https://developer.mozilla.org/docs/Web/API/URLSearchParams\n */ function useSearchParams() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useSearchParams\");\n    const searchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.SearchParamsContext);\n    // In the case where this is `null`, the compat types added in\n    // `next-env.d.ts` will add a new overload that changes the return type to\n    // include `null`.\n    const readonlySearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (!searchParams) {\n            // When the router is not ready in pages, we won't have the search params\n            // available.\n            return null;\n        }\n        return new ReadonlyURLSearchParams(searchParams);\n    }, [\n        searchParams\n    ]);\n    if (true) {\n        // AsyncLocalStorage should not be included in the client bundle.\n        const { bailoutToClientRendering } = __webpack_require__(/*! ./bailout-to-client-rendering */ \"(middleware)/../../node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js\");\n        if (bailoutToClientRendering()) {\n            // TODO-APP: handle dynamic = 'force-static' here and on the client\n            return readonlySearchParams;\n        }\n    }\n    return readonlySearchParams;\n}\n/**\n * Get the current pathname. For example usePathname() on /dashboard?foo=bar would return \"/dashboard\"\n */ function usePathname() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"usePathname\");\n    // In the case where this is `null`, the compat types added in `next-env.d.ts`\n    // will add a new overload that changes the return type to include `null`.\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.PathnameContext);\n}\n\n/**\n * Get the router methods. For example router.push('/dashboard')\n */ function useRouter() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useRouter\");\n    const router = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.AppRouterContext);\n    if (router === null) {\n        throw new Error(\"invariant expected app router to be mounted\");\n    }\n    return router;\n}\n// this function performs a depth-first search of the tree to find the selected\n// params\nfunction getSelectedParams(tree, params) {\n    if (params === void 0) params = {};\n    const parallelRoutes = tree[1];\n    for (const parallelRoute of Object.values(parallelRoutes)){\n        const segment = parallelRoute[0];\n        const isDynamicParameter = Array.isArray(segment);\n        const segmentValue = isDynamicParameter ? segment[1] : segment;\n        if (!segmentValue || segmentValue.startsWith(\"__PAGE__\")) continue;\n        // Ensure catchAll and optional catchall are turned into an array\n        const isCatchAll = isDynamicParameter && (segment[2] === \"c\" || segment[2] === \"oc\");\n        if (isCatchAll) {\n            params[segment[0]] = segment[1].split(\"/\");\n        } else if (isDynamicParameter) {\n            params[segment[0]] = segment[1];\n        }\n        params = getSelectedParams(parallelRoute, params);\n    }\n    return params;\n}\n/**\n * Get the current parameters. For example useParams() on /dashboard/[team]\n * where pathname is /dashboard/nextjs would return { team: 'nextjs' }\n */ function useParams() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useParams\");\n    const globalLayoutRouter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.GlobalLayoutRouterContext);\n    const pathParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.PathParamsContext);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        // When it's under app router\n        if (globalLayoutRouter == null ? void 0 : globalLayoutRouter.tree) {\n            return getSelectedParams(globalLayoutRouter.tree);\n        }\n        // When it's under client side pages router\n        return pathParams;\n    }, [\n        globalLayoutRouter == null ? void 0 : globalLayoutRouter.tree,\n        pathParams\n    ]);\n}\n// TODO-APP: handle parallel routes\n/**\n * Get the canonical parameters from the current level to the leaf node.\n */ function getSelectedLayoutSegmentPath(tree, parallelRouteKey, first, segmentPath) {\n    if (first === void 0) first = true;\n    if (segmentPath === void 0) segmentPath = [];\n    let node;\n    if (first) {\n        // Use the provided parallel route key on the first parallel route\n        node = tree[1][parallelRouteKey];\n    } else {\n        // After first parallel route prefer children, if there's no children pick the first parallel route.\n        const parallelRoutes = tree[1];\n        var _parallelRoutes_children;\n        node = (_parallelRoutes_children = parallelRoutes.children) != null ? _parallelRoutes_children : Object.values(parallelRoutes)[0];\n    }\n    if (!node) return segmentPath;\n    const segment = node[0];\n    const segmentValue = (0,_router_reducer_reducers_get_segment_value__WEBPACK_IMPORTED_MODULE_4__.getSegmentValue)(segment);\n    if (!segmentValue || segmentValue.startsWith(\"__PAGE__\")) return segmentPath;\n    segmentPath.push(segmentValue);\n    return getSelectedLayoutSegmentPath(node, parallelRouteKey, false, segmentPath);\n}\n// TODO-APP: Expand description when the docs are written for it.\n/**\n * Get the canonical segment path from the current level to the leaf node.\n */ function useSelectedLayoutSegments(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = \"children\";\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useSelectedLayoutSegments\");\n    const { tree } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.LayoutRouterContext);\n    return getSelectedLayoutSegmentPath(tree, parallelRouteKey);\n}\n// TODO-APP: Expand description when the docs are written for it.\n/**\n * Get the segment below the current level\n */ function useSelectedLayoutSegment(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = \"children\";\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useSelectedLayoutSegment\");\n    const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey);\n    if (selectedLayoutSegments.length === 0) {\n        return null;\n    }\n    return selectedLayoutSegments[0];\n}\n\n //# sourceMappingURL=navigation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/navigation.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/not-found.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/not-found.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNotFoundError: () => (/* binding */ isNotFoundError),\n/* harmony export */   notFound: () => (/* binding */ notFound)\n/* harmony export */ });\nconst NOT_FOUND_ERROR_CODE = \"NEXT_NOT_FOUND\";\n/**\n * When used in a React server component, this will set the status code to 404.\n * When used in a custom app route it will just send a 404 status.\n */ function notFound() {\n    // eslint-disable-next-line no-throw-literal\n    const error = new Error(NOT_FOUND_ERROR_CODE);\n    error.digest = NOT_FOUND_ERROR_CODE;\n    throw error;\n}\n/**\n * Checks an error to determine if it's an error generated by the `notFound()`\n * helper.\n *\n * @param error the error that may reference a not found error\n * @returns true if the error is a not found error\n */ function isNotFoundError(error) {\n    return (error == null ? void 0 : error.digest) === NOT_FOUND_ERROR_CODE;\n} //# sourceMappingURL=not-found.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLHVCQUF1QjtBQUM3Qjs7O0NBR0MsR0FBVSxTQUFTQztJQUNoQiw0Q0FBNEM7SUFDNUMsTUFBTUMsUUFBUSxJQUFJQyxNQUFNSDtJQUN4QkUsTUFBTUUsTUFBTSxHQUFHSjtJQUNmLE1BQU1FO0FBQ1Y7QUFDQTs7Ozs7O0NBTUMsR0FBVSxTQUFTRyxnQkFBZ0JILEtBQUs7SUFDckMsT0FBTyxDQUFDQSxTQUFTLE9BQU8sS0FBSyxJQUFJQSxNQUFNRSxNQUFNLE1BQU1KO0FBQ3ZELEVBRUEscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQuanM/YjBiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBOT1RfRk9VTkRfRVJST1JfQ09ERSA9IFwiTkVYVF9OT1RfRk9VTkRcIjtcbi8qKlxuICogV2hlbiB1c2VkIGluIGEgUmVhY3Qgc2VydmVyIGNvbXBvbmVudCwgdGhpcyB3aWxsIHNldCB0aGUgc3RhdHVzIGNvZGUgdG8gNDA0LlxuICogV2hlbiB1c2VkIGluIGEgY3VzdG9tIGFwcCByb3V0ZSBpdCB3aWxsIGp1c3Qgc2VuZCBhIDQwNCBzdGF0dXMuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIG5vdEZvdW5kKCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10aHJvdy1saXRlcmFsXG4gICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoTk9UX0ZPVU5EX0VSUk9SX0NPREUpO1xuICAgIGVycm9yLmRpZ2VzdCA9IE5PVF9GT1VORF9FUlJPUl9DT0RFO1xuICAgIHRocm93IGVycm9yO1xufVxuLyoqXG4gKiBDaGVja3MgYW4gZXJyb3IgdG8gZGV0ZXJtaW5lIGlmIGl0J3MgYW4gZXJyb3IgZ2VuZXJhdGVkIGJ5IHRoZSBgbm90Rm91bmQoKWBcbiAqIGhlbHBlci5cbiAqXG4gKiBAcGFyYW0gZXJyb3IgdGhlIGVycm9yIHRoYXQgbWF5IHJlZmVyZW5jZSBhIG5vdCBmb3VuZCBlcnJvclxuICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgZXJyb3IgaXMgYSBub3QgZm91bmQgZXJyb3JcbiAqLyBleHBvcnQgZnVuY3Rpb24gaXNOb3RGb3VuZEVycm9yKGVycm9yKSB7XG4gICAgcmV0dXJuIChlcnJvciA9PSBudWxsID8gdm9pZCAwIDogZXJyb3IuZGlnZXN0KSA9PT0gTk9UX0ZPVU5EX0VSUk9SX0NPREU7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vdC1mb3VuZC5qcy5tYXAiXSwibmFtZXMiOlsiTk9UX0ZPVU5EX0VSUk9SX0NPREUiLCJub3RGb3VuZCIsImVycm9yIiwiRXJyb3IiLCJkaWdlc3QiLCJpc05vdEZvdW5kRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/not-found.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/redirect.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/redirect.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectType: () => (/* binding */ RedirectType),\n/* harmony export */   getRedirectError: () => (/* binding */ getRedirectError),\n/* harmony export */   getRedirectTypeFromError: () => (/* binding */ getRedirectTypeFromError),\n/* harmony export */   getURLFromRedirectError: () => (/* binding */ getURLFromRedirectError),\n/* harmony export */   isRedirectError: () => (/* binding */ isRedirectError),\n/* harmony export */   permanentRedirect: () => (/* binding */ permanentRedirect),\n/* harmony export */   redirect: () => (/* binding */ redirect)\n/* harmony export */ });\n/* harmony import */ var _request_async_storage_external__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request-async-storage.external */ \"(middleware)/../../node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n\nconst REDIRECT_ERROR_CODE = \"NEXT_REDIRECT\";\nvar RedirectType;\n(function(RedirectType) {\n    RedirectType[\"push\"] = \"push\";\n    RedirectType[\"replace\"] = \"replace\";\n})(RedirectType || (RedirectType = {}));\nfunction getRedirectError(url, type, permanent) {\n    if (permanent === void 0) permanent = false;\n    const error = new Error(REDIRECT_ERROR_CODE);\n    error.digest = REDIRECT_ERROR_CODE + \";\" + type + \";\" + url + \";\" + permanent;\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage.getStore();\n    if (requestStore) {\n        error.mutableCookies = requestStore.mutableCookies;\n    }\n    return error;\n}\n/**\n * When used in a streaming context, this will insert a meta tag to\n * redirect the user to the target page. When used in a custom app route, it\n * will serve a 307 to the caller.\n *\n * @param url the url to redirect to\n */ function redirect(url, type) {\n    if (type === void 0) type = \"replace\";\n    throw getRedirectError(url, type, false);\n}\n/**\n * When used in a streaming context, this will insert a meta tag to\n * redirect the user to the target page. When used in a custom app route, it\n * will serve a 308 to the caller.\n *\n * @param url the url to redirect to\n */ function permanentRedirect(url, type) {\n    if (type === void 0) type = \"replace\";\n    throw getRedirectError(url, type, true);\n}\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */ function isRedirectError(error) {\n    if (typeof (error == null ? void 0 : error.digest) !== \"string\") return false;\n    const [errorCode, type, destination, permanent] = error.digest.split(\";\", 4);\n    return errorCode === REDIRECT_ERROR_CODE && (type === \"replace\" || type === \"push\") && typeof destination === \"string\" && (permanent === \"true\" || permanent === \"false\");\n}\nfunction getURLFromRedirectError(error) {\n    if (!isRedirectError(error)) return null;\n    // Slices off the beginning of the digest that contains the code and the\n    // separating ';'.\n    return error.digest.split(\";\", 3)[2];\n}\nfunction getRedirectTypeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw new Error(\"Not a redirect error\");\n    }\n    return error.digest.split(\";\", 3)[1];\n} //# sourceMappingURL=redirect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JlZGlyZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXVFO0FBQ3ZFLE1BQU1DLHNCQUFzQjtBQUNyQixJQUFJQyxhQUFhO0FBQ3ZCLFVBQVNBLFlBQVk7SUFDbEJBLFlBQVksQ0FBQyxPQUFPLEdBQUc7SUFDdkJBLFlBQVksQ0FBQyxVQUFVLEdBQUc7QUFDOUIsR0FBR0EsZ0JBQWlCQSxDQUFBQSxlQUFlLENBQUM7QUFDN0IsU0FBU0MsaUJBQWlCQyxHQUFHLEVBQUVDLElBQUksRUFBRUMsU0FBUztJQUNqRCxJQUFJQSxjQUFjLEtBQUssR0FBR0EsWUFBWTtJQUN0QyxNQUFNQyxRQUFRLElBQUlDLE1BQU1QO0lBQ3hCTSxNQUFNRSxNQUFNLEdBQUdSLHNCQUFzQixNQUFNSSxPQUFPLE1BQU1ELE1BQU0sTUFBTUU7SUFDcEUsTUFBTUksZUFBZVYsZ0ZBQW1CQSxDQUFDVyxRQUFRO0lBQ2pELElBQUlELGNBQWM7UUFDZEgsTUFBTUssY0FBYyxHQUFHRixhQUFhRSxjQUFjO0lBQ3REO0lBQ0EsT0FBT0w7QUFDWDtBQUNBOzs7Ozs7Q0FNQyxHQUFVLFNBQVNNLFNBQVNULEdBQUcsRUFBRUMsSUFBSTtJQUNsQyxJQUFJQSxTQUFTLEtBQUssR0FBR0EsT0FBTztJQUM1QixNQUFNRixpQkFBaUJDLEtBQUtDLE1BQU07QUFDdEM7QUFDQTs7Ozs7O0NBTUMsR0FBVSxTQUFTUyxrQkFBa0JWLEdBQUcsRUFBRUMsSUFBSTtJQUMzQyxJQUFJQSxTQUFTLEtBQUssR0FBR0EsT0FBTztJQUM1QixNQUFNRixpQkFBaUJDLEtBQUtDLE1BQU07QUFDdEM7QUFDQTs7Ozs7O0NBTUMsR0FBVSxTQUFTVSxnQkFBZ0JSLEtBQUs7SUFDckMsSUFBSSxPQUFRQSxDQUFBQSxTQUFTLE9BQU8sS0FBSyxJQUFJQSxNQUFNRSxNQUFNLE1BQU0sVUFBVSxPQUFPO0lBQ3hFLE1BQU0sQ0FBQ08sV0FBV1gsTUFBTVksYUFBYVgsVUFBVSxHQUFHQyxNQUFNRSxNQUFNLENBQUNTLEtBQUssQ0FBQyxLQUFLO0lBQzFFLE9BQU9GLGNBQWNmLHVCQUF3QkksQ0FBQUEsU0FBUyxhQUFhQSxTQUFTLE1BQUssS0FBTSxPQUFPWSxnQkFBZ0IsWUFBYVgsQ0FBQUEsY0FBYyxVQUFVQSxjQUFjLE9BQU07QUFDM0s7QUFDTyxTQUFTYSx3QkFBd0JaLEtBQUs7SUFDekMsSUFBSSxDQUFDUSxnQkFBZ0JSLFFBQVEsT0FBTztJQUNwQyx3RUFBd0U7SUFDeEUsa0JBQWtCO0lBQ2xCLE9BQU9BLE1BQU1FLE1BQU0sQ0FBQ1MsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUU7QUFDeEM7QUFDTyxTQUFTRSx5QkFBeUJiLEtBQUs7SUFDMUMsSUFBSSxDQUFDUSxnQkFBZ0JSLFFBQVE7UUFDekIsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsT0FBT0QsTUFBTUUsTUFBTSxDQUFDUyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRTtBQUN4QyxFQUVBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcmVkaXJlY3QuanM/MDdhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXF1ZXN0QXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vcmVxdWVzdC1hc3luYy1zdG9yYWdlLmV4dGVybmFsXCI7XG5jb25zdCBSRURJUkVDVF9FUlJPUl9DT0RFID0gXCJORVhUX1JFRElSRUNUXCI7XG5leHBvcnQgdmFyIFJlZGlyZWN0VHlwZTtcbihmdW5jdGlvbihSZWRpcmVjdFR5cGUpIHtcbiAgICBSZWRpcmVjdFR5cGVbXCJwdXNoXCJdID0gXCJwdXNoXCI7XG4gICAgUmVkaXJlY3RUeXBlW1wicmVwbGFjZVwiXSA9IFwicmVwbGFjZVwiO1xufSkoUmVkaXJlY3RUeXBlIHx8IChSZWRpcmVjdFR5cGUgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJlZGlyZWN0RXJyb3IodXJsLCB0eXBlLCBwZXJtYW5lbnQpIHtcbiAgICBpZiAocGVybWFuZW50ID09PSB2b2lkIDApIHBlcm1hbmVudCA9IGZhbHNlO1xuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFJFRElSRUNUX0VSUk9SX0NPREUpO1xuICAgIGVycm9yLmRpZ2VzdCA9IFJFRElSRUNUX0VSUk9SX0NPREUgKyBcIjtcIiArIHR5cGUgKyBcIjtcIiArIHVybCArIFwiO1wiICsgcGVybWFuZW50O1xuICAgIGNvbnN0IHJlcXVlc3RTdG9yZSA9IHJlcXVlc3RBc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAocmVxdWVzdFN0b3JlKSB7XG4gICAgICAgIGVycm9yLm11dGFibGVDb29raWVzID0gcmVxdWVzdFN0b3JlLm11dGFibGVDb29raWVzO1xuICAgIH1cbiAgICByZXR1cm4gZXJyb3I7XG59XG4vKipcbiAqIFdoZW4gdXNlZCBpbiBhIHN0cmVhbWluZyBjb250ZXh0LCB0aGlzIHdpbGwgaW5zZXJ0IGEgbWV0YSB0YWcgdG9cbiAqIHJlZGlyZWN0IHRoZSB1c2VyIHRvIHRoZSB0YXJnZXQgcGFnZS4gV2hlbiB1c2VkIGluIGEgY3VzdG9tIGFwcCByb3V0ZSwgaXRcbiAqIHdpbGwgc2VydmUgYSAzMDcgdG8gdGhlIGNhbGxlci5cbiAqXG4gKiBAcGFyYW0gdXJsIHRoZSB1cmwgdG8gcmVkaXJlY3QgdG9cbiAqLyBleHBvcnQgZnVuY3Rpb24gcmVkaXJlY3QodXJsLCB0eXBlKSB7XG4gICAgaWYgKHR5cGUgPT09IHZvaWQgMCkgdHlwZSA9IFwicmVwbGFjZVwiO1xuICAgIHRocm93IGdldFJlZGlyZWN0RXJyb3IodXJsLCB0eXBlLCBmYWxzZSk7XG59XG4vKipcbiAqIFdoZW4gdXNlZCBpbiBhIHN0cmVhbWluZyBjb250ZXh0LCB0aGlzIHdpbGwgaW5zZXJ0IGEgbWV0YSB0YWcgdG9cbiAqIHJlZGlyZWN0IHRoZSB1c2VyIHRvIHRoZSB0YXJnZXQgcGFnZS4gV2hlbiB1c2VkIGluIGEgY3VzdG9tIGFwcCByb3V0ZSwgaXRcbiAqIHdpbGwgc2VydmUgYSAzMDggdG8gdGhlIGNhbGxlci5cbiAqXG4gKiBAcGFyYW0gdXJsIHRoZSB1cmwgdG8gcmVkaXJlY3QgdG9cbiAqLyBleHBvcnQgZnVuY3Rpb24gcGVybWFuZW50UmVkaXJlY3QodXJsLCB0eXBlKSB7XG4gICAgaWYgKHR5cGUgPT09IHZvaWQgMCkgdHlwZSA9IFwicmVwbGFjZVwiO1xuICAgIHRocm93IGdldFJlZGlyZWN0RXJyb3IodXJsLCB0eXBlLCB0cnVlKTtcbn1cbi8qKlxuICogQ2hlY2tzIGFuIGVycm9yIHRvIGRldGVybWluZSBpZiBpdCdzIGFuIGVycm9yIGdlbmVyYXRlZCBieSB0aGVcbiAqIGByZWRpcmVjdCh1cmwpYCBoZWxwZXIuXG4gKlxuICogQHBhcmFtIGVycm9yIHRoZSBlcnJvciB0aGF0IG1heSByZWZlcmVuY2UgYSByZWRpcmVjdCBlcnJvclxuICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgZXJyb3IgaXMgYSByZWRpcmVjdCBlcnJvclxuICovIGV4cG9ydCBmdW5jdGlvbiBpc1JlZGlyZWN0RXJyb3IoZXJyb3IpIHtcbiAgICBpZiAodHlwZW9mIChlcnJvciA9PSBudWxsID8gdm9pZCAwIDogZXJyb3IuZGlnZXN0KSAhPT0gXCJzdHJpbmdcIikgcmV0dXJuIGZhbHNlO1xuICAgIGNvbnN0IFtlcnJvckNvZGUsIHR5cGUsIGRlc3RpbmF0aW9uLCBwZXJtYW5lbnRdID0gZXJyb3IuZGlnZXN0LnNwbGl0KFwiO1wiLCA0KTtcbiAgICByZXR1cm4gZXJyb3JDb2RlID09PSBSRURJUkVDVF9FUlJPUl9DT0RFICYmICh0eXBlID09PSBcInJlcGxhY2VcIiB8fCB0eXBlID09PSBcInB1c2hcIikgJiYgdHlwZW9mIGRlc3RpbmF0aW9uID09PSBcInN0cmluZ1wiICYmIChwZXJtYW5lbnQgPT09IFwidHJ1ZVwiIHx8IHBlcm1hbmVudCA9PT0gXCJmYWxzZVwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRVUkxGcm9tUmVkaXJlY3RFcnJvcihlcnJvcikge1xuICAgIGlmICghaXNSZWRpcmVjdEVycm9yKGVycm9yKSkgcmV0dXJuIG51bGw7XG4gICAgLy8gU2xpY2VzIG9mZiB0aGUgYmVnaW5uaW5nIG9mIHRoZSBkaWdlc3QgdGhhdCBjb250YWlucyB0aGUgY29kZSBhbmQgdGhlXG4gICAgLy8gc2VwYXJhdGluZyAnOycuXG4gICAgcmV0dXJuIGVycm9yLmRpZ2VzdC5zcGxpdChcIjtcIiwgMylbMl07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVkaXJlY3RUeXBlRnJvbUVycm9yKGVycm9yKSB7XG4gICAgaWYgKCFpc1JlZGlyZWN0RXJyb3IoZXJyb3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBhIHJlZGlyZWN0IGVycm9yXCIpO1xuICAgIH1cbiAgICByZXR1cm4gZXJyb3IuZGlnZXN0LnNwbGl0KFwiO1wiLCAzKVsxXTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkaXJlY3QuanMubWFwIl0sIm5hbWVzIjpbInJlcXVlc3RBc3luY1N0b3JhZ2UiLCJSRURJUkVDVF9FUlJPUl9DT0RFIiwiUmVkaXJlY3RUeXBlIiwiZ2V0UmVkaXJlY3RFcnJvciIsInVybCIsInR5cGUiLCJwZXJtYW5lbnQiLCJlcnJvciIsIkVycm9yIiwiZGlnZXN0IiwicmVxdWVzdFN0b3JlIiwiZ2V0U3RvcmUiLCJtdXRhYmxlQ29va2llcyIsInJlZGlyZWN0IiwicGVybWFuZW50UmVkaXJlY3QiLCJpc1JlZGlyZWN0RXJyb3IiLCJlcnJvckNvZGUiLCJkZXN0aW5hdGlvbiIsInNwbGl0IiwiZ2V0VVJMRnJvbVJlZGlyZWN0RXJyb3IiLCJnZXRSZWRpcmVjdFR5cGVGcm9tRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/redirect.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/request-async-storage.external.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/request-async-storage.external.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/../../node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst requestAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=request-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUN6RCxNQUFNQyxzQkFBc0JELDZFQUF1QkEsR0FBRyxDQUU3RCwwREFBMEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcz8xOWI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIH0gZnJvbSBcIi4vYXN5bmMtbG9jYWwtc3RvcmFnZVwiO1xuZXhwb3J0IGNvbnN0IHJlcXVlc3RBc3luY1N0b3JhZ2UgPSBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwicmVxdWVzdEFzeW5jU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/request-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js":
/*!*******************************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSegmentValue: () => (/* binding */ getSegmentValue)\n/* harmony export */ });\nfunction getSegmentValue(segment) {\n    return Array.isArray(segment) ? segment[1] : segment;\n} //# sourceMappingURL=get-segment-value.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JvdXRlci1yZWR1Y2VyL3JlZHVjZXJzL2dldC1zZWdtZW50LXZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxnQkFBZ0JDLE9BQU87SUFDbkMsT0FBT0MsTUFBTUMsT0FBTyxDQUFDRixXQUFXQSxPQUFPLENBQUMsRUFBRSxHQUFHQTtBQUNqRCxFQUVBLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcm91dGVyLXJlZHVjZXIvcmVkdWNlcnMvZ2V0LXNlZ21lbnQtdmFsdWUuanM/ODE0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2V0U2VnbWVudFZhbHVlKHNlZ21lbnQpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShzZWdtZW50KSA/IHNlZ21lbnRbMV0gOiBzZWdtZW50O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtc2VnbWVudC12YWx1ZS5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0U2VnbWVudFZhbHVlIiwic2VnbWVudCIsIkFycmF5IiwiaXNBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js":
/*!******************************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(middleware)/../../node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst staticGenerationAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=static-generation-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3N0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDekQsTUFBTUMsK0JBQStCRCw2RUFBdUJBLEdBQUcsQ0FFdEUsb0VBQW9FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzPzljZjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCI7XG5leHBvcnQgY29uc3Qgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSA9IGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwic3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/client/components/static-generation-bailout.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/client/components/static-generation-bailout.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var _hooks_server_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hooks-server-context */ \"(middleware)/../../node_modules/next/dist/esm/client/components/hooks-server-context.js\");\n/* harmony import */ var _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./static-generation-async-storage.external */ \"(middleware)/../../node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\n\nclass StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args);\n        this.code = \"NEXT_STATIC_GEN_BAILOUT\";\n    }\n}\nfunction formatErrorMessage(reason, opts) {\n    const { dynamic, link } = opts || {};\n    const suffix = link ? \" See more info here: \" + link : \"\";\n    return \"Page\" + (dynamic ? ' with `dynamic = \"' + dynamic + '\"`' : \"\") + \" couldn't be rendered statically because it used `\" + reason + \"`.\" + suffix;\n}\nconst staticGenerationBailout = (reason, opts)=>{\n    const staticGenerationStore = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.forceStatic) {\n        return true;\n    }\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.dynamicShouldError) {\n        var _opts_dynamic;\n        throw new StaticGenBailoutError(formatErrorMessage(reason, {\n            ...opts,\n            dynamic: (_opts_dynamic = opts == null ? void 0 : opts.dynamic) != null ? _opts_dynamic : \"error\"\n        }));\n    }\n    if (staticGenerationStore) {\n        staticGenerationStore.revalidate = 0;\n        if (!(opts == null ? void 0 : opts.dynamic)) {\n            // we can statically prefetch pages that opt into dynamic,\n            // but not things like headers/cookies\n            staticGenerationStore.staticPrefetchBailout = true;\n        }\n    }\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.isStaticGeneration) {\n        const err = new _hooks_server_context__WEBPACK_IMPORTED_MODULE_0__.DynamicServerError(formatErrorMessage(reason, {\n            ...opts,\n            // this error should be caught by Next to bail out of static generation\n            // in case it's uncaught, this link provides some additional context as to why\n            link: \"https://nextjs.org/docs/messages/dynamic-server-error\"\n        }));\n        staticGenerationStore.dynamicUsageDescription = reason;\n        staticGenerationStore.dynamicUsageStack = err.stack;\n        throw err;\n    }\n    return false;\n}; //# sourceMappingURL=static-generation-bailout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3N0YXRpYy1nZW5lcmF0aW9uLWJhaWxvdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTREO0FBQzhCO0FBQzFGLE1BQU1FLDhCQUE4QkM7SUFDaENDLFlBQVksR0FBR0MsSUFBSSxDQUFDO1FBQ2hCLEtBQUssSUFBSUE7UUFDVCxJQUFJLENBQUNDLElBQUksR0FBRztJQUNoQjtBQUNKO0FBQ0EsU0FBU0MsbUJBQW1CQyxNQUFNLEVBQUVDLElBQUk7SUFDcEMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLElBQUksRUFBRSxHQUFHRixRQUFRLENBQUM7SUFDbkMsTUFBTUcsU0FBU0QsT0FBTywwQkFBMEJBLE9BQU87SUFDdkQsT0FBTyxTQUFVRCxDQUFBQSxVQUFVLHVCQUF1QkEsVUFBVSxPQUFPLEVBQUMsSUFBSyx1REFBdURGLFNBQVMsT0FBT0k7QUFDcEo7QUFDTyxNQUFNQywwQkFBMEIsQ0FBQ0wsUUFBUUM7SUFDNUMsTUFBTUssd0JBQXdCYixtR0FBNEJBLENBQUNjLFFBQVE7SUFDbkUsSUFBSUQseUJBQXlCLE9BQU8sS0FBSyxJQUFJQSxzQkFBc0JFLFdBQVcsRUFBRTtRQUM1RSxPQUFPO0lBQ1g7SUFDQSxJQUFJRix5QkFBeUIsT0FBTyxLQUFLLElBQUlBLHNCQUFzQkcsa0JBQWtCLEVBQUU7UUFDbkYsSUFBSUM7UUFDSixNQUFNLElBQUloQixzQkFBc0JLLG1CQUFtQkMsUUFBUTtZQUN2RCxHQUFHQyxJQUFJO1lBQ1BDLFNBQVMsQ0FBQ1EsZ0JBQWdCVCxRQUFRLE9BQU8sS0FBSyxJQUFJQSxLQUFLQyxPQUFPLEtBQUssT0FBT1EsZ0JBQWdCO1FBQzlGO0lBQ0o7SUFDQSxJQUFJSix1QkFBdUI7UUFDdkJBLHNCQUFzQkssVUFBVSxHQUFHO1FBQ25DLElBQUksQ0FBRVYsQ0FBQUEsUUFBUSxPQUFPLEtBQUssSUFBSUEsS0FBS0MsT0FBTyxHQUFHO1lBQ3pDLDBEQUEwRDtZQUMxRCxzQ0FBc0M7WUFDdENJLHNCQUFzQk0scUJBQXFCLEdBQUc7UUFDbEQ7SUFDSjtJQUNBLElBQUlOLHlCQUF5QixPQUFPLEtBQUssSUFBSUEsc0JBQXNCTyxrQkFBa0IsRUFBRTtRQUNuRixNQUFNQyxNQUFNLElBQUl0QixxRUFBa0JBLENBQUNPLG1CQUFtQkMsUUFBUTtZQUMxRCxHQUFHQyxJQUFJO1lBQ1AsdUVBQXVFO1lBQ3ZFLDhFQUE4RTtZQUM5RUUsTUFBTTtRQUNWO1FBQ0FHLHNCQUFzQlMsdUJBQXVCLEdBQUdmO1FBQ2hETSxzQkFBc0JVLGlCQUFpQixHQUFHRixJQUFJRyxLQUFLO1FBQ25ELE1BQU1IO0lBQ1Y7SUFDQSxPQUFPO0FBQ1gsRUFBRSxDQUVGLHFEQUFxRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcz9hNDFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtaWNTZXJ2ZXJFcnJvciB9IGZyb20gXCIuL2hvb2tzLXNlcnZlci1jb250ZXh0XCI7XG5pbXBvcnQgeyBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbFwiO1xuY2xhc3MgU3RhdGljR2VuQmFpbG91dEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3Mpe1xuICAgICAgICBzdXBlciguLi5hcmdzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gXCJORVhUX1NUQVRJQ19HRU5fQkFJTE9VVFwiO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGZvcm1hdEVycm9yTWVzc2FnZShyZWFzb24sIG9wdHMpIHtcbiAgICBjb25zdCB7IGR5bmFtaWMsIGxpbmsgfSA9IG9wdHMgfHwge307XG4gICAgY29uc3Qgc3VmZml4ID0gbGluayA/IFwiIFNlZSBtb3JlIGluZm8gaGVyZTogXCIgKyBsaW5rIDogXCJcIjtcbiAgICByZXR1cm4gXCJQYWdlXCIgKyAoZHluYW1pYyA/ICcgd2l0aCBgZHluYW1pYyA9IFwiJyArIGR5bmFtaWMgKyAnXCJgJyA6IFwiXCIpICsgXCIgY291bGRuJ3QgYmUgcmVuZGVyZWQgc3RhdGljYWxseSBiZWNhdXNlIGl0IHVzZWQgYFwiICsgcmVhc29uICsgXCJgLlwiICsgc3VmZml4O1xufVxuZXhwb3J0IGNvbnN0IHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0ID0gKHJlYXNvbiwgb3B0cyk9PntcbiAgICBjb25zdCBzdGF0aWNHZW5lcmF0aW9uU3RvcmUgPSBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9PSBudWxsID8gdm9pZCAwIDogc3RhdGljR2VuZXJhdGlvblN0b3JlLmZvcmNlU3RhdGljKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZHluYW1pY1Nob3VsZEVycm9yKSB7XG4gICAgICAgIHZhciBfb3B0c19keW5hbWljO1xuICAgICAgICB0aHJvdyBuZXcgU3RhdGljR2VuQmFpbG91dEVycm9yKGZvcm1hdEVycm9yTWVzc2FnZShyZWFzb24sIHtcbiAgICAgICAgICAgIC4uLm9wdHMsXG4gICAgICAgICAgICBkeW5hbWljOiAoX29wdHNfZHluYW1pYyA9IG9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdHMuZHluYW1pYykgIT0gbnVsbCA/IF9vcHRzX2R5bmFtaWMgOiBcImVycm9yXCJcbiAgICAgICAgfSkpO1xuICAgIH1cbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlKSB7XG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25TdG9yZS5yZXZhbGlkYXRlID0gMDtcbiAgICAgICAgaWYgKCEob3B0cyA9PSBudWxsID8gdm9pZCAwIDogb3B0cy5keW5hbWljKSkge1xuICAgICAgICAgICAgLy8gd2UgY2FuIHN0YXRpY2FsbHkgcHJlZmV0Y2ggcGFnZXMgdGhhdCBvcHQgaW50byBkeW5hbWljLFxuICAgICAgICAgICAgLy8gYnV0IG5vdCB0aGluZ3MgbGlrZSBoZWFkZXJzL2Nvb2tpZXNcbiAgICAgICAgICAgIHN0YXRpY0dlbmVyYXRpb25TdG9yZS5zdGF0aWNQcmVmZXRjaEJhaWxvdXQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uU3RvcmUgPT0gbnVsbCA/IHZvaWQgMCA6IHN0YXRpY0dlbmVyYXRpb25TdG9yZS5pc1N0YXRpY0dlbmVyYXRpb24pIHtcbiAgICAgICAgY29uc3QgZXJyID0gbmV3IER5bmFtaWNTZXJ2ZXJFcnJvcihmb3JtYXRFcnJvck1lc3NhZ2UocmVhc29uLCB7XG4gICAgICAgICAgICAuLi5vcHRzLFxuICAgICAgICAgICAgLy8gdGhpcyBlcnJvciBzaG91bGQgYmUgY2F1Z2h0IGJ5IE5leHQgdG8gYmFpbCBvdXQgb2Ygc3RhdGljIGdlbmVyYXRpb25cbiAgICAgICAgICAgIC8vIGluIGNhc2UgaXQncyB1bmNhdWdodCwgdGhpcyBsaW5rIHByb3ZpZGVzIHNvbWUgYWRkaXRpb25hbCBjb250ZXh0IGFzIHRvIHdoeVxuICAgICAgICAgICAgbGluazogXCJodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9keW5hbWljLXNlcnZlci1lcnJvclwiXG4gICAgICAgIH0pKTtcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvblN0b3JlLmR5bmFtaWNVc2FnZURlc2NyaXB0aW9uID0gcmVhc29uO1xuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZHluYW1pY1VzYWdlU3RhY2sgPSBlcnIuc3RhY2s7XG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcy5tYXAiXSwibmFtZXMiOlsiRHluYW1pY1NlcnZlckVycm9yIiwic3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSIsIlN0YXRpY0dlbkJhaWxvdXRFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJhcmdzIiwiY29kZSIsImZvcm1hdEVycm9yTWVzc2FnZSIsInJlYXNvbiIsIm9wdHMiLCJkeW5hbWljIiwibGluayIsInN1ZmZpeCIsInN0YXRpY0dlbmVyYXRpb25CYWlsb3V0Iiwic3RhdGljR2VuZXJhdGlvblN0b3JlIiwiZ2V0U3RvcmUiLCJmb3JjZVN0YXRpYyIsImR5bmFtaWNTaG91bGRFcnJvciIsIl9vcHRzX2R5bmFtaWMiLCJyZXZhbGlkYXRlIiwic3RhdGljUHJlZmV0Y2hCYWlsb3V0IiwiaXNTdGF0aWNHZW5lcmF0aW9uIiwiZXJyIiwiZHluYW1pY1VzYWdlRGVzY3JpcHRpb24iLCJkeW5hbWljVXNhZ2VTdGFjayIsInN0YWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/client/components/static-generation-bailout.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/lib/constants.js":
/*!*********************************************************!*\
  !*** ../../node_modules/next/dist/esm/lib/constants.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APP_DIR_ALIAS: () => (/* binding */ APP_DIR_ALIAS),\n/* harmony export */   CACHE_ONE_YEAR: () => (/* binding */ CACHE_ONE_YEAR),\n/* harmony export */   DOT_NEXT_ALIAS: () => (/* binding */ DOT_NEXT_ALIAS),\n/* harmony export */   ESLINT_DEFAULT_DIRS: () => (/* binding */ ESLINT_DEFAULT_DIRS),\n/* harmony export */   ESLINT_PROMPT_VALUES: () => (/* binding */ ESLINT_PROMPT_VALUES),\n/* harmony export */   GSP_NO_RETURNED_VALUE: () => (/* binding */ GSP_NO_RETURNED_VALUE),\n/* harmony export */   GSSP_COMPONENT_MEMBER_ERROR: () => (/* binding */ GSSP_COMPONENT_MEMBER_ERROR),\n/* harmony export */   GSSP_NO_RETURNED_VALUE: () => (/* binding */ GSSP_NO_RETURNED_VALUE),\n/* harmony export */   INSTRUMENTATION_HOOK_FILENAME: () => (/* binding */ INSTRUMENTATION_HOOK_FILENAME),\n/* harmony export */   MIDDLEWARE_FILENAME: () => (/* binding */ MIDDLEWARE_FILENAME),\n/* harmony export */   MIDDLEWARE_LOCATION_REGEXP: () => (/* binding */ MIDDLEWARE_LOCATION_REGEXP),\n/* harmony export */   NEXT_CACHE_IMPLICIT_TAG_ID: () => (/* binding */ NEXT_CACHE_IMPLICIT_TAG_ID),\n/* harmony export */   NEXT_CACHE_REVALIDATED_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATED_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_SOFT_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_SOFT_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_CACHE_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_QUERY_PARAM_PREFIX: () => (/* binding */ NEXT_QUERY_PARAM_PREFIX),\n/* harmony export */   NON_STANDARD_NODE_ENV: () => (/* binding */ NON_STANDARD_NODE_ENV),\n/* harmony export */   PAGES_DIR_ALIAS: () => (/* binding */ PAGES_DIR_ALIAS),\n/* harmony export */   PRERENDER_REVALIDATE_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_HEADER),\n/* harmony export */   PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER),\n/* harmony export */   PUBLIC_DIR_MIDDLEWARE_CONFLICT: () => (/* binding */ PUBLIC_DIR_MIDDLEWARE_CONFLICT),\n/* harmony export */   ROOT_DIR_ALIAS: () => (/* binding */ ROOT_DIR_ALIAS),\n/* harmony export */   RSC_ACTION_CLIENT_WRAPPER_ALIAS: () => (/* binding */ RSC_ACTION_CLIENT_WRAPPER_ALIAS),\n/* harmony export */   RSC_ACTION_PROXY_ALIAS: () => (/* binding */ RSC_ACTION_PROXY_ALIAS),\n/* harmony export */   RSC_ACTION_VALIDATE_ALIAS: () => (/* binding */ RSC_ACTION_VALIDATE_ALIAS),\n/* harmony export */   RSC_MOD_REF_PROXY_ALIAS: () => (/* binding */ RSC_MOD_REF_PROXY_ALIAS),\n/* harmony export */   SERVER_PROPS_EXPORT_ERROR: () => (/* binding */ SERVER_PROPS_EXPORT_ERROR),\n/* harmony export */   SERVER_PROPS_GET_INIT_PROPS_CONFLICT: () => (/* binding */ SERVER_PROPS_GET_INIT_PROPS_CONFLICT),\n/* harmony export */   SERVER_PROPS_SSG_CONFLICT: () => (/* binding */ SERVER_PROPS_SSG_CONFLICT),\n/* harmony export */   SERVER_RUNTIME: () => (/* binding */ SERVER_RUNTIME),\n/* harmony export */   SSG_FALLBACK_EXPORT_ERROR: () => (/* binding */ SSG_FALLBACK_EXPORT_ERROR),\n/* harmony export */   SSG_GET_INITIAL_PROPS_CONFLICT: () => (/* binding */ SSG_GET_INITIAL_PROPS_CONFLICT),\n/* harmony export */   STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: () => (/* binding */ STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR),\n/* harmony export */   UNSTABLE_REVALIDATE_RENAME_ERROR: () => (/* binding */ UNSTABLE_REVALIDATE_RENAME_ERROR),\n/* harmony export */   WEBPACK_LAYERS: () => (/* binding */ WEBPACK_LAYERS),\n/* harmony export */   WEBPACK_RESOURCE_QUERIES: () => (/* binding */ WEBPACK_RESOURCE_QUERIES)\n/* harmony export */ });\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\nconst NEXT_CACHE_TAGS_HEADER = \"x-next-cache-tags\";\nconst NEXT_CACHE_SOFT_TAGS_HEADER = \"x-next-cache-soft-tags\";\nconst NEXT_CACHE_REVALIDATED_TAGS_HEADER = \"x-next-revalidated-tags\";\nconst NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = \"x-next-revalidate-tag-token\";\nconst NEXT_CACHE_TAG_MAX_LENGTH = 256;\nconst NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nconst NEXT_CACHE_IMPLICIT_TAG_ID = \"_N_T_\";\n// in seconds\nconst CACHE_ONE_YEAR = 31536000;\n// Patterns to detect middleware files\nconst MIDDLEWARE_FILENAME = \"middleware\";\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nconst INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nconst PAGES_DIR_ALIAS = \"private-next-pages\";\nconst DOT_NEXT_ALIAS = \"private-dot-next\";\nconst ROOT_DIR_ALIAS = \"private-next-root-dir\";\nconst APP_DIR_ALIAS = \"private-next-app-dir\";\nconst RSC_MOD_REF_PROXY_ALIAS = \"private-next-rsc-mod-ref-proxy\";\nconst RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\nconst RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-action-proxy\";\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nconst GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\nconst GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = \"The `unstable_revalidate` property is available for general use.\\n\" + \"Please use `revalidate` instead.\";\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nconst ESLINT_DEFAULT_DIRS = [\n    \"app\",\n    \"pages\",\n    \"components\",\n    \"lib\",\n    \"src\"\n];\nconst ESLINT_PROMPT_VALUES = [\n    {\n        title: \"Strict\",\n        recommended: true,\n        config: {\n            extends: \"next/core-web-vitals\"\n        }\n    },\n    {\n        title: \"Base\",\n        config: {\n            extends: \"next\"\n        }\n    },\n    {\n        title: \"Cancel\",\n        config: null\n    }\n];\nconst SERVER_RUNTIME = {\n    edge: \"edge\",\n    experimentalEdge: \"experimental-edge\",\n    nodejs: \"nodejs\"\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: \"shared\",\n    /**\n   * React Server Components layer (rsc).\n   */ reactServerComponents: \"rsc\",\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: \"ssr\",\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: \"action-browser\",\n    /**\n   * The layer for the API routes.\n   */ api: \"api\",\n    /**\n   * The layer for the middleware code.\n   */ middleware: \"middleware\",\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: \"edge-asset\",\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: \"app-pages-browser\",\n    /**\n   * The server bundle layer for metadata routes.\n   */ appMetadataRoute: \"app-metadata-route\",\n    /**\n   * The layer for the server bundle for App Route handlers.\n   */ appRouteHandler: \"app-route-handler\"\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        server: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler\n        ],\n        nonClientServerTarget: [\n            // plus middleware and pages api\n            WEBPACK_LAYERS_NAMES.middleware,\n            WEBPACK_LAYERS_NAMES.api\n        ],\n        app: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: \"__next_edge_ssr_entry__\",\n    metadata: \"__next_metadata__\",\n    metadataRoute: \"__next_metadata_route__\",\n    metadataImageMeta: \"__next_metadata_image_meta__\"\n};\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/api-utils/index.js":
/*!******************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/api-utils/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   COOKIE_NAME_PRERENDER_BYPASS: () => (/* binding */ COOKIE_NAME_PRERENDER_BYPASS),\n/* harmony export */   COOKIE_NAME_PRERENDER_DATA: () => (/* binding */ COOKIE_NAME_PRERENDER_DATA),\n/* harmony export */   RESPONSE_LIMIT_DEFAULT: () => (/* binding */ RESPONSE_LIMIT_DEFAULT),\n/* harmony export */   SYMBOL_CLEARED_COOKIES: () => (/* binding */ SYMBOL_CLEARED_COOKIES),\n/* harmony export */   SYMBOL_PREVIEW_DATA: () => (/* binding */ SYMBOL_PREVIEW_DATA),\n/* harmony export */   checkIsOnDemandRevalidate: () => (/* binding */ checkIsOnDemandRevalidate),\n/* harmony export */   clearPreviewData: () => (/* binding */ clearPreviewData),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   sendError: () => (/* binding */ sendError),\n/* harmony export */   sendStatusCode: () => (/* binding */ sendStatusCode),\n/* harmony export */   setLazyProp: () => (/* binding */ setLazyProp)\n/* harmony export */ });\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/../../node_modules/next/dist/esm/lib/constants.js\");\n\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === \"string\") {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== \"number\" || typeof url !== \"string\") {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nfunction checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__.HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nfunction clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = __webpack_require__(/*! next/dist/compiled/cookie */ \"(middleware)/../../node_modules/next/dist/compiled/cookie/index.js\");\n    const previous = res.getHeader(\"Set-Cookie\");\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === \"string\" ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci9hcGktdXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0U7QUFDc0M7QUFDOUc7Ozs7Q0FJQyxHQUFVLFNBQVNHLGVBQWVDLEdBQUcsRUFBRUMsVUFBVTtJQUM5Q0QsSUFBSUMsVUFBVSxHQUFHQTtJQUNqQixPQUFPRDtBQUNYO0FBQ0E7Ozs7O0NBS0MsR0FBVSxTQUFTRSxTQUFTRixHQUFHLEVBQUVHLFdBQVcsRUFBRUMsR0FBRztJQUM5QyxJQUFJLE9BQU9ELGdCQUFnQixVQUFVO1FBQ2pDQyxNQUFNRDtRQUNOQSxjQUFjO0lBQ2xCO0lBQ0EsSUFBSSxPQUFPQSxnQkFBZ0IsWUFBWSxPQUFPQyxRQUFRLFVBQVU7UUFDNUQsTUFBTSxJQUFJQyxNQUFNLENBQUMscUtBQXFLLENBQUM7SUFDM0w7SUFDQUwsSUFBSU0sU0FBUyxDQUFDSCxhQUFhO1FBQ3ZCSSxVQUFVSDtJQUNkO0lBQ0FKLElBQUlRLEtBQUssQ0FBQ0o7SUFDVkosSUFBSVMsR0FBRztJQUNQLE9BQU9UO0FBQ1g7QUFDTyxTQUFTVSwwQkFBMEJDLEdBQUcsRUFBRUMsWUFBWTtJQUN2RCxNQUFNQyxVQUFVakIsZ0ZBQWNBLENBQUNrQixJQUFJLENBQUNILElBQUlFLE9BQU87SUFDL0MsTUFBTUUsZ0JBQWdCRixRQUFRRyxHQUFHLENBQUNuQix1RUFBMkJBO0lBQzdELE1BQU1vQix1QkFBdUJGLGtCQUFrQkgsYUFBYUcsYUFBYTtJQUN6RSxNQUFNRywwQkFBMEJMLFFBQVFNLEdBQUcsQ0FBQ3JCLHNGQUEwQ0E7SUFDdEYsT0FBTztRQUNIbUI7UUFDQUM7SUFDSjtBQUNKO0FBQ08sTUFBTUUsK0JBQStCLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUMxRCxNQUFNQyw2QkFBNkIsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ3pELE1BQU1DLHlCQUF5QixJQUFJLE9BQU8sS0FBSztBQUMvQyxNQUFNQyxzQkFBc0JDLE9BQU9ILDRCQUE0QjtBQUMvRCxNQUFNSSx5QkFBeUJELE9BQU9KLDhCQUE4QjtBQUNwRSxTQUFTTSxpQkFBaUIxQixHQUFHLEVBQUUyQixVQUFVLENBQUMsQ0FBQztJQUM5QyxJQUFJRiwwQkFBMEJ6QixLQUFLO1FBQy9CLE9BQU9BO0lBQ1g7SUFDQSxNQUFNLEVBQUU0QixTQUFTLEVBQUUsR0FBR0MsbUJBQU9BLENBQUMscUdBQTJCO0lBQ3pELE1BQU1DLFdBQVc5QixJQUFJK0IsU0FBUyxDQUFDO0lBQy9CL0IsSUFBSWdDLFNBQVMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1dBQ3JCLE9BQU9GLGFBQWEsV0FBVztZQUM5QkE7U0FDSCxHQUFHRyxNQUFNQyxPQUFPLENBQUNKLFlBQVlBLFdBQVcsRUFBRTtRQUMzQ0YsVUFBVVIsOEJBQThCLElBQUk7WUFDeEMsMkRBQTJEO1lBQzNELG9EQUFvRDtZQUNwRCx3RUFBd0U7WUFDeEVlLFNBQVMsSUFBSUMsS0FBSztZQUNsQkMsVUFBVTtZQUNWQyxVQUFVQyxNQUFzQyxHQUFHLENBQU0sR0FBRztZQUM1REMsUUFBUUQsa0JBQXlCO1lBQ2pDRSxNQUFNO1lBQ04sR0FBR2QsUUFBUWMsSUFBSSxLQUFLQyxZQUFZO2dCQUM1QkQsTUFBTWQsUUFBUWMsSUFBSTtZQUN0QixJQUFJQyxTQUFTO1FBQ2pCO1FBQ0FkLFVBQVVQLDRCQUE0QixJQUFJO1lBQ3RDLDJEQUEyRDtZQUMzRCxvREFBb0Q7WUFDcEQsd0VBQXdFO1lBQ3hFYyxTQUFTLElBQUlDLEtBQUs7WUFDbEJDLFVBQVU7WUFDVkMsVUFBVUMsTUFBc0MsR0FBRyxDQUFNLEdBQUc7WUFDNURDLFFBQVFELGtCQUF5QjtZQUNqQ0UsTUFBTTtZQUNOLEdBQUdkLFFBQVFjLElBQUksS0FBS0MsWUFBWTtnQkFDNUJELE1BQU1kLFFBQVFjLElBQUk7WUFDdEIsSUFBSUMsU0FBUztRQUNqQjtLQUNIO0lBQ0RDLE9BQU9DLGNBQWMsQ0FBQzVDLEtBQUt5Qix3QkFBd0I7UUFDL0NvQixPQUFPO1FBQ1BDLFlBQVk7SUFDaEI7SUFDQSxPQUFPOUM7QUFDWDtBQUNBOztDQUVDLEdBQVUsTUFBTStDLGlCQUFpQjFDO0lBQzlCMkMsWUFBWS9DLFVBQVUsRUFBRWdELE9BQU8sQ0FBQztRQUM1QixLQUFLLENBQUNBO1FBQ04sSUFBSSxDQUFDaEQsVUFBVSxHQUFHQTtJQUN0QjtBQUNKO0FBQ0E7Ozs7O0NBS0MsR0FBVSxTQUFTaUQsVUFBVWxELEdBQUcsRUFBRUMsVUFBVSxFQUFFZ0QsT0FBTztJQUNsRGpELElBQUlDLFVBQVUsR0FBR0E7SUFDakJELElBQUltRCxhQUFhLEdBQUdGO0lBQ3BCakQsSUFBSVMsR0FBRyxDQUFDd0M7QUFDWjtBQUNBOzs7OztDQUtDLEdBQVUsU0FBU0csWUFBWSxFQUFFekMsR0FBRyxFQUFFLEVBQUUwQyxJQUFJLEVBQUVDLE1BQU07SUFDakQsTUFBTUMsT0FBTztRQUNUQyxjQUFjO1FBQ2RWLFlBQVk7SUFDaEI7SUFDQSxNQUFNVyxZQUFZO1FBQ2QsR0FBR0YsSUFBSTtRQUNQRyxVQUFVO0lBQ2Q7SUFDQWYsT0FBT0MsY0FBYyxDQUFDakMsS0FBSzBDLE1BQU07UUFDN0IsR0FBR0UsSUFBSTtRQUNQdkMsS0FBSztZQUNELE1BQU02QixRQUFRUztZQUNkLDhEQUE4RDtZQUM5RFgsT0FBT0MsY0FBYyxDQUFDakMsS0FBSzBDLE1BQU07Z0JBQzdCLEdBQUdJLFNBQVM7Z0JBQ1paO1lBQ0o7WUFDQSxPQUFPQTtRQUNYO1FBQ0FjLEtBQUssQ0FBQ2Q7WUFDRkYsT0FBT0MsY0FBYyxDQUFDakMsS0FBSzBDLE1BQU07Z0JBQzdCLEdBQUdJLFNBQVM7Z0JBQ1paO1lBQ0o7UUFDSjtJQUNKO0FBQ0osRUFFQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci9hcGktdXRpbHMvaW5kZXguanM/MTY3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkZXJzQWRhcHRlciB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvaGVhZGVyc1wiO1xuaW1wb3J0IHsgUFJFUkVOREVSX1JFVkFMSURBVEVfSEVBREVSLCBQUkVSRU5ERVJfUkVWQUxJREFURV9PTkxZX0dFTkVSQVRFRF9IRUFERVIgfSBmcm9tIFwiLi4vLi4vbGliL2NvbnN0YW50c1wiO1xuLyoqXG4gKlxuICogQHBhcmFtIHJlcyByZXNwb25zZSBvYmplY3RcbiAqIEBwYXJhbSBzdGF0dXNDb2RlIGBIVFRQYCBzdGF0dXMgY29kZSBvZiByZXNwb25zZVxuICovIGV4cG9ydCBmdW5jdGlvbiBzZW5kU3RhdHVzQ29kZShyZXMsIHN0YXR1c0NvZGUpIHtcbiAgICByZXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgcmV0dXJuIHJlcztcbn1cbi8qKlxuICpcbiAqIEBwYXJhbSByZXMgcmVzcG9uc2Ugb2JqZWN0XG4gKiBAcGFyYW0gW3N0YXR1c09yVXJsXSBgSFRUUGAgc3RhdHVzIGNvZGUgb2YgcmVkaXJlY3RcbiAqIEBwYXJhbSB1cmwgVVJMIG9mIHJlZGlyZWN0XG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHJlZGlyZWN0KHJlcywgc3RhdHVzT3JVcmwsIHVybCkge1xuICAgIGlmICh0eXBlb2Ygc3RhdHVzT3JVcmwgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdXJsID0gc3RhdHVzT3JVcmw7XG4gICAgICAgIHN0YXR1c09yVXJsID0gMzA3O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHN0YXR1c09yVXJsICE9PSBcIm51bWJlclwiIHx8IHR5cGVvZiB1cmwgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHJlZGlyZWN0IGFyZ3VtZW50cy4gUGxlYXNlIHVzZSBhIHNpbmdsZSBhcmd1bWVudCBVUkwsIGUuZy4gcmVzLnJlZGlyZWN0KCcvZGVzdGluYXRpb24nKSBvciB1c2UgYSBzdGF0dXMgY29kZSBhbmQgVVJMLCBlLmcuIHJlcy5yZWRpcmVjdCgzMDcsICcvZGVzdGluYXRpb24nKS5gKTtcbiAgICB9XG4gICAgcmVzLndyaXRlSGVhZChzdGF0dXNPclVybCwge1xuICAgICAgICBMb2NhdGlvbjogdXJsXG4gICAgfSk7XG4gICAgcmVzLndyaXRlKHVybCk7XG4gICAgcmVzLmVuZCgpO1xuICAgIHJldHVybiByZXM7XG59XG5leHBvcnQgZnVuY3Rpb24gY2hlY2tJc09uRGVtYW5kUmV2YWxpZGF0ZShyZXEsIHByZXZpZXdQcm9wcykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBIZWFkZXJzQWRhcHRlci5mcm9tKHJlcS5oZWFkZXJzKTtcbiAgICBjb25zdCBwcmV2aWV3TW9kZUlkID0gaGVhZGVycy5nZXQoUFJFUkVOREVSX1JFVkFMSURBVEVfSEVBREVSKTtcbiAgICBjb25zdCBpc09uRGVtYW5kUmV2YWxpZGF0ZSA9IHByZXZpZXdNb2RlSWQgPT09IHByZXZpZXdQcm9wcy5wcmV2aWV3TW9kZUlkO1xuICAgIGNvbnN0IHJldmFsaWRhdGVPbmx5R2VuZXJhdGVkID0gaGVhZGVycy5oYXMoUFJFUkVOREVSX1JFVkFMSURBVEVfT05MWV9HRU5FUkFURURfSEVBREVSKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBpc09uRGVtYW5kUmV2YWxpZGF0ZSxcbiAgICAgICAgcmV2YWxpZGF0ZU9ubHlHZW5lcmF0ZWRcbiAgICB9O1xufVxuZXhwb3J0IGNvbnN0IENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MgPSBgX19wcmVyZW5kZXJfYnlwYXNzYDtcbmV4cG9ydCBjb25zdCBDT09LSUVfTkFNRV9QUkVSRU5ERVJfREFUQSA9IGBfX25leHRfcHJldmlld19kYXRhYDtcbmV4cG9ydCBjb25zdCBSRVNQT05TRV9MSU1JVF9ERUZBVUxUID0gNCAqIDEwMjQgKiAxMDI0O1xuZXhwb3J0IGNvbnN0IFNZTUJPTF9QUkVWSUVXX0RBVEEgPSBTeW1ib2woQ09PS0lFX05BTUVfUFJFUkVOREVSX0RBVEEpO1xuZXhwb3J0IGNvbnN0IFNZTUJPTF9DTEVBUkVEX0NPT0tJRVMgPSBTeW1ib2woQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUyk7XG5leHBvcnQgZnVuY3Rpb24gY2xlYXJQcmV2aWV3RGF0YShyZXMsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChTWU1CT0xfQ0xFQVJFRF9DT09LSUVTIGluIHJlcykge1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBjb25zdCB7IHNlcmlhbGl6ZSB9ID0gcmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9jb29raWVcIik7XG4gICAgY29uc3QgcHJldmlvdXMgPSByZXMuZ2V0SGVhZGVyKFwiU2V0LUNvb2tpZVwiKTtcbiAgICByZXMuc2V0SGVhZGVyKGBTZXQtQ29va2llYCwgW1xuICAgICAgICAuLi50eXBlb2YgcHJldmlvdXMgPT09IFwic3RyaW5nXCIgPyBbXG4gICAgICAgICAgICBwcmV2aW91c1xuICAgICAgICBdIDogQXJyYXkuaXNBcnJheShwcmV2aW91cykgPyBwcmV2aW91cyA6IFtdLFxuICAgICAgICBzZXJpYWxpemUoQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUywgXCJcIiwge1xuICAgICAgICAgICAgLy8gVG8gZGVsZXRlIGEgY29va2llLCBzZXQgYGV4cGlyZXNgIHRvIGEgZGF0ZSBpbiB0aGUgcGFzdDpcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2MjY1I3NlY3Rpb24tNC4xLjFcbiAgICAgICAgICAgIC8vIGBNYXgtQWdlOiAwYCBpcyBub3QgdmFsaWQsIHRodXMgaWdub3JlZCwgYW5kIHRoZSBjb29raWUgaXMgcGVyc2lzdGVkLlxuICAgICAgICAgICAgZXhwaXJlczogbmV3IERhdGUoMCksXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxuICAgICAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcGF0aDogXCIvXCIsXG4gICAgICAgICAgICAuLi5vcHRpb25zLnBhdGggIT09IHVuZGVmaW5lZCA/IHtcbiAgICAgICAgICAgICAgICBwYXRoOiBvcHRpb25zLnBhdGhcbiAgICAgICAgICAgIH0gOiB1bmRlZmluZWRcbiAgICAgICAgfSksXG4gICAgICAgIHNlcmlhbGl6ZShDT09LSUVfTkFNRV9QUkVSRU5ERVJfREFUQSwgXCJcIiwge1xuICAgICAgICAgICAgLy8gVG8gZGVsZXRlIGEgY29va2llLCBzZXQgYGV4cGlyZXNgIHRvIGEgZGF0ZSBpbiB0aGUgcGFzdDpcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2MjY1I3NlY3Rpb24tNC4xLjFcbiAgICAgICAgICAgIC8vIGBNYXgtQWdlOiAwYCBpcyBub3QgdmFsaWQsIHRodXMgaWdub3JlZCwgYW5kIHRoZSBjb29raWUgaXMgcGVyc2lzdGVkLlxuICAgICAgICAgICAgZXhwaXJlczogbmV3IERhdGUoMCksXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxuICAgICAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcGF0aDogXCIvXCIsXG4gICAgICAgICAgICAuLi5vcHRpb25zLnBhdGggIT09IHVuZGVmaW5lZCA/IHtcbiAgICAgICAgICAgICAgICBwYXRoOiBvcHRpb25zLnBhdGhcbiAgICAgICAgICAgIH0gOiB1bmRlZmluZWRcbiAgICAgICAgfSlcbiAgICBdKTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVzLCBTWU1CT0xfQ0xFQVJFRF9DT09LSUVTLCB7XG4gICAgICAgIHZhbHVlOiB0cnVlLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZVxuICAgIH0pO1xuICAgIHJldHVybiByZXM7XG59XG4vKipcbiAqIEN1c3RvbSBlcnJvciBjbGFzc1xuICovIGV4cG9ydCBjbGFzcyBBcGlFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzdGF0dXNDb2RlLCBtZXNzYWdlKXtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgfVxufVxuLyoqXG4gKiBTZW5kcyBlcnJvciBpbiBgcmVzcG9uc2VgXG4gKiBAcGFyYW0gcmVzIHJlc3BvbnNlIG9iamVjdFxuICogQHBhcmFtIHN0YXR1c0NvZGUgb2YgcmVzcG9uc2VcbiAqIEBwYXJhbSBtZXNzYWdlIG9mIHJlc3BvbnNlXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHNlbmRFcnJvcihyZXMsIHN0YXR1c0NvZGUsIG1lc3NhZ2UpIHtcbiAgICByZXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgcmVzLnN0YXR1c01lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIHJlcy5lbmQobWVzc2FnZSk7XG59XG4vKipcbiAqIEV4ZWN1dGUgZ2V0dGVyIGZ1bmN0aW9uIG9ubHkgaWYgaXRzIG5lZWRlZFxuICogQHBhcmFtIExhenlQcm9wcyBgcmVxYCBhbmQgYHBhcmFtc2AgZm9yIGxhenlQcm9wXG4gKiBAcGFyYW0gcHJvcCBuYW1lIG9mIHByb3BlcnR5XG4gKiBAcGFyYW0gZ2V0dGVyIGZ1bmN0aW9uIHRvIGdldCBkYXRhXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHNldExhenlQcm9wKHsgcmVxIH0sIHByb3AsIGdldHRlcikge1xuICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgIH07XG4gICAgY29uc3Qgb3B0c1Jlc2V0ID0ge1xuICAgICAgICAuLi5vcHRzLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcSwgcHJvcCwge1xuICAgICAgICAuLi5vcHRzLFxuICAgICAgICBnZXQ6ICgpPT57XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGdldHRlcigpO1xuICAgICAgICAgICAgLy8gd2Ugc2V0IHRoZSBwcm9wZXJ0eSBvbiB0aGUgb2JqZWN0IHRvIGF2b2lkIHJlY2FsY3VsYXRpbmcgaXRcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXEsIHByb3AsIHtcbiAgICAgICAgICAgICAgICAuLi5vcHRzUmVzZXQsXG4gICAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6ICh2YWx1ZSk9PntcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXEsIHByb3AsIHtcbiAgICAgICAgICAgICAgICAuLi5vcHRzUmVzZXQsXG4gICAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJIZWFkZXJzQWRhcHRlciIsIlBSRVJFTkRFUl9SRVZBTElEQVRFX0hFQURFUiIsIlBSRVJFTkRFUl9SRVZBTElEQVRFX09OTFlfR0VORVJBVEVEX0hFQURFUiIsInNlbmRTdGF0dXNDb2RlIiwicmVzIiwic3RhdHVzQ29kZSIsInJlZGlyZWN0Iiwic3RhdHVzT3JVcmwiLCJ1cmwiLCJFcnJvciIsIndyaXRlSGVhZCIsIkxvY2F0aW9uIiwid3JpdGUiLCJlbmQiLCJjaGVja0lzT25EZW1hbmRSZXZhbGlkYXRlIiwicmVxIiwicHJldmlld1Byb3BzIiwiaGVhZGVycyIsImZyb20iLCJwcmV2aWV3TW9kZUlkIiwiZ2V0IiwiaXNPbkRlbWFuZFJldmFsaWRhdGUiLCJyZXZhbGlkYXRlT25seUdlbmVyYXRlZCIsImhhcyIsIkNPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MiLCJDT09LSUVfTkFNRV9QUkVSRU5ERVJfREFUQSIsIlJFU1BPTlNFX0xJTUlUX0RFRkFVTFQiLCJTWU1CT0xfUFJFVklFV19EQVRBIiwiU3ltYm9sIiwiU1lNQk9MX0NMRUFSRURfQ09PS0lFUyIsImNsZWFyUHJldmlld0RhdGEiLCJvcHRpb25zIiwic2VyaWFsaXplIiwicmVxdWlyZSIsInByZXZpb3VzIiwiZ2V0SGVhZGVyIiwic2V0SGVhZGVyIiwiQXJyYXkiLCJpc0FycmF5IiwiZXhwaXJlcyIsIkRhdGUiLCJodHRwT25seSIsInNhbWVTaXRlIiwicHJvY2VzcyIsInNlY3VyZSIsInBhdGgiLCJ1bmRlZmluZWQiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZW51bWVyYWJsZSIsIkFwaUVycm9yIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwic2VuZEVycm9yIiwic3RhdHVzTWVzc2FnZSIsInNldExhenlQcm9wIiwicHJvcCIsImdldHRlciIsIm9wdHMiLCJjb25maWd1cmFibGUiLCJvcHRzUmVzZXQiLCJ3cml0YWJsZSIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/api-utils/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftModeProvider: () => (/* binding */ DraftModeProvider)\n/* harmony export */ });\n/* harmony import */ var _api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api-utils */ \"(middleware)/../../node_modules/next/dist/esm/server/api-utils/index.js\");\n\nclass DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && (0,_api_utils__WEBPACK_IMPORTED_MODULE_0__.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(_api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && cookieValue === previewProps.previewModeId);\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\n        }\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\"\n        });\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: \"\",\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            expires: new Date(0)\n        });\n    }\n} //# sourceMappingURL=draft-mode-provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci9hc3luYy1zdG9yYWdlL2RyYWZ0LW1vZGUtcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUY7QUFDaEYsTUFBTUU7SUFDVEMsWUFBWUMsWUFBWSxFQUFFQyxHQUFHLEVBQUVDLE9BQU8sRUFBRUMsY0FBYyxDQUFDO1FBQ25ELElBQUlDO1FBQ0osbUVBQW1FO1FBQ25FLDREQUE0RDtRQUM1RCxNQUFNQyx1QkFBdUJMLGdCQUFnQkgscUVBQXlCQSxDQUFDSSxLQUFLRCxjQUFjSyxvQkFBb0I7UUFDOUcsTUFBTUMsY0FBYyxDQUFDRixlQUFlRixRQUFRSyxHQUFHLENBQUNYLG9FQUE0QkEsQ0FBQSxLQUFNLE9BQU8sS0FBSyxJQUFJUSxhQUFhSSxLQUFLO1FBQ3BILElBQUksQ0FBQ0MsU0FBUyxHQUFHQyxRQUFRLENBQUNMLHdCQUF3QkMsZUFBZU4sZ0JBQWdCTSxnQkFBZ0JOLGFBQWFXLGFBQWE7UUFDM0gsSUFBSSxDQUFDQyxjQUFjLEdBQUdaLGdCQUFnQixPQUFPLEtBQUssSUFBSUEsYUFBYVcsYUFBYTtRQUNoRixJQUFJLENBQUNFLGVBQWUsR0FBR1Y7SUFDM0I7SUFDQVcsU0FBUztRQUNMLElBQUksQ0FBQyxJQUFJLENBQUNGLGNBQWMsRUFBRTtZQUN0QixNQUFNLElBQUlHLE1BQU07UUFDcEI7UUFDQSxJQUFJLENBQUNGLGVBQWUsQ0FBQ0csR0FBRyxDQUFDO1lBQ3JCQyxNQUFNckIsb0VBQTRCQTtZQUNsQ1ksT0FBTyxJQUFJLENBQUNJLGNBQWM7WUFDMUJNLFVBQVU7WUFDVkMsVUFBVUMsTUFBc0MsR0FBRyxDQUFNLEdBQUc7WUFDNURDLFFBQVFELGtCQUF5QjtZQUNqQ0UsTUFBTTtRQUNWO0lBQ0o7SUFDQUMsVUFBVTtRQUNOLDJEQUEyRDtRQUMzRCxvREFBb0Q7UUFDcEQsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQ1YsZUFBZSxDQUFDRyxHQUFHLENBQUM7WUFDckJDLE1BQU1yQixvRUFBNEJBO1lBQ2xDWSxPQUFPO1lBQ1BVLFVBQVU7WUFDVkMsVUFBVUMsTUFBc0MsR0FBRyxDQUFNLEdBQUc7WUFDNURDLFFBQVFELGtCQUF5QjtZQUNqQ0UsTUFBTTtZQUNORSxTQUFTLElBQUlDLEtBQUs7UUFDdEI7SUFDSjtBQUNKLEVBRUEsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvYXN5bmMtc3RvcmFnZS9kcmFmdC1tb2RlLXByb3ZpZGVyLmpzPzRhMjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUywgY2hlY2tJc09uRGVtYW5kUmV2YWxpZGF0ZSB9IGZyb20gXCIuLi9hcGktdXRpbHNcIjtcbmV4cG9ydCBjbGFzcyBEcmFmdE1vZGVQcm92aWRlciB7XG4gICAgY29uc3RydWN0b3IocHJldmlld1Byb3BzLCByZXEsIGNvb2tpZXMsIG11dGFibGVDb29raWVzKXtcbiAgICAgICAgdmFyIF9jb29raWVzX2dldDtcbiAgICAgICAgLy8gVGhlIGxvZ2ljIGZvciBkcmFmdE1vZGUoKSBpcyB2ZXJ5IHNpbWlsYXIgdG8gdHJ5R2V0UHJldmlld0RhdGEoKVxuICAgICAgICAvLyBidXQgRHJhZnQgTW9kZSBkb2VzIG5vdCBoYXZlIGFueSBkYXRhIGFzc29jaWF0ZWQgd2l0aCBpdC5cbiAgICAgICAgY29uc3QgaXNPbkRlbWFuZFJldmFsaWRhdGUgPSBwcmV2aWV3UHJvcHMgJiYgY2hlY2tJc09uRGVtYW5kUmV2YWxpZGF0ZShyZXEsIHByZXZpZXdQcm9wcykuaXNPbkRlbWFuZFJldmFsaWRhdGU7XG4gICAgICAgIGNvbnN0IGNvb2tpZVZhbHVlID0gKF9jb29raWVzX2dldCA9IGNvb2tpZXMuZ2V0KENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MpKSA9PSBudWxsID8gdm9pZCAwIDogX2Nvb2tpZXNfZ2V0LnZhbHVlO1xuICAgICAgICB0aGlzLmlzRW5hYmxlZCA9IEJvb2xlYW4oIWlzT25EZW1hbmRSZXZhbGlkYXRlICYmIGNvb2tpZVZhbHVlICYmIHByZXZpZXdQcm9wcyAmJiBjb29raWVWYWx1ZSA9PT0gcHJldmlld1Byb3BzLnByZXZpZXdNb2RlSWQpO1xuICAgICAgICB0aGlzLl9wcmV2aWV3TW9kZUlkID0gcHJldmlld1Byb3BzID09IG51bGwgPyB2b2lkIDAgOiBwcmV2aWV3UHJvcHMucHJldmlld01vZGVJZDtcbiAgICAgICAgdGhpcy5fbXV0YWJsZUNvb2tpZXMgPSBtdXRhYmxlQ29va2llcztcbiAgICB9XG4gICAgZW5hYmxlKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3ByZXZpZXdNb2RlSWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogcHJldmlld1Byb3BzIG1pc3NpbmcgcHJldmlld01vZGVJZCB0aGlzIHNob3VsZCBuZXZlciBoYXBwZW5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbXV0YWJsZUNvb2tpZXMuc2V0KHtcbiAgICAgICAgICAgIG5hbWU6IENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MsXG4gICAgICAgICAgICB2YWx1ZTogdGhpcy5fcHJldmlld01vZGVJZCxcbiAgICAgICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICAgICAgc2FtZVNpdGU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIgPyBcIm5vbmVcIiA6IFwibGF4XCIsXG4gICAgICAgICAgICBzZWN1cmU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIsXG4gICAgICAgICAgICBwYXRoOiBcIi9cIlxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgLy8gVG8gZGVsZXRlIGEgY29va2llLCBzZXQgYGV4cGlyZXNgIHRvIGEgZGF0ZSBpbiB0aGUgcGFzdDpcbiAgICAgICAgLy8gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzYyNjUjc2VjdGlvbi00LjEuMVxuICAgICAgICAvLyBgTWF4LUFnZTogMGAgaXMgbm90IHZhbGlkLCB0aHVzIGlnbm9yZWQsIGFuZCB0aGUgY29va2llIGlzIHBlcnNpc3RlZC5cbiAgICAgICAgdGhpcy5fbXV0YWJsZUNvb2tpZXMuc2V0KHtcbiAgICAgICAgICAgIG5hbWU6IENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIixcbiAgICAgICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICAgICAgc2FtZVNpdGU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIgPyBcIm5vbmVcIiA6IFwibGF4XCIsXG4gICAgICAgICAgICBzZWN1cmU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIsXG4gICAgICAgICAgICBwYXRoOiBcIi9cIixcbiAgICAgICAgICAgIGV4cGlyZXM6IG5ldyBEYXRlKDApXG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHJhZnQtbW9kZS1wcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOlsiQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUyIsImNoZWNrSXNPbkRlbWFuZFJldmFsaWRhdGUiLCJEcmFmdE1vZGVQcm92aWRlciIsImNvbnN0cnVjdG9yIiwicHJldmlld1Byb3BzIiwicmVxIiwiY29va2llcyIsIm11dGFibGVDb29raWVzIiwiX2Nvb2tpZXNfZ2V0IiwiaXNPbkRlbWFuZFJldmFsaWRhdGUiLCJjb29raWVWYWx1ZSIsImdldCIsInZhbHVlIiwiaXNFbmFibGVkIiwiQm9vbGVhbiIsInByZXZpZXdNb2RlSWQiLCJfcHJldmlld01vZGVJZCIsIl9tdXRhYmxlQ29va2llcyIsImVuYWJsZSIsIkVycm9yIiwic2V0IiwibmFtZSIsImh0dHBPbmx5Iiwic2FtZVNpdGUiLCJwcm9jZXNzIiwic2VjdXJlIiwicGF0aCIsImRpc2FibGUiLCJleHBpcmVzIiwiRGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestAsyncStorageWrapper: () => (/* binding */ RequestAsyncStorageWrapper)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/../../node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./draft-mode-provider */ \"(middleware)/../../node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\");\n\n\n\n\n\nfunction getHeaders(headers) {\n    const cleaned = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers);\n    for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.FLIGHT_PARAMETERS){\n        cleaned.delete(param.toString().toLowerCase());\n    }\n    return _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(cleaned);\n}\nfunction getCookies(headers) {\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookiesAdapter.seal(cookies);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\nconst RequestAsyncStorageWrapper = {\n    /**\n   * Wrap the callback with the given store so it can access the underlying\n   * store using hooks.\n   *\n   * @param storage underlying storage object returned by the module\n   * @param context context to seed the store\n   * @param callback function to call within the scope of the context\n   * @returns the result returned by the callback\n   */ wrap (storage, { req, res, renderOpts }, callback) {\n        let previewProps = undefined;\n        if (renderOpts && \"previewProps\" in renderOpts) {\n            // TODO: investigate why previewProps isn't on RenderOpts\n            previewProps = renderOpts.previewProps;\n        }\n        function defaultOnUpdateCookies(cookies) {\n            if (res) {\n                res.setHeader(\"Set-Cookie\", cookies);\n            }\n        }\n        const cache = {};\n        const store = {\n            get headers () {\n                if (!cache.headers) {\n                    // Seal the headers object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.headers = getHeaders(req.headers);\n                }\n                return cache.headers;\n            },\n            get cookies () {\n                if (!cache.cookies) {\n                    // Seal the cookies object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.cookies = getCookies(req.headers);\n                }\n                return cache.cookies;\n            },\n            get mutableCookies () {\n                if (!cache.mutableCookies) {\n                    cache.mutableCookies = getMutableCookies(req.headers, (renderOpts == null ? void 0 : renderOpts.onUpdateCookies) || (res ? defaultOnUpdateCookies : undefined));\n                }\n                return cache.mutableCookies;\n            },\n            get draftMode () {\n                if (!cache.draftMode) {\n                    cache.draftMode = new _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__.DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n                }\n                return cache.draftMode;\n            }\n        };\n        return storage.run(store, callback, store);\n    }\n}; //# sourceMappingURL=request-async-storage-wrapper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci9hc3luYy1zdG9yYWdlL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS13cmFwcGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErRTtBQUNQO0FBQzZDO0FBQ3REO0FBQ0w7QUFDMUQsU0FBU00sV0FBV0MsT0FBTztJQUN2QixNQUFNQyxVQUFVUCxnRkFBY0EsQ0FBQ1EsSUFBSSxDQUFDRjtJQUNwQyxLQUFLLE1BQU1HLFNBQVNWLG9GQUFpQkEsQ0FBQztRQUNsQ1EsUUFBUUcsTUFBTSxDQUFDRCxNQUFNRSxRQUFRLEdBQUdDLFdBQVc7SUFDL0M7SUFDQSxPQUFPWixnRkFBY0EsQ0FBQ2EsSUFBSSxDQUFDTjtBQUMvQjtBQUNBLFNBQVNPLFdBQVdSLE9BQU87SUFDdkIsTUFBTVMsVUFBVSxJQUFJWix1RUFBY0EsQ0FBQ0gsZ0ZBQWNBLENBQUNRLElBQUksQ0FBQ0Y7SUFDdkQsT0FBT0osK0ZBQXFCQSxDQUFDVyxJQUFJLENBQUNFO0FBQ3RDO0FBQ0EsU0FBU0Msa0JBQWtCVixPQUFPLEVBQUVXLGVBQWU7SUFDL0MsTUFBTUYsVUFBVSxJQUFJWix1RUFBY0EsQ0FBQ0gsZ0ZBQWNBLENBQUNRLElBQUksQ0FBQ0Y7SUFDdkQsT0FBT0wsc0dBQTRCQSxDQUFDaUIsSUFBSSxDQUFDSCxTQUFTRTtBQUN0RDtBQUNPLE1BQU1FLDZCQUE2QjtJQUN0Qzs7Ozs7Ozs7R0FRRCxHQUFHRCxNQUFNRSxPQUFPLEVBQUUsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLFVBQVUsRUFBRSxFQUFFQyxRQUFRO1FBQy9DLElBQUlDLGVBQWVDO1FBQ25CLElBQUlILGNBQWMsa0JBQWtCQSxZQUFZO1lBQzVDLHlEQUF5RDtZQUN6REUsZUFBZUYsV0FBV0UsWUFBWTtRQUMxQztRQUNBLFNBQVNFLHVCQUF1QlosT0FBTztZQUNuQyxJQUFJTyxLQUFLO2dCQUNMQSxJQUFJTSxTQUFTLENBQUMsY0FBY2I7WUFDaEM7UUFDSjtRQUNBLE1BQU1jLFFBQVEsQ0FBQztRQUNmLE1BQU1DLFFBQVE7WUFDVixJQUFJeEIsV0FBVztnQkFDWCxJQUFJLENBQUN1QixNQUFNdkIsT0FBTyxFQUFFO29CQUNoQixvRUFBb0U7b0JBQ3BFLDhCQUE4QjtvQkFDOUJ1QixNQUFNdkIsT0FBTyxHQUFHRCxXQUFXZ0IsSUFBSWYsT0FBTztnQkFDMUM7Z0JBQ0EsT0FBT3VCLE1BQU12QixPQUFPO1lBQ3hCO1lBQ0EsSUFBSVMsV0FBVztnQkFDWCxJQUFJLENBQUNjLE1BQU1kLE9BQU8sRUFBRTtvQkFDaEIsb0VBQW9FO29CQUNwRSw4QkFBOEI7b0JBQzlCYyxNQUFNZCxPQUFPLEdBQUdELFdBQVdPLElBQUlmLE9BQU87Z0JBQzFDO2dCQUNBLE9BQU91QixNQUFNZCxPQUFPO1lBQ3hCO1lBQ0EsSUFBSWdCLGtCQUFrQjtnQkFDbEIsSUFBSSxDQUFDRixNQUFNRSxjQUFjLEVBQUU7b0JBQ3ZCRixNQUFNRSxjQUFjLEdBQUdmLGtCQUFrQkssSUFBSWYsT0FBTyxFQUFFLENBQUNpQixjQUFjLE9BQU8sS0FBSyxJQUFJQSxXQUFXTixlQUFlLEtBQU1LLENBQUFBLE1BQU1LLHlCQUF5QkQsU0FBUTtnQkFDaEs7Z0JBQ0EsT0FBT0csTUFBTUUsY0FBYztZQUMvQjtZQUNBLElBQUlDLGFBQWE7Z0JBQ2IsSUFBSSxDQUFDSCxNQUFNRyxTQUFTLEVBQUU7b0JBQ2xCSCxNQUFNRyxTQUFTLEdBQUcsSUFBSTVCLG1FQUFpQkEsQ0FBQ3FCLGNBQWNKLEtBQUssSUFBSSxDQUFDTixPQUFPLEVBQUUsSUFBSSxDQUFDZ0IsY0FBYztnQkFDaEc7Z0JBQ0EsT0FBT0YsTUFBTUcsU0FBUztZQUMxQjtRQUNKO1FBQ0EsT0FBT1osUUFBUWEsR0FBRyxDQUFDSCxPQUFPTixVQUFVTTtJQUN4QztBQUNKLEVBQUUsQ0FFRix5REFBeUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci9hc3luYy1zdG9yYWdlL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS13cmFwcGVyLmpzPzIxYmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRkxJR0hUX1BBUkFNRVRFUlMgfSBmcm9tIFwiLi4vLi4vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzXCI7XG5pbXBvcnQgeyBIZWFkZXJzQWRhcHRlciB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvaGVhZGVyc1wiO1xuaW1wb3J0IHsgTXV0YWJsZVJlcXVlc3RDb29raWVzQWRhcHRlciwgUmVxdWVzdENvb2tpZXNBZGFwdGVyIH0gZnJvbSBcIi4uL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZXF1ZXN0LWNvb2tpZXNcIjtcbmltcG9ydCB7IFJlcXVlc3RDb29raWVzIH0gZnJvbSBcIi4uL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzXCI7XG5pbXBvcnQgeyBEcmFmdE1vZGVQcm92aWRlciB9IGZyb20gXCIuL2RyYWZ0LW1vZGUtcHJvdmlkZXJcIjtcbmZ1bmN0aW9uIGdldEhlYWRlcnMoaGVhZGVycykge1xuICAgIGNvbnN0IGNsZWFuZWQgPSBIZWFkZXJzQWRhcHRlci5mcm9tKGhlYWRlcnMpO1xuICAgIGZvciAoY29uc3QgcGFyYW0gb2YgRkxJR0hUX1BBUkFNRVRFUlMpe1xuICAgICAgICBjbGVhbmVkLmRlbGV0ZShwYXJhbS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkpO1xuICAgIH1cbiAgICByZXR1cm4gSGVhZGVyc0FkYXB0ZXIuc2VhbChjbGVhbmVkKTtcbn1cbmZ1bmN0aW9uIGdldENvb2tpZXMoaGVhZGVycykge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgUmVxdWVzdENvb2tpZXMoSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKSk7XG4gICAgcmV0dXJuIFJlcXVlc3RDb29raWVzQWRhcHRlci5zZWFsKGNvb2tpZXMpO1xufVxuZnVuY3Rpb24gZ2V0TXV0YWJsZUNvb2tpZXMoaGVhZGVycywgb25VcGRhdGVDb29raWVzKSB7XG4gICAgY29uc3QgY29va2llcyA9IG5ldyBSZXF1ZXN0Q29va2llcyhIZWFkZXJzQWRhcHRlci5mcm9tKGhlYWRlcnMpKTtcbiAgICByZXR1cm4gTXV0YWJsZVJlcXVlc3RDb29raWVzQWRhcHRlci53cmFwKGNvb2tpZXMsIG9uVXBkYXRlQ29va2llcyk7XG59XG5leHBvcnQgY29uc3QgUmVxdWVzdEFzeW5jU3RvcmFnZVdyYXBwZXIgPSB7XG4gICAgLyoqXG4gICAqIFdyYXAgdGhlIGNhbGxiYWNrIHdpdGggdGhlIGdpdmVuIHN0b3JlIHNvIGl0IGNhbiBhY2Nlc3MgdGhlIHVuZGVybHlpbmdcbiAgICogc3RvcmUgdXNpbmcgaG9va3MuXG4gICAqXG4gICAqIEBwYXJhbSBzdG9yYWdlIHVuZGVybHlpbmcgc3RvcmFnZSBvYmplY3QgcmV0dXJuZWQgYnkgdGhlIG1vZHVsZVxuICAgKiBAcGFyYW0gY29udGV4dCBjb250ZXh0IHRvIHNlZWQgdGhlIHN0b3JlXG4gICAqIEBwYXJhbSBjYWxsYmFjayBmdW5jdGlvbiB0byBjYWxsIHdpdGhpbiB0aGUgc2NvcGUgb2YgdGhlIGNvbnRleHRcbiAgICogQHJldHVybnMgdGhlIHJlc3VsdCByZXR1cm5lZCBieSB0aGUgY2FsbGJhY2tcbiAgICovIHdyYXAgKHN0b3JhZ2UsIHsgcmVxLCByZXMsIHJlbmRlck9wdHMgfSwgY2FsbGJhY2spIHtcbiAgICAgICAgbGV0IHByZXZpZXdQcm9wcyA9IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKHJlbmRlck9wdHMgJiYgXCJwcmV2aWV3UHJvcHNcIiBpbiByZW5kZXJPcHRzKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBpbnZlc3RpZ2F0ZSB3aHkgcHJldmlld1Byb3BzIGlzbid0IG9uIFJlbmRlck9wdHNcbiAgICAgICAgICAgIHByZXZpZXdQcm9wcyA9IHJlbmRlck9wdHMucHJldmlld1Byb3BzO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGRlZmF1bHRPblVwZGF0ZUNvb2tpZXMoY29va2llcykge1xuICAgICAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgICAgICAgIHJlcy5zZXRIZWFkZXIoXCJTZXQtQ29va2llXCIsIGNvb2tpZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNhY2hlID0ge307XG4gICAgICAgIGNvbnN0IHN0b3JlID0ge1xuICAgICAgICAgICAgZ2V0IGhlYWRlcnMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUuaGVhZGVycykge1xuICAgICAgICAgICAgICAgICAgICAvLyBTZWFsIHRoZSBoZWFkZXJzIG9iamVjdCB0aGF0J2xsIGZyZWV6ZSBvdXQgYW55IG1ldGhvZHMgdGhhdCBjb3VsZFxuICAgICAgICAgICAgICAgICAgICAvLyBtdXRhdGUgdGhlIHVuZGVybHlpbmcgZGF0YS5cbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuaGVhZGVycyA9IGdldEhlYWRlcnMocmVxLmhlYWRlcnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuaGVhZGVycztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgY29va2llcyAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5jb29raWVzKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNlYWwgdGhlIGNvb2tpZXMgb2JqZWN0IHRoYXQnbGwgZnJlZXplIG91dCBhbnkgbWV0aG9kcyB0aGF0IGNvdWxkXG4gICAgICAgICAgICAgICAgICAgIC8vIG11dGF0ZSB0aGUgdW5kZXJseWluZyBkYXRhLlxuICAgICAgICAgICAgICAgICAgICBjYWNoZS5jb29raWVzID0gZ2V0Q29va2llcyhyZXEuaGVhZGVycyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5jb29raWVzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBtdXRhYmxlQ29va2llcyAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5tdXRhYmxlQ29va2llcykge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZS5tdXRhYmxlQ29va2llcyA9IGdldE11dGFibGVDb29raWVzKHJlcS5oZWFkZXJzLCAocmVuZGVyT3B0cyA9PSBudWxsID8gdm9pZCAwIDogcmVuZGVyT3B0cy5vblVwZGF0ZUNvb2tpZXMpIHx8IChyZXMgPyBkZWZhdWx0T25VcGRhdGVDb29raWVzIDogdW5kZWZpbmVkKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5tdXRhYmxlQ29va2llcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgZHJhZnRNb2RlICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmRyYWZ0TW9kZSkge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZS5kcmFmdE1vZGUgPSBuZXcgRHJhZnRNb2RlUHJvdmlkZXIocHJldmlld1Byb3BzLCByZXEsIHRoaXMuY29va2llcywgdGhpcy5tdXRhYmxlQ29va2llcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5kcmFmdE1vZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBzdG9yYWdlLnJ1bihzdG9yZSwgY2FsbGJhY2ssIHN0b3JlKTtcbiAgICB9XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcy5tYXAiXSwibmFtZXMiOlsiRkxJR0hUX1BBUkFNRVRFUlMiLCJIZWFkZXJzQWRhcHRlciIsIk11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIiLCJSZXF1ZXN0Q29va2llc0FkYXB0ZXIiLCJSZXF1ZXN0Q29va2llcyIsIkRyYWZ0TW9kZVByb3ZpZGVyIiwiZ2V0SGVhZGVycyIsImhlYWRlcnMiLCJjbGVhbmVkIiwiZnJvbSIsInBhcmFtIiwiZGVsZXRlIiwidG9TdHJpbmciLCJ0b0xvd2VyQ2FzZSIsInNlYWwiLCJnZXRDb29raWVzIiwiY29va2llcyIsImdldE11dGFibGVDb29raWVzIiwib25VcGRhdGVDb29raWVzIiwid3JhcCIsIlJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyIiwic3RvcmFnZSIsInJlcSIsInJlcyIsInJlbmRlck9wdHMiLCJjYWxsYmFjayIsInByZXZpZXdQcm9wcyIsInVuZGVmaW5lZCIsImRlZmF1bHRPblVwZGF0ZUNvb2tpZXMiLCJzZXRIZWFkZXIiLCJjYWNoZSIsInN0b3JlIiwibXV0YWJsZUNvb2tpZXMiLCJkcmFmdE1vZGUiLCJydW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/internal-utils.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/internal-utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripInternalHeaders: () => (/* binding */ stripInternalHeaders),\n/* harmony export */   stripInternalQueries: () => (/* binding */ stripInternalQueries),\n/* harmony export */   stripInternalSearchParams: () => (/* binding */ stripInternalSearchParams)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/app-router-headers */ \"(middleware)/../../node_modules/next/dist/esm/client/components/app-router-headers.js\");\n\nconst INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextInferredLocaleFromDefault\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\",\n    _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.NEXT_RSC_UNION_QUERY\n];\nconst EDGE_EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nfunction stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nfunction stripInternalSearchParams(url, isEdge) {\n    const isStringUrl = typeof url === \"string\";\n    const instance = isStringUrl ? new URL(url) : url;\n    for (const name of INTERNAL_QUERY_NAMES){\n        instance.searchParams.delete(name);\n    }\n    if (isEdge) {\n        for (const name of EDGE_EXTENDED_INTERNAL_QUERY_NAMES){\n            instance.searchParams.delete(name);\n        }\n    }\n    return isStringUrl ? instance.toString() : instance;\n}\n/**\n * Headers that are set by the Next.js server and should be stripped from the\n * request headers going to the user's application.\n */ const INTERNAL_HEADERS = [\n    \"x-invoke-path\",\n    \"x-invoke-status\",\n    \"x-invoke-error\",\n    \"x-invoke-query\",\n    \"x-invoke-output\",\n    \"x-middleware-invoke\"\n];\n/**\n * Strip internal headers from the request headers.\n *\n * @param headers the headers to strip of internal headers\n */ function stripInternalHeaders(headers) {\n    for (const key of INTERNAL_HEADERS){\n        delete headers[key];\n    }\n} //# sourceMappingURL=internal-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci9pbnRlcm5hbC11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStFO0FBQy9FLE1BQU1DLHVCQUF1QjtJQUN6QjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0FELHVGQUFvQkE7Q0FDdkI7QUFDRCxNQUFNRSxxQ0FBcUM7SUFDdkM7Q0FDSDtBQUNNLFNBQVNDLHFCQUFxQkMsS0FBSztJQUN0QyxLQUFLLE1BQU1DLFFBQVFKLHFCQUFxQjtRQUNwQyxPQUFPRyxLQUFLLENBQUNDLEtBQUs7SUFDdEI7QUFDSjtBQUNPLFNBQVNDLDBCQUEwQkMsR0FBRyxFQUFFQyxNQUFNO0lBQ2pELE1BQU1DLGNBQWMsT0FBT0YsUUFBUTtJQUNuQyxNQUFNRyxXQUFXRCxjQUFjLElBQUlFLElBQUlKLE9BQU9BO0lBQzlDLEtBQUssTUFBTUYsUUFBUUoscUJBQXFCO1FBQ3BDUyxTQUFTRSxZQUFZLENBQUNDLE1BQU0sQ0FBQ1I7SUFDakM7SUFDQSxJQUFJRyxRQUFRO1FBQ1IsS0FBSyxNQUFNSCxRQUFRSCxtQ0FBbUM7WUFDbERRLFNBQVNFLFlBQVksQ0FBQ0MsTUFBTSxDQUFDUjtRQUNqQztJQUNKO0lBQ0EsT0FBT0ksY0FBY0MsU0FBU0ksUUFBUSxLQUFLSjtBQUMvQztBQUNBOzs7Q0FHQyxHQUFHLE1BQU1LLG1CQUFtQjtJQUN6QjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDSDtBQUNEOzs7O0NBSUMsR0FBVSxTQUFTQyxxQkFBcUJDLE9BQU87SUFDNUMsS0FBSyxNQUFNQyxPQUFPSCxpQkFBaUI7UUFDL0IsT0FBT0UsT0FBTyxDQUFDQyxJQUFJO0lBQ3ZCO0FBQ0osRUFFQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci9pbnRlcm5hbC11dGlscy5qcz9hYWJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5FWFRfUlNDX1VOSU9OX1FVRVJZIH0gZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVyc1wiO1xuY29uc3QgSU5URVJOQUxfUVVFUllfTkFNRVMgPSBbXG4gICAgXCJfX25leHRGYWxsYmFja1wiLFxuICAgIFwiX19uZXh0TG9jYWxlXCIsXG4gICAgXCJfX25leHRJbmZlcnJlZExvY2FsZUZyb21EZWZhdWx0XCIsXG4gICAgXCJfX25leHREZWZhdWx0TG9jYWxlXCIsXG4gICAgXCJfX25leHRJc05vdEZvdW5kXCIsXG4gICAgTkVYVF9SU0NfVU5JT05fUVVFUllcbl07XG5jb25zdCBFREdFX0VYVEVOREVEX0lOVEVSTkFMX1FVRVJZX05BTUVTID0gW1xuICAgIFwiX19uZXh0RGF0YVJlcVwiXG5dO1xuZXhwb3J0IGZ1bmN0aW9uIHN0cmlwSW50ZXJuYWxRdWVyaWVzKHF1ZXJ5KSB7XG4gICAgZm9yIChjb25zdCBuYW1lIG9mIElOVEVSTkFMX1FVRVJZX05BTUVTKXtcbiAgICAgICAgZGVsZXRlIHF1ZXJ5W25hbWVdO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBzdHJpcEludGVybmFsU2VhcmNoUGFyYW1zKHVybCwgaXNFZGdlKSB7XG4gICAgY29uc3QgaXNTdHJpbmdVcmwgPSB0eXBlb2YgdXJsID09PSBcInN0cmluZ1wiO1xuICAgIGNvbnN0IGluc3RhbmNlID0gaXNTdHJpbmdVcmwgPyBuZXcgVVJMKHVybCkgOiB1cmw7XG4gICAgZm9yIChjb25zdCBuYW1lIG9mIElOVEVSTkFMX1FVRVJZX05BTUVTKXtcbiAgICAgICAgaW5zdGFuY2Uuc2VhcmNoUGFyYW1zLmRlbGV0ZShuYW1lKTtcbiAgICB9XG4gICAgaWYgKGlzRWRnZSkge1xuICAgICAgICBmb3IgKGNvbnN0IG5hbWUgb2YgRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgICAgICBpbnN0YW5jZS5zZWFyY2hQYXJhbXMuZGVsZXRlKG5hbWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBpc1N0cmluZ1VybCA/IGluc3RhbmNlLnRvU3RyaW5nKCkgOiBpbnN0YW5jZTtcbn1cbi8qKlxuICogSGVhZGVycyB0aGF0IGFyZSBzZXQgYnkgdGhlIE5leHQuanMgc2VydmVyIGFuZCBzaG91bGQgYmUgc3RyaXBwZWQgZnJvbSB0aGVcbiAqIHJlcXVlc3QgaGVhZGVycyBnb2luZyB0byB0aGUgdXNlcidzIGFwcGxpY2F0aW9uLlxuICovIGNvbnN0IElOVEVSTkFMX0hFQURFUlMgPSBbXG4gICAgXCJ4LWludm9rZS1wYXRoXCIsXG4gICAgXCJ4LWludm9rZS1zdGF0dXNcIixcbiAgICBcIngtaW52b2tlLWVycm9yXCIsXG4gICAgXCJ4LWludm9rZS1xdWVyeVwiLFxuICAgIFwieC1pbnZva2Utb3V0cHV0XCIsXG4gICAgXCJ4LW1pZGRsZXdhcmUtaW52b2tlXCJcbl07XG4vKipcbiAqIFN0cmlwIGludGVybmFsIGhlYWRlcnMgZnJvbSB0aGUgcmVxdWVzdCBoZWFkZXJzLlxuICpcbiAqIEBwYXJhbSBoZWFkZXJzIHRoZSBoZWFkZXJzIHRvIHN0cmlwIG9mIGludGVybmFsIGhlYWRlcnNcbiAqLyBleHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbEhlYWRlcnMoaGVhZGVycykge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIElOVEVSTkFMX0hFQURFUlMpe1xuICAgICAgICBkZWxldGUgaGVhZGVyc1trZXldO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJuYWwtdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIk5FWFRfUlNDX1VOSU9OX1FVRVJZIiwiSU5URVJOQUxfUVVFUllfTkFNRVMiLCJFREdFX0VYVEVOREVEX0lOVEVSTkFMX1FVRVJZX05BTUVTIiwic3RyaXBJbnRlcm5hbFF1ZXJpZXMiLCJxdWVyeSIsIm5hbWUiLCJzdHJpcEludGVybmFsU2VhcmNoUGFyYW1zIiwidXJsIiwiaXNFZGdlIiwiaXNTdHJpbmdVcmwiLCJpbnN0YW5jZSIsIlVSTCIsInNlYXJjaFBhcmFtcyIsImRlbGV0ZSIsInRvU3RyaW5nIiwiSU5URVJOQUxfSEVBREVSUyIsInN0cmlwSW50ZXJuYWxIZWFkZXJzIiwiaGVhZGVycyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/internal-utils.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/adapter.js":
/*!**************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/adapter.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adapter: () => (/* binding */ adapter)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(middleware)/../../node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/../../node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./spec-extension/fetch-event */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spec-extension/request */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spec-extension/response */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/router/utils/relativize-url */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\");\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./next-url */ \"(middleware)/../../node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _internal_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal-utils */ \"(middleware)/../../node_modules/next/dist/esm/server/internal-utils.js\");\n/* harmony import */ var _shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared/lib/router/utils/app-paths */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\");\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/../../node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/../../node_modules/next/dist/esm/lib/constants.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./globals */ \"(middleware)/../../node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../async-storage/request-async-storage-wrapper */ \"(middleware)/../../node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\");\n/* harmony import */ var _client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../client/components/request-async-storage.external */ \"(middleware)/../../node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass NextRequestHint extends _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__.NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.RSC\n    ],\n    [\n        _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.NEXT_ROUTER_PREFETCH\n    ]\n];\nasync function adapter(params) {\n    await (0,_globals__WEBPACK_IMPORTED_MODULE_11__.ensureInstrumentationRegistered)();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    const prerenderManifest = typeof self.__PRERENDER_MANIFEST === \"string\" ? JSON.parse(self.__PRERENDER_MANIFEST) : undefined;\n    params.request.url = (0,_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__.normalizeRscPath)(params.request.url, true);\n    const requestUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestUrl.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestUrl.searchParams.getAll(key);\n        if (key !== _lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX && key.startsWith(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX)) {\n            const normalizedKey = key.substring(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX.length);\n            requestUrl.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestUrl.searchParams.append(normalizedKey, val);\n            }\n            requestUrl.searchParams.delete(key);\n        }\n    }\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.fromNodeOutgoingHttpHeaders)(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    const normalizeUrl =  false ? 0 : requestUrl;\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: (0,_internal_utils__WEBPACK_IMPORTED_MODULE_7__.stripInternalSearchParams)(normalizeUrl, true).toString(),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (!globalThis.__incrementalCache && params.IncrementalCache) {\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            appDir: true,\n            fetchCache: true,\n            minimalMode: \"development\" !== \"development\",\n            fetchCacheKeyPrefix: undefined,\n            dev: \"development\" === \"development\",\n            requestHeaders: params.request.headers,\n            requestProtocol: \"https\",\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: {\n                        previewModeId: \"development-id\"\n                    }\n                };\n            }\n        });\n    }\n    const event = new _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response;\n    let cookiesFromResponse;\n    // we only care to make async storage available for middleware\n    const isMiddleware = params.page === \"/middleware\" || params.page === \"/src/middleware\";\n    if (isMiddleware) {\n        response = await _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__.RequestAsyncStorageWrapper.wrap(_client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__.requestAsyncStorage, {\n            req: request,\n            renderOpts: {\n                onUpdateCookies: (cookies)=>{\n                    cookiesFromResponse = cookies;\n                },\n                // @ts-expect-error: TODO: investigate why previewProps isn't on RenderOpts\n                previewProps: (prerenderManifest == null ? void 0 : prerenderManifest.preview) || {\n                    previewModeId: \"development-id\",\n                    previewModeEncryptionKey: \"\",\n                    previewModeSigningKey: \"\"\n                }\n            }\n        }, ()=>params.handler(request, event));\n    } else {\n        response = await params.handler(request, event);\n    }\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set(\"set-cookie\", cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (true) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(rewriteUrl), String(requestUrl));\n        if (isDataReq && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(undefined && 0)) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (true) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__.NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[_spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.waitUntilSymbol]),\n        fetchMetrics: request.fetchMetrics\n    };\n} //# sourceMappingURL=adapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/adapter.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/error.js":
/*!************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/error.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageSignatureError: () => (/* binding */ PageSignatureError),\n/* harmony export */   RemovedPageError: () => (/* binding */ RemovedPageError),\n/* harmony export */   RemovedUAError: () => (/* binding */ RemovedUAError)\n/* harmony export */ });\nclass PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nclass RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nclass RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sTUFBTUEsMkJBQTJCQztJQUNwQ0MsWUFBWSxFQUFFQyxJQUFJLEVBQUUsQ0FBQztRQUNqQixLQUFLLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRUEsS0FBSzs7Ozs7OztFQU9wQyxDQUFDO0lBQ0M7QUFDSjtBQUNPLE1BQU1DLHlCQUF5Qkg7SUFDbENDLGFBQWE7UUFDVCxLQUFLLENBQUMsQ0FBQzs7RUFFYixDQUFDO0lBQ0M7QUFDSjtBQUNPLE1BQU1HLHVCQUF1Qko7SUFDaENDLGFBQWE7UUFDVCxLQUFLLENBQUMsQ0FBQzs7RUFFYixDQUFDO0lBQ0M7QUFDSixFQUVBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9lcnJvci5qcz80NmJjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBQYWdlU2lnbmF0dXJlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoeyBwYWdlIH0pe1xuICAgICAgICBzdXBlcihgVGhlIG1pZGRsZXdhcmUgXCIke3BhZ2V9XCIgYWNjZXB0cyBhbiBhc3luYyBBUEkgZGlyZWN0bHkgd2l0aCB0aGUgZm9ybTpcbiAgXG4gIGV4cG9ydCBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcXVlc3QsIGV2ZW50KSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdCgnL25ldy1sb2NhdGlvbicpXG4gIH1cbiAgXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gIGApO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSZW1vdmVkUGFnZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHN1cGVyKGBUaGUgcmVxdWVzdC5wYWdlIGhhcyBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIFxcYFVSTFBhdHRlcm5cXGAuXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1yZXF1ZXN0LXBhZ2VcbiAgYCk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJlbW92ZWRVQUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHN1cGVyKGBUaGUgcmVxdWVzdC51YSBoYXMgYmVlbiByZW1vdmVkIGluIGZhdm91ciBvZiBcXGB1c2VyQWdlbnRcXGAgZnVuY3Rpb24uXG4gIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1wYXJzZS11c2VyLWFnZW50XG4gIGApO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIlBhZ2VTaWduYXR1cmVFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJwYWdlIiwiUmVtb3ZlZFBhZ2VFcnJvciIsIlJlbW92ZWRVQUVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/error.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-request.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/exports/next-request.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _spec_extension_request__WEBPACK_IMPORTED_MODULE_0__.NextRequest)\n/* harmony export */ });\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec-extension/request */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n// This file is for modularized imports for next/server to get fully-treeshaking.\n //# sourceMappingURL=next-request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZXhwb3J0cy9uZXh0LXJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxpRkFBaUY7QUFDZCxDQUVuRSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZXhwb3J0cy9uZXh0LXJlcXVlc3QuanM/ODM4MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgZm9yIG1vZHVsYXJpemVkIGltcG9ydHMgZm9yIG5leHQvc2VydmVyIHRvIGdldCBmdWxseS10cmVlc2hha2luZy5cbmV4cG9ydCB7IE5leHRSZXF1ZXN0IGFzIGRlZmF1bHQgfSBmcm9tIFwiLi4vc3BlYy1leHRlbnNpb24vcmVxdWVzdFwiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZXh0LXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk5leHRSZXF1ZXN0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-request.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-response.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/exports/next-response.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _spec_extension_response__WEBPACK_IMPORTED_MODULE_0__.NextResponse)\n/* harmony export */ });\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec-extension/response */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n// This file is for modularized imports for next/server to get fully-treeshaking.\n //# sourceMappingURL=next-response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZXhwb3J0cy9uZXh0LXJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsaUZBQWlGO0FBQ1osQ0FFckUseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL2V4cG9ydHMvbmV4dC1yZXNwb25zZS5qcz80MDQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZmlsZSBpcyBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0cyBmb3IgbmV4dC9zZXJ2ZXIgdG8gZ2V0IGZ1bGx5LXRyZWVzaGFraW5nLlxuZXhwb3J0IHsgTmV4dFJlc3BvbnNlIGFzIGRlZmF1bHQgfSBmcm9tIFwiLi4vc3BlYy1leHRlbnNpb24vcmVzcG9uc2VcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmV4dC1yZXNwb25zZS5qcy5tYXAiXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/exports/next-response.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/globals.js":
/*!**************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/globals.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureInstrumentationRegistered: () => (/* binding */ ensureInstrumentationRegistered)\n/* harmony export */ });\nasync function registerInstrumentation() {\n    if (\"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && _ENTRIES.middleware_instrumentation.register) {\n        try {\n            await _ENTRIES.middleware_instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nlet registerInstrumentationPromise = null;\nfunction ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== __webpack_require__.g.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = __webpack_require__.g.process.env;\n        __webpack_require__.g.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals(); //# sourceMappingURL=globals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZ2xvYmFscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsZUFBZUE7SUFDWCxJQUFJLGNBQWNDLGNBQWNDLFNBQVNDLDBCQUEwQixJQUFJRCxTQUFTQywwQkFBMEIsQ0FBQ0MsUUFBUSxFQUFFO1FBQ2pILElBQUk7WUFDQSxNQUFNRixTQUFTQywwQkFBMEIsQ0FBQ0MsUUFBUTtRQUN0RCxFQUFFLE9BQU9DLEtBQUs7WUFDVkEsSUFBSUMsT0FBTyxHQUFHLENBQUMsc0RBQXNELEVBQUVELElBQUlDLE9BQU8sQ0FBQyxDQUFDO1lBQ3BGLE1BQU1EO1FBQ1Y7SUFDSjtBQUNKO0FBQ0EsSUFBSUUsaUNBQWlDO0FBQzlCLFNBQVNDO0lBQ1osSUFBSSxDQUFDRCxnQ0FBZ0M7UUFDakNBLGlDQUFpQ1A7SUFDckM7SUFDQSxPQUFPTztBQUNYO0FBQ0EsU0FBU0UsaUNBQWlDQyxNQUFNO0lBQzVDLHNIQUFzSDtJQUN0SCxPQUFPLENBQUMsMkNBQTJDLEVBQUVBLE9BQU87d0VBQ1EsQ0FBQztBQUN6RTtBQUNBLFNBQVNDLHFCQUFxQkMsVUFBVTtJQUNwQyxNQUFNQyxRQUFRLElBQUlDLE1BQU0sWUFBWSxHQUFHO1FBQ25DQyxLQUFLQyxJQUFJLEVBQUVDLElBQUk7WUFDWCxJQUFJQSxTQUFTLFFBQVE7Z0JBQ2pCLE9BQU8sQ0FBQztZQUNaO1lBQ0EsTUFBTSxJQUFJQyxNQUFNVCxpQ0FBaUNHO1FBQ3JEO1FBQ0FPO1lBQ0ksTUFBTSxJQUFJRCxNQUFNVCxpQ0FBaUNHO1FBQ3JEO1FBQ0FRLE9BQU9DLE9BQU8sRUFBRUMsS0FBSyxFQUFFQyxJQUFJO1lBQ3ZCLElBQUksT0FBT0EsSUFBSSxDQUFDLEVBQUUsS0FBSyxZQUFZO2dCQUMvQixPQUFPQSxJQUFJLENBQUMsRUFBRSxDQUFDVjtZQUNuQjtZQUNBLE1BQU0sSUFBSUssTUFBTVQsaUNBQWlDRztRQUNyRDtJQUNKO0lBQ0EsT0FBTyxJQUFJRSxNQUFNLENBQUMsR0FBRztRQUNqQkMsS0FBSyxJQUFJRjtJQUNiO0FBQ0o7QUFDQSxTQUFTVztJQUNMLDhEQUE4RDtJQUM5RCxJQUFJQyxZQUFZQyxxQkFBTUEsQ0FBQ0QsT0FBTyxFQUFFO1FBQzVCLDREQUE0RDtRQUM1REEsUUFBUUUsR0FBRyxHQUFHRCxxQkFBTUEsQ0FBQ0QsT0FBTyxDQUFDRSxHQUFHO1FBQ2hDRCxxQkFBTUEsQ0FBQ0QsT0FBTyxHQUFHQTtJQUNyQjtJQUNBLHVFQUF1RTtJQUN2RSw2REFBNkQ7SUFDN0RHLE9BQU9DLGNBQWMsQ0FBQzVCLFlBQVksd0JBQXdCO1FBQ3RENkIsT0FBT25CO1FBQ1BvQixZQUFZO1FBQ1pDLGNBQWM7SUFDbEI7SUFDQSxnRUFBZ0U7SUFDaEUsS0FBS3hCO0FBQ1Q7QUFDQWdCLGtCQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nbG9iYWxzLmpzP2Y2MTYiXSwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgZnVuY3Rpb24gcmVnaXN0ZXJJbnN0cnVtZW50YXRpb24oKSB7XG4gICAgaWYgKFwiX0VOVFJJRVNcIiBpbiBnbG9iYWxUaGlzICYmIF9FTlRSSUVTLm1pZGRsZXdhcmVfaW5zdHJ1bWVudGF0aW9uICYmIF9FTlRSSUVTLm1pZGRsZXdhcmVfaW5zdHJ1bWVudGF0aW9uLnJlZ2lzdGVyKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBfRU5UUklFUy5taWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbi5yZWdpc3RlcigpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGVyci5tZXNzYWdlID0gYEFuIGVycm9yIG9jY3VycmVkIHdoaWxlIGxvYWRpbmcgaW5zdHJ1bWVudGF0aW9uIGhvb2s6ICR7ZXJyLm1lc3NhZ2V9YDtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmxldCByZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2UgPSBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIGVuc3VyZUluc3RydW1lbnRhdGlvblJlZ2lzdGVyZWQoKSB7XG4gICAgaWYgKCFyZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2UpIHtcbiAgICAgICAgcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlID0gcmVnaXN0ZXJJbnN0cnVtZW50YXRpb24oKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uUHJvbWlzZTtcbn1cbmZ1bmN0aW9uIGdldFVuc3VwcG9ydGVkTW9kdWxlRXJyb3JNZXNzYWdlKG1vZHVsZSkge1xuICAgIC8vIHdhcm5pbmc6IGlmIHlvdSBjaGFuZ2UgdGhlc2UgbWVzc2FnZXMsIHlvdSBtdXN0IGFkanVzdCBob3cgcmVhY3QtZGV2LW92ZXJsYXkncyBtaWRkbGV3YXJlIGRldGVjdHMgbW9kdWxlcyBub3QgZm91bmRcbiAgICByZXR1cm4gYFRoZSBlZGdlIHJ1bnRpbWUgZG9lcyBub3Qgc3VwcG9ydCBOb2RlLmpzICcke21vZHVsZX0nIG1vZHVsZS5cbkxlYXJuIE1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL25vZGUtbW9kdWxlLWluLWVkZ2UtcnVudGltZWA7XG59XG5mdW5jdGlvbiBfX2ltcG9ydF91bnN1cHBvcnRlZChtb2R1bGVOYW1lKSB7XG4gICAgY29uc3QgcHJveHkgPSBuZXcgUHJveHkoZnVuY3Rpb24oKSB7fSwge1xuICAgICAgICBnZXQgKF9vYmosIHByb3ApIHtcbiAgICAgICAgICAgIGlmIChwcm9wID09PSBcInRoZW5cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGVOYW1lKSk7XG4gICAgICAgIH0sXG4gICAgICAgIGNvbnN0cnVjdCAoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UobW9kdWxlTmFtZSkpO1xuICAgICAgICB9LFxuICAgICAgICBhcHBseSAoX3RhcmdldCwgX3RoaXMsIGFyZ3MpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYXJnc1swXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFyZ3NbMF0ocHJveHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGdldFVuc3VwcG9ydGVkTW9kdWxlRXJyb3JNZXNzYWdlKG1vZHVsZU5hbWUpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBuZXcgUHJveHkoe30sIHtcbiAgICAgICAgZ2V0OiAoKT0+cHJveHlcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGVuaGFuY2VHbG9iYWxzKCkge1xuICAgIC8vIFRoZSBjb25kaXRpb24gaXMgdHJ1ZSB3aGVuIHRoZSBcInByb2Nlc3NcIiBtb2R1bGUgaXMgcHJvdmlkZWRcbiAgICBpZiAocHJvY2VzcyAhPT0gZ2xvYmFsLnByb2Nlc3MpIHtcbiAgICAgICAgLy8gcHJlZmVyIGxvY2FsIHByb2Nlc3MgYnV0IGdsb2JhbC5wcm9jZXNzIGhhcyBjb3JyZWN0IFwiZW52XCJcbiAgICAgICAgcHJvY2Vzcy5lbnYgPSBnbG9iYWwucHJvY2Vzcy5lbnY7XG4gICAgICAgIGdsb2JhbC5wcm9jZXNzID0gcHJvY2VzcztcbiAgICB9XG4gICAgLy8gdG8gYWxsb3cgYnVpbGRpbmcgY29kZSB0aGF0IGltcG9ydCBidXQgZG9lcyBub3QgdXNlIG5vZGUuanMgbW9kdWxlcyxcbiAgICAvLyB3ZWJwYWNrIHdpbGwgZXhwZWN0IHRoaXMgZnVuY3Rpb24gdG8gZXhpc3QgaW4gZ2xvYmFsIHNjb3BlXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGdsb2JhbFRoaXMsIFwiX19pbXBvcnRfdW5zdXBwb3J0ZWRcIiwge1xuICAgICAgICB2YWx1ZTogX19pbXBvcnRfdW5zdXBwb3J0ZWQsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlXG4gICAgfSk7XG4gICAgLy8gRWFnZXJseSBmaXJlIGluc3RydW1lbnRhdGlvbiBob29rIHRvIG1ha2UgdGhlIHN0YXJ0dXAgZmFzdGVyLlxuICAgIHZvaWQgZW5zdXJlSW5zdHJ1bWVudGF0aW9uUmVnaXN0ZXJlZCgpO1xufVxuZW5oYW5jZUdsb2JhbHMoKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFscy5qcy5tYXAiXSwibmFtZXMiOlsicmVnaXN0ZXJJbnN0cnVtZW50YXRpb24iLCJnbG9iYWxUaGlzIiwiX0VOVFJJRVMiLCJtaWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbiIsInJlZ2lzdGVyIiwiZXJyIiwibWVzc2FnZSIsInJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uUHJvbWlzZSIsImVuc3VyZUluc3RydW1lbnRhdGlvblJlZ2lzdGVyZWQiLCJnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZSIsIm1vZHVsZSIsIl9faW1wb3J0X3Vuc3VwcG9ydGVkIiwibW9kdWxlTmFtZSIsInByb3h5IiwiUHJveHkiLCJnZXQiLCJfb2JqIiwicHJvcCIsIkVycm9yIiwiY29uc3RydWN0IiwiYXBwbHkiLCJfdGFyZ2V0IiwiX3RoaXMiLCJhcmdzIiwiZW5oYW5jZUdsb2JhbHMiLCJwcm9jZXNzIiwiZ2xvYmFsIiwiZW52IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/globals.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/next-url.js":
/*!***************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/next-url.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextURL: () => (/* binding */ NextURL)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\");\n/* harmony import */ var _shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\");\n/* harmony import */ var _shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/get-hostname.js\");\n/* harmony import */ var _shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\");\n\n\n\n\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = (0,_shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__.getNextPathnameInfo)(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !undefined,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = (0,_shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__.getHostname)(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0,_shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__.detectDomainLocale)((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return (0,_shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__.formatNextPathnameInfo)({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n} //# sourceMappingURL=next-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvbmV4dC11cmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0Y7QUFDaUI7QUFDckM7QUFDK0I7QUFDM0YsTUFBTUksMkJBQTJCO0FBQ2pDLFNBQVNDLFNBQVNDLEdBQUcsRUFBRUMsSUFBSTtJQUN2QixPQUFPLElBQUlDLElBQUlDLE9BQU9ILEtBQUtJLE9BQU8sQ0FBQ04sMEJBQTBCLGNBQWNHLFFBQVFFLE9BQU9GLE1BQU1HLE9BQU8sQ0FBQ04sMEJBQTBCO0FBQ3RJO0FBQ0EsTUFBTU8sV0FBV0MsT0FBTztBQUNqQixNQUFNQztJQUNUQyxZQUFZQyxLQUFLLEVBQUVDLFVBQVUsRUFBRUMsSUFBSSxDQUFDO1FBQ2hDLElBQUlWO1FBQ0osSUFBSVc7UUFDSixJQUFJLE9BQU9GLGVBQWUsWUFBWSxjQUFjQSxjQUFjLE9BQU9BLGVBQWUsVUFBVTtZQUM5RlQsT0FBT1M7WUFDUEUsVUFBVUQsUUFBUSxDQUFDO1FBQ3ZCLE9BQU87WUFDSEMsVUFBVUQsUUFBUUQsY0FBYyxDQUFDO1FBQ3JDO1FBQ0EsSUFBSSxDQUFDTCxTQUFTLEdBQUc7WUFDYkwsS0FBS0QsU0FBU1UsT0FBT1IsUUFBUVcsUUFBUVgsSUFBSTtZQUN6Q1csU0FBU0E7WUFDVEMsVUFBVTtRQUNkO1FBQ0EsSUFBSSxDQUFDQyxPQUFPO0lBQ2hCO0lBQ0FBLFVBQVU7UUFDTixJQUFJQyx3Q0FBd0NDLG1DQUFtQ0MsNkJBQTZCQyx5Q0FBeUNDO1FBQ3JKLE1BQU1DLE9BQU92QixvR0FBbUJBLENBQUMsSUFBSSxDQUFDUSxTQUFTLENBQUNMLEdBQUcsQ0FBQ3FCLFFBQVEsRUFBRTtZQUMxREMsWUFBWSxJQUFJLENBQUNqQixTQUFTLENBQUNPLE9BQU8sQ0FBQ1UsVUFBVTtZQUM3Q0MsV0FBVyxDQUFDQyxTQUE4QztZQUMxREcsY0FBYyxJQUFJLENBQUN0QixTQUFTLENBQUNPLE9BQU8sQ0FBQ2UsWUFBWTtRQUNyRDtRQUNBLE1BQU1DLFdBQVdoQyxxRUFBV0EsQ0FBQyxJQUFJLENBQUNTLFNBQVMsQ0FBQ0wsR0FBRyxFQUFFLElBQUksQ0FBQ0ssU0FBUyxDQUFDTyxPQUFPLENBQUNpQixPQUFPO1FBQy9FLElBQUksQ0FBQ3hCLFNBQVMsQ0FBQ3lCLFlBQVksR0FBRyxJQUFJLENBQUN6QixTQUFTLENBQUNPLE9BQU8sQ0FBQ2UsWUFBWSxHQUFHLElBQUksQ0FBQ3RCLFNBQVMsQ0FBQ08sT0FBTyxDQUFDZSxZQUFZLENBQUNqQyxrQkFBa0IsQ0FBQ2tDLFlBQVlsQyx5RkFBa0JBLENBQUMsQ0FBQ3NCLG9DQUFvQyxJQUFJLENBQUNYLFNBQVMsQ0FBQ08sT0FBTyxDQUFDVSxVQUFVLEtBQUssT0FBTyxLQUFLLElBQUksQ0FBQ1AseUNBQXlDQyxrQ0FBa0NlLElBQUksS0FBSyxPQUFPLEtBQUssSUFBSWhCLHVDQUF1Q2lCLE9BQU8sRUFBRUo7UUFDMVksTUFBTUssZ0JBQWdCLENBQUMsQ0FBQ2hCLDhCQUE4QixJQUFJLENBQUNaLFNBQVMsQ0FBQ3lCLFlBQVksS0FBSyxPQUFPLEtBQUssSUFBSWIsNEJBQTRCZ0IsYUFBYSxLQUFNLEVBQUNkLHFDQUFxQyxJQUFJLENBQUNkLFNBQVMsQ0FBQ08sT0FBTyxDQUFDVSxVQUFVLEtBQUssT0FBTyxLQUFLLElBQUksQ0FBQ0osMENBQTBDQyxtQ0FBbUNZLElBQUksS0FBSyxPQUFPLEtBQUssSUFBSWIsd0NBQXdDZSxhQUFhO1FBQzdZLElBQUksQ0FBQzVCLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDcUIsUUFBUSxHQUFHRCxLQUFLQyxRQUFRO1FBQzNDLElBQUksQ0FBQ2hCLFNBQVMsQ0FBQzRCLGFBQWEsR0FBR0E7UUFDL0IsSUFBSSxDQUFDNUIsU0FBUyxDQUFDUSxRQUFRLEdBQUdPLEtBQUtQLFFBQVEsSUFBSTtRQUMzQyxJQUFJLENBQUNSLFNBQVMsQ0FBQzZCLE9BQU8sR0FBR2QsS0FBS2MsT0FBTztRQUNyQyxJQUFJLENBQUM3QixTQUFTLENBQUM4QixNQUFNLEdBQUdmLEtBQUtlLE1BQU0sSUFBSUY7UUFDdkMsSUFBSSxDQUFDNUIsU0FBUyxDQUFDK0IsYUFBYSxHQUFHaEIsS0FBS2dCLGFBQWE7SUFDckQ7SUFDQUMsaUJBQWlCO1FBQ2IsT0FBTzFDLDBHQUFzQkEsQ0FBQztZQUMxQmtCLFVBQVUsSUFBSSxDQUFDUixTQUFTLENBQUNRLFFBQVE7WUFDakNxQixTQUFTLElBQUksQ0FBQzdCLFNBQVMsQ0FBQzZCLE9BQU87WUFDL0JELGVBQWUsQ0FBQyxJQUFJLENBQUM1QixTQUFTLENBQUNPLE9BQU8sQ0FBQzBCLFdBQVcsR0FBRyxJQUFJLENBQUNqQyxTQUFTLENBQUM0QixhQUFhLEdBQUdNO1lBQ3BGSixRQUFRLElBQUksQ0FBQzlCLFNBQVMsQ0FBQzhCLE1BQU07WUFDN0JkLFVBQVUsSUFBSSxDQUFDaEIsU0FBUyxDQUFDTCxHQUFHLENBQUNxQixRQUFRO1lBQ3JDZSxlQUFlLElBQUksQ0FBQy9CLFNBQVMsQ0FBQytCLGFBQWE7UUFDL0M7SUFDSjtJQUNBSSxlQUFlO1FBQ1gsT0FBTyxJQUFJLENBQUNuQyxTQUFTLENBQUNMLEdBQUcsQ0FBQ3lDLE1BQU07SUFDcEM7SUFDQSxJQUFJUCxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUM3QixTQUFTLENBQUM2QixPQUFPO0lBQ2pDO0lBQ0EsSUFBSUEsUUFBUUEsT0FBTyxFQUFFO1FBQ2pCLElBQUksQ0FBQzdCLFNBQVMsQ0FBQzZCLE9BQU8sR0FBR0E7SUFDN0I7SUFDQSxJQUFJQyxTQUFTO1FBQ1QsT0FBTyxJQUFJLENBQUM5QixTQUFTLENBQUM4QixNQUFNLElBQUk7SUFDcEM7SUFDQSxJQUFJQSxPQUFPQSxNQUFNLEVBQUU7UUFDZixJQUFJcEIsd0NBQXdDQztRQUM1QyxJQUFJLENBQUMsSUFBSSxDQUFDWCxTQUFTLENBQUM4QixNQUFNLElBQUksQ0FBRSxFQUFDbkIsb0NBQW9DLElBQUksQ0FBQ1gsU0FBUyxDQUFDTyxPQUFPLENBQUNVLFVBQVUsS0FBSyxPQUFPLEtBQUssSUFBSSxDQUFDUCx5Q0FBeUNDLGtDQUFrQ2UsSUFBSSxLQUFLLE9BQU8sS0FBSyxJQUFJaEIsdUNBQXVDMkIsT0FBTyxDQUFDQyxRQUFRLENBQUNSLE9BQU0sR0FBSTtZQUM5UixNQUFNLElBQUlTLFVBQVUsQ0FBQyw4Q0FBOEMsRUFBRVQsT0FBTyxDQUFDLENBQUM7UUFDbEY7UUFDQSxJQUFJLENBQUM5QixTQUFTLENBQUM4QixNQUFNLEdBQUdBO0lBQzVCO0lBQ0EsSUFBSUYsZ0JBQWdCO1FBQ2hCLE9BQU8sSUFBSSxDQUFDNUIsU0FBUyxDQUFDNEIsYUFBYTtJQUN2QztJQUNBLElBQUlILGVBQWU7UUFDZixPQUFPLElBQUksQ0FBQ3pCLFNBQVMsQ0FBQ3lCLFlBQVk7SUFDdEM7SUFDQSxJQUFJZSxlQUFlO1FBQ2YsT0FBTyxJQUFJLENBQUN4QyxTQUFTLENBQUNMLEdBQUcsQ0FBQzZDLFlBQVk7SUFDMUM7SUFDQSxJQUFJQyxPQUFPO1FBQ1AsT0FBTyxJQUFJLENBQUN6QyxTQUFTLENBQUNMLEdBQUcsQ0FBQzhDLElBQUk7SUFDbEM7SUFDQSxJQUFJQSxLQUFLQyxLQUFLLEVBQUU7UUFDWixJQUFJLENBQUMxQyxTQUFTLENBQUNMLEdBQUcsQ0FBQzhDLElBQUksR0FBR0M7SUFDOUI7SUFDQSxJQUFJbkIsV0FBVztRQUNYLE9BQU8sSUFBSSxDQUFDdkIsU0FBUyxDQUFDTCxHQUFHLENBQUM0QixRQUFRO0lBQ3RDO0lBQ0EsSUFBSUEsU0FBU21CLEtBQUssRUFBRTtRQUNoQixJQUFJLENBQUMxQyxTQUFTLENBQUNMLEdBQUcsQ0FBQzRCLFFBQVEsR0FBR21CO0lBQ2xDO0lBQ0EsSUFBSUMsT0FBTztRQUNQLE9BQU8sSUFBSSxDQUFDM0MsU0FBUyxDQUFDTCxHQUFHLENBQUNnRCxJQUFJO0lBQ2xDO0lBQ0EsSUFBSUEsS0FBS0QsS0FBSyxFQUFFO1FBQ1osSUFBSSxDQUFDMUMsU0FBUyxDQUFDTCxHQUFHLENBQUNnRCxJQUFJLEdBQUdEO0lBQzlCO0lBQ0EsSUFBSUUsV0FBVztRQUNYLE9BQU8sSUFBSSxDQUFDNUMsU0FBUyxDQUFDTCxHQUFHLENBQUNpRCxRQUFRO0lBQ3RDO0lBQ0EsSUFBSUEsU0FBU0YsS0FBSyxFQUFFO1FBQ2hCLElBQUksQ0FBQzFDLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDaUQsUUFBUSxHQUFHRjtJQUNsQztJQUNBLElBQUlHLE9BQU87UUFDUCxNQUFNN0IsV0FBVyxJQUFJLENBQUNnQixjQUFjO1FBQ3BDLE1BQU1JLFNBQVMsSUFBSSxDQUFDRCxZQUFZO1FBQ2hDLE9BQU8sQ0FBQyxFQUFFLElBQUksQ0FBQ1MsUUFBUSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUNILElBQUksQ0FBQyxFQUFFekIsU0FBUyxFQUFFb0IsT0FBTyxFQUFFLElBQUksQ0FBQ1UsSUFBSSxDQUFDLENBQUM7SUFDM0U7SUFDQSxJQUFJRCxLQUFLbEQsR0FBRyxFQUFFO1FBQ1YsSUFBSSxDQUFDSyxTQUFTLENBQUNMLEdBQUcsR0FBR0QsU0FBU0M7UUFDOUIsSUFBSSxDQUFDYyxPQUFPO0lBQ2hCO0lBQ0EsSUFBSXNDLFNBQVM7UUFDVCxPQUFPLElBQUksQ0FBQy9DLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDb0QsTUFBTTtJQUNwQztJQUNBLElBQUkvQixXQUFXO1FBQ1gsT0FBTyxJQUFJLENBQUNoQixTQUFTLENBQUNMLEdBQUcsQ0FBQ3FCLFFBQVE7SUFDdEM7SUFDQSxJQUFJQSxTQUFTMEIsS0FBSyxFQUFFO1FBQ2hCLElBQUksQ0FBQzFDLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDcUIsUUFBUSxHQUFHMEI7SUFDbEM7SUFDQSxJQUFJSSxPQUFPO1FBQ1AsT0FBTyxJQUFJLENBQUM5QyxTQUFTLENBQUNMLEdBQUcsQ0FBQ21ELElBQUk7SUFDbEM7SUFDQSxJQUFJQSxLQUFLSixLQUFLLEVBQUU7UUFDWixJQUFJLENBQUMxQyxTQUFTLENBQUNMLEdBQUcsQ0FBQ21ELElBQUksR0FBR0o7SUFDOUI7SUFDQSxJQUFJTixTQUFTO1FBQ1QsT0FBTyxJQUFJLENBQUNwQyxTQUFTLENBQUNMLEdBQUcsQ0FBQ3lDLE1BQU07SUFDcEM7SUFDQSxJQUFJQSxPQUFPTSxLQUFLLEVBQUU7UUFDZCxJQUFJLENBQUMxQyxTQUFTLENBQUNMLEdBQUcsQ0FBQ3lDLE1BQU0sR0FBR007SUFDaEM7SUFDQSxJQUFJTSxXQUFXO1FBQ1gsT0FBTyxJQUFJLENBQUNoRCxTQUFTLENBQUNMLEdBQUcsQ0FBQ3FELFFBQVE7SUFDdEM7SUFDQSxJQUFJQSxTQUFTTixLQUFLLEVBQUU7UUFDaEIsSUFBSSxDQUFDMUMsU0FBUyxDQUFDTCxHQUFHLENBQUNxRCxRQUFRLEdBQUdOO0lBQ2xDO0lBQ0EsSUFBSU8sV0FBVztRQUNYLE9BQU8sSUFBSSxDQUFDakQsU0FBUyxDQUFDTCxHQUFHLENBQUNzRCxRQUFRO0lBQ3RDO0lBQ0EsSUFBSUEsU0FBU1AsS0FBSyxFQUFFO1FBQ2hCLElBQUksQ0FBQzFDLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDc0QsUUFBUSxHQUFHUDtJQUNsQztJQUNBLElBQUlsQyxXQUFXO1FBQ1gsT0FBTyxJQUFJLENBQUNSLFNBQVMsQ0FBQ1EsUUFBUTtJQUNsQztJQUNBLElBQUlBLFNBQVNrQyxLQUFLLEVBQUU7UUFDaEIsSUFBSSxDQUFDMUMsU0FBUyxDQUFDUSxRQUFRLEdBQUdrQyxNQUFNUSxVQUFVLENBQUMsT0FBT1IsUUFBUSxDQUFDLENBQUMsRUFBRUEsTUFBTSxDQUFDO0lBQ3pFO0lBQ0FTLFdBQVc7UUFDUCxPQUFPLElBQUksQ0FBQ04sSUFBSTtJQUNwQjtJQUNBTyxTQUFTO1FBQ0wsT0FBTyxJQUFJLENBQUNQLElBQUk7SUFDcEI7SUFDQSxDQUFDNUMsT0FBT29ELEdBQUcsQ0FBQywrQkFBK0IsR0FBRztRQUMxQyxPQUFPO1lBQ0hSLE1BQU0sSUFBSSxDQUFDQSxJQUFJO1lBQ2ZFLFFBQVEsSUFBSSxDQUFDQSxNQUFNO1lBQ25CSCxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2QkssVUFBVSxJQUFJLENBQUNBLFFBQVE7WUFDdkJELFVBQVUsSUFBSSxDQUFDQSxRQUFRO1lBQ3ZCUCxNQUFNLElBQUksQ0FBQ0EsSUFBSTtZQUNmbEIsVUFBVSxJQUFJLENBQUNBLFFBQVE7WUFDdkJvQixNQUFNLElBQUksQ0FBQ0EsSUFBSTtZQUNmM0IsVUFBVSxJQUFJLENBQUNBLFFBQVE7WUFDdkJvQixRQUFRLElBQUksQ0FBQ0EsTUFBTTtZQUNuQkksY0FBYyxJQUFJLENBQUNBLFlBQVk7WUFDL0JNLE1BQU0sSUFBSSxDQUFDQSxJQUFJO1FBQ25CO0lBQ0o7SUFDQVEsUUFBUTtRQUNKLE9BQU8sSUFBSXBELFFBQVFKLE9BQU8sSUFBSSxHQUFHLElBQUksQ0FBQ0UsU0FBUyxDQUFDTyxPQUFPO0lBQzNEO0FBQ0osRUFFQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvbmV4dC11cmwuanM/YjFjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXRlY3REb21haW5Mb2NhbGUgfSBmcm9tIFwiLi4vLi4vc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlXCI7XG5pbXBvcnQgeyBmb3JtYXROZXh0UGF0aG5hbWVJbmZvIH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm9cIjtcbmltcG9ydCB7IGdldEhvc3RuYW1lIH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lXCI7XG5pbXBvcnQgeyBnZXROZXh0UGF0aG5hbWVJbmZvIH0gZnJvbSBcIi4uLy4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm9cIjtcbmNvbnN0IFJFR0VYX0xPQ0FMSE9TVF9IT1NUTkFNRSA9IC8oPyFeaHR0cHM/OlxcL1xcLykoMTI3KD86XFwuKD86MjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSl7M318XFxbOjoxXFxdfGxvY2FsaG9zdCkvO1xuZnVuY3Rpb24gcGFyc2VVUkwodXJsLCBiYXNlKSB7XG4gICAgcmV0dXJuIG5ldyBVUkwoU3RyaW5nKHVybCkucmVwbGFjZShSRUdFWF9MT0NBTEhPU1RfSE9TVE5BTUUsIFwibG9jYWxob3N0XCIpLCBiYXNlICYmIFN0cmluZyhiYXNlKS5yZXBsYWNlKFJFR0VYX0xPQ0FMSE9TVF9IT1NUTkFNRSwgXCJsb2NhbGhvc3RcIikpO1xufVxuY29uc3QgSW50ZXJuYWwgPSBTeW1ib2woXCJOZXh0VVJMSW50ZXJuYWxcIik7XG5leHBvcnQgY2xhc3MgTmV4dFVSTCB7XG4gICAgY29uc3RydWN0b3IoaW5wdXQsIGJhc2VPck9wdHMsIG9wdHMpe1xuICAgICAgICBsZXQgYmFzZTtcbiAgICAgICAgbGV0IG9wdGlvbnM7XG4gICAgICAgIGlmICh0eXBlb2YgYmFzZU9yT3B0cyA9PT0gXCJvYmplY3RcIiAmJiBcInBhdGhuYW1lXCIgaW4gYmFzZU9yT3B0cyB8fCB0eXBlb2YgYmFzZU9yT3B0cyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgYmFzZSA9IGJhc2VPck9wdHM7XG4gICAgICAgICAgICBvcHRpb25zID0gb3B0cyB8fCB7fTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9wdGlvbnMgPSBvcHRzIHx8IGJhc2VPck9wdHMgfHwge307XG4gICAgICAgIH1cbiAgICAgICAgdGhpc1tJbnRlcm5hbF0gPSB7XG4gICAgICAgICAgICB1cmw6IHBhcnNlVVJMKGlucHV0LCBiYXNlID8/IG9wdGlvbnMuYmFzZSksXG4gICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zLFxuICAgICAgICAgICAgYmFzZVBhdGg6IFwiXCJcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5hbmFseXplKCk7XG4gICAgfVxuICAgIGFuYWx5emUoKSB7XG4gICAgICAgIHZhciBfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWdfaTE4biwgX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnLCBfdGhpc19JbnRlcm5hbF9kb21haW5Mb2NhbGUsIF90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZ19pMThuMSwgX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnMTtcbiAgICAgICAgY29uc3QgaW5mbyA9IGdldE5leHRQYXRobmFtZUluZm8odGhpc1tJbnRlcm5hbF0udXJsLnBhdGhuYW1lLCB7XG4gICAgICAgICAgICBuZXh0Q29uZmlnOiB0aGlzW0ludGVybmFsXS5vcHRpb25zLm5leHRDb25maWcsXG4gICAgICAgICAgICBwYXJzZURhdGE6ICFwcm9jZXNzLmVudi5fX05FWFRfTk9fTUlERExFV0FSRV9VUkxfTk9STUFMSVpFLFxuICAgICAgICAgICAgaTE4blByb3ZpZGVyOiB0aGlzW0ludGVybmFsXS5vcHRpb25zLmkxOG5Qcm92aWRlclxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgaG9zdG5hbWUgPSBnZXRIb3N0bmFtZSh0aGlzW0ludGVybmFsXS51cmwsIHRoaXNbSW50ZXJuYWxdLm9wdGlvbnMuaGVhZGVycyk7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmRvbWFpbkxvY2FsZSA9IHRoaXNbSW50ZXJuYWxdLm9wdGlvbnMuaTE4blByb3ZpZGVyID8gdGhpc1tJbnRlcm5hbF0ub3B0aW9ucy5pMThuUHJvdmlkZXIuZGV0ZWN0RG9tYWluTG9jYWxlKGhvc3RuYW1lKSA6IGRldGVjdERvbWFpbkxvY2FsZSgoX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnID0gdGhpc1tJbnRlcm5hbF0ub3B0aW9ucy5uZXh0Q29uZmlnKSA9PSBudWxsID8gdm9pZCAwIDogKF90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZ19pMThuID0gX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnLmkxOG4pID09IG51bGwgPyB2b2lkIDAgOiBfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWdfaTE4bi5kb21haW5zLCBob3N0bmFtZSk7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRMb2NhbGUgPSAoKF90aGlzX0ludGVybmFsX2RvbWFpbkxvY2FsZSA9IHRoaXNbSW50ZXJuYWxdLmRvbWFpbkxvY2FsZSkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzX0ludGVybmFsX2RvbWFpbkxvY2FsZS5kZWZhdWx0TG9jYWxlKSB8fCAoKF90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZzEgPSB0aGlzW0ludGVybmFsXS5vcHRpb25zLm5leHRDb25maWcpID09IG51bGwgPyB2b2lkIDAgOiAoX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnX2kxOG4xID0gX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnMS5pMThuKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnX2kxOG4xLmRlZmF1bHRMb2NhbGUpO1xuICAgICAgICB0aGlzW0ludGVybmFsXS51cmwucGF0aG5hbWUgPSBpbmZvLnBhdGhuYW1lO1xuICAgICAgICB0aGlzW0ludGVybmFsXS5kZWZhdWx0TG9jYWxlID0gZGVmYXVsdExvY2FsZTtcbiAgICAgICAgdGhpc1tJbnRlcm5hbF0uYmFzZVBhdGggPSBpbmZvLmJhc2VQYXRoID8/IFwiXCI7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmJ1aWxkSWQgPSBpbmZvLmJ1aWxkSWQ7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmxvY2FsZSA9IGluZm8ubG9jYWxlID8/IGRlZmF1bHRMb2NhbGU7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnRyYWlsaW5nU2xhc2ggPSBpbmZvLnRyYWlsaW5nU2xhc2g7XG4gICAgfVxuICAgIGZvcm1hdFBhdGhuYW1lKCkge1xuICAgICAgICByZXR1cm4gZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyh7XG4gICAgICAgICAgICBiYXNlUGF0aDogdGhpc1tJbnRlcm5hbF0uYmFzZVBhdGgsXG4gICAgICAgICAgICBidWlsZElkOiB0aGlzW0ludGVybmFsXS5idWlsZElkLFxuICAgICAgICAgICAgZGVmYXVsdExvY2FsZTogIXRoaXNbSW50ZXJuYWxdLm9wdGlvbnMuZm9yY2VMb2NhbGUgPyB0aGlzW0ludGVybmFsXS5kZWZhdWx0TG9jYWxlIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgbG9jYWxlOiB0aGlzW0ludGVybmFsXS5sb2NhbGUsXG4gICAgICAgICAgICBwYXRobmFtZTogdGhpc1tJbnRlcm5hbF0udXJsLnBhdGhuYW1lLFxuICAgICAgICAgICAgdHJhaWxpbmdTbGFzaDogdGhpc1tJbnRlcm5hbF0udHJhaWxpbmdTbGFzaFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZm9ybWF0U2VhcmNoKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLnNlYXJjaDtcbiAgICB9XG4gICAgZ2V0IGJ1aWxkSWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0ludGVybmFsXS5idWlsZElkO1xuICAgIH1cbiAgICBzZXQgYnVpbGRJZChidWlsZElkKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmJ1aWxkSWQgPSBidWlsZElkO1xuICAgIH1cbiAgICBnZXQgbG9jYWxlKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0ubG9jYWxlID8/IFwiXCI7XG4gICAgfVxuICAgIHNldCBsb2NhbGUobG9jYWxlKSB7XG4gICAgICAgIHZhciBfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWdfaTE4biwgX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnO1xuICAgICAgICBpZiAoIXRoaXNbSW50ZXJuYWxdLmxvY2FsZSB8fCAhKChfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWcgPSB0aGlzW0ludGVybmFsXS5vcHRpb25zLm5leHRDb25maWcpID09IG51bGwgPyB2b2lkIDAgOiAoX3RoaXNfSW50ZXJuYWxfb3B0aW9uc19uZXh0Q29uZmlnX2kxOG4gPSBfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWcuaTE4bikgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZ19pMThuLmxvY2FsZXMuaW5jbHVkZXMobG9jYWxlKSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFRoZSBOZXh0VVJMIGNvbmZpZ3VyYXRpb24gaW5jbHVkZXMgbm8gbG9jYWxlIFwiJHtsb2NhbGV9XCJgKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzW0ludGVybmFsXS5sb2NhbGUgPSBsb2NhbGU7XG4gICAgfVxuICAgIGdldCBkZWZhdWx0TG9jYWxlKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0uZGVmYXVsdExvY2FsZTtcbiAgICB9XG4gICAgZ2V0IGRvbWFpbkxvY2FsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLmRvbWFpbkxvY2FsZTtcbiAgICB9XG4gICAgZ2V0IHNlYXJjaFBhcmFtcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLnVybC5zZWFyY2hQYXJhbXM7XG4gICAgfVxuICAgIGdldCBob3N0KCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLmhvc3Q7XG4gICAgfVxuICAgIHNldCBob3N0KHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC5ob3N0ID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBob3N0bmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLnVybC5ob3N0bmFtZTtcbiAgICB9XG4gICAgc2V0IGhvc3RuYW1lKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC5ob3N0bmFtZSA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgcG9ydCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLnVybC5wb3J0O1xuICAgIH1cbiAgICBzZXQgcG9ydCh2YWx1ZSkge1xuICAgICAgICB0aGlzW0ludGVybmFsXS51cmwucG9ydCA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgcHJvdG9jb2woKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0ludGVybmFsXS51cmwucHJvdG9jb2w7XG4gICAgfVxuICAgIHNldCBwcm90b2NvbCh2YWx1ZSkge1xuICAgICAgICB0aGlzW0ludGVybmFsXS51cmwucHJvdG9jb2wgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IGhyZWYoKSB7XG4gICAgICAgIGNvbnN0IHBhdGhuYW1lID0gdGhpcy5mb3JtYXRQYXRobmFtZSgpO1xuICAgICAgICBjb25zdCBzZWFyY2ggPSB0aGlzLmZvcm1hdFNlYXJjaCgpO1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5wcm90b2NvbH0vLyR7dGhpcy5ob3N0fSR7cGF0aG5hbWV9JHtzZWFyY2h9JHt0aGlzLmhhc2h9YDtcbiAgICB9XG4gICAgc2V0IGhyZWYodXJsKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybCA9IHBhcnNlVVJMKHVybCk7XG4gICAgICAgIHRoaXMuYW5hbHl6ZSgpO1xuICAgIH1cbiAgICBnZXQgb3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLm9yaWdpbjtcbiAgICB9XG4gICAgZ2V0IHBhdGhuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLnBhdGhuYW1lO1xuICAgIH1cbiAgICBzZXQgcGF0aG5hbWUodmFsdWUpIHtcbiAgICAgICAgdGhpc1tJbnRlcm5hbF0udXJsLnBhdGhuYW1lID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBoYXNoKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLmhhc2g7XG4gICAgfVxuICAgIHNldCBoYXNoKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC5oYXNoID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBzZWFyY2goKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0ludGVybmFsXS51cmwuc2VhcmNoO1xuICAgIH1cbiAgICBzZXQgc2VhcmNoKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC5zZWFyY2ggPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0IHBhc3N3b3JkKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJbnRlcm5hbF0udXJsLnBhc3N3b3JkO1xuICAgIH1cbiAgICBzZXQgcGFzc3dvcmQodmFsdWUpIHtcbiAgICAgICAgdGhpc1tJbnRlcm5hbF0udXJsLnBhc3N3b3JkID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCB1c2VybmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSW50ZXJuYWxdLnVybC51c2VybmFtZTtcbiAgICB9XG4gICAgc2V0IHVzZXJuYW1lKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLnVybC51c2VybmFtZSA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgYmFzZVBhdGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0ludGVybmFsXS5iYXNlUGF0aDtcbiAgICB9XG4gICAgc2V0IGJhc2VQYXRoKHZhbHVlKSB7XG4gICAgICAgIHRoaXNbSW50ZXJuYWxdLmJhc2VQYXRoID0gdmFsdWUuc3RhcnRzV2l0aChcIi9cIikgPyB2YWx1ZSA6IGAvJHt2YWx1ZX1gO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaHJlZjtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ocmVmO1xuICAgIH1cbiAgICBbU3ltYm9sLmZvcihcImVkZ2UtcnVudGltZS5pbnNwZWN0LmN1c3RvbVwiKV0oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBocmVmOiB0aGlzLmhyZWYsXG4gICAgICAgICAgICBvcmlnaW46IHRoaXMub3JpZ2luLFxuICAgICAgICAgICAgcHJvdG9jb2w6IHRoaXMucHJvdG9jb2wsXG4gICAgICAgICAgICB1c2VybmFtZTogdGhpcy51c2VybmFtZSxcbiAgICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLFxuICAgICAgICAgICAgaG9zdDogdGhpcy5ob3N0LFxuICAgICAgICAgICAgaG9zdG5hbWU6IHRoaXMuaG9zdG5hbWUsXG4gICAgICAgICAgICBwb3J0OiB0aGlzLnBvcnQsXG4gICAgICAgICAgICBwYXRobmFtZTogdGhpcy5wYXRobmFtZSxcbiAgICAgICAgICAgIHNlYXJjaDogdGhpcy5zZWFyY2gsXG4gICAgICAgICAgICBzZWFyY2hQYXJhbXM6IHRoaXMuc2VhcmNoUGFyYW1zLFxuICAgICAgICAgICAgaGFzaDogdGhpcy5oYXNoXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gbmV3IE5leHRVUkwoU3RyaW5nKHRoaXMpLCB0aGlzW0ludGVybmFsXS5vcHRpb25zKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5leHQtdXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJkZXRlY3REb21haW5Mb2NhbGUiLCJmb3JtYXROZXh0UGF0aG5hbWVJbmZvIiwiZ2V0SG9zdG5hbWUiLCJnZXROZXh0UGF0aG5hbWVJbmZvIiwiUkVHRVhfTE9DQUxIT1NUX0hPU1ROQU1FIiwicGFyc2VVUkwiLCJ1cmwiLCJiYXNlIiwiVVJMIiwiU3RyaW5nIiwicmVwbGFjZSIsIkludGVybmFsIiwiU3ltYm9sIiwiTmV4dFVSTCIsImNvbnN0cnVjdG9yIiwiaW5wdXQiLCJiYXNlT3JPcHRzIiwib3B0cyIsIm9wdGlvbnMiLCJiYXNlUGF0aCIsImFuYWx5emUiLCJfdGhpc19JbnRlcm5hbF9vcHRpb25zX25leHRDb25maWdfaTE4biIsIl90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZyIsIl90aGlzX0ludGVybmFsX2RvbWFpbkxvY2FsZSIsIl90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZ19pMThuMSIsIl90aGlzX0ludGVybmFsX29wdGlvbnNfbmV4dENvbmZpZzEiLCJpbmZvIiwicGF0aG5hbWUiLCJuZXh0Q29uZmlnIiwicGFyc2VEYXRhIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9OT19NSURETEVXQVJFX1VSTF9OT1JNQUxJWkUiLCJpMThuUHJvdmlkZXIiLCJob3N0bmFtZSIsImhlYWRlcnMiLCJkb21haW5Mb2NhbGUiLCJpMThuIiwiZG9tYWlucyIsImRlZmF1bHRMb2NhbGUiLCJidWlsZElkIiwibG9jYWxlIiwidHJhaWxpbmdTbGFzaCIsImZvcm1hdFBhdGhuYW1lIiwiZm9yY2VMb2NhbGUiLCJ1bmRlZmluZWQiLCJmb3JtYXRTZWFyY2giLCJzZWFyY2giLCJsb2NhbGVzIiwiaW5jbHVkZXMiLCJUeXBlRXJyb3IiLCJzZWFyY2hQYXJhbXMiLCJob3N0IiwidmFsdWUiLCJwb3J0IiwicHJvdG9jb2wiLCJocmVmIiwiaGFzaCIsIm9yaWdpbiIsInBhc3N3b3JkIiwidXNlcm5hbWUiLCJzdGFydHNXaXRoIiwidG9TdHJpbmciLCJ0b0pTT04iLCJmb3IiLCJjbG9uZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/next-url.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeadersAdapter: () => (/* binding */ HeadersAdapter),\n/* harmony export */   ReadonlyHeadersError: () => (/* binding */ ReadonlyHeadersError)\n/* harmony export */ });\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n/**\n * @internal\n */ class ReadonlyHeadersError extends Error {\n    constructor(){\n        super(\"Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers\");\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nclass HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === \"undefined\") return;\n                // If the original casing exists, return the value.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === \"undefined\") return false;\n                // If the original casing exists, return true.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === \"undefined\") return true;\n                // If the original casing exists, delete the property.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"append\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(\", \");\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === \"string\") {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== \"undefined\") return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== \"undefined\";\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectAdapter: () => (/* binding */ ReflectAdapter)\n/* harmony export */ });\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === \"function\") {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n} //# sourceMappingURL=reflect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVmbGVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7SUFDVCxPQUFPQyxJQUFJQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFO1FBQy9CLE1BQU1DLFFBQVFDLFFBQVFMLEdBQUcsQ0FBQ0MsUUFBUUMsTUFBTUM7UUFDeEMsSUFBSSxPQUFPQyxVQUFVLFlBQVk7WUFDN0IsT0FBT0EsTUFBTUUsSUFBSSxDQUFDTDtRQUN0QjtRQUNBLE9BQU9HO0lBQ1g7SUFDQSxPQUFPRyxJQUFJTixNQUFNLEVBQUVDLElBQUksRUFBRUUsS0FBSyxFQUFFRCxRQUFRLEVBQUU7UUFDdEMsT0FBT0UsUUFBUUUsR0FBRyxDQUFDTixRQUFRQyxNQUFNRSxPQUFPRDtJQUM1QztJQUNBLE9BQU9LLElBQUlQLE1BQU0sRUFBRUMsSUFBSSxFQUFFO1FBQ3JCLE9BQU9HLFFBQVFHLEdBQUcsQ0FBQ1AsUUFBUUM7SUFDL0I7SUFDQSxPQUFPTyxlQUFlUixNQUFNLEVBQUVDLElBQUksRUFBRTtRQUNoQyxPQUFPRyxRQUFRSSxjQUFjLENBQUNSLFFBQVFDO0lBQzFDO0FBQ0osRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVmbGVjdC5qcz81OTYwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBSZWZsZWN0QWRhcHRlciB7XG4gICAgc3RhdGljIGdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gUmVmbGVjdC5nZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcik7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmJpbmQodGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHN0YXRpYyBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgc3RhdGljIGhhcyh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuaGFzKHRhcmdldCwgcHJvcCk7XG4gICAgfVxuICAgIHN0YXRpYyBkZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZmxlY3QuanMubWFwIl0sIm5hbWVzIjpbIlJlZmxlY3RBZGFwdGVyIiwiZ2V0IiwidGFyZ2V0IiwicHJvcCIsInJlY2VpdmVyIiwidmFsdWUiLCJSZWZsZWN0IiwiYmluZCIsInNldCIsImhhcyIsImRlbGV0ZVByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutableRequestCookiesAdapter: () => (/* binding */ MutableRequestCookiesAdapter),\n/* harmony export */   ReadonlyRequestCookiesError: () => (/* binding */ ReadonlyRequestCookiesError),\n/* harmony export */   RequestCookiesAdapter: () => (/* binding */ RequestCookiesAdapter),\n/* harmony export */   appendMutableCookies: () => (/* binding */ appendMutableCookies),\n/* harmony export */   getModifiedCookieValues: () => (/* binding */ getModifiedCookieValues)\n/* harmony export */ });\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cookies */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n\n/**\n * @internal\n */ class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nclass RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"clear\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\nfunction getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nclass MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookes = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookes.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            var _fetch___nextGetStaticStore;\n            // TODO-APP: change method of getting staticGenerationAsyncStore\n            const staticGenerationAsyncStore = fetch.__nextGetStaticStore == null ? void 0 : (_fetch___nextGetStaticStore = fetch.__nextGetStaticStore.call(fetch)) == null ? void 0 : _fetch___nextGetStaticStore.getStore();\n            if (staticGenerationAsyncStore) {\n                staticGenerationAsyncStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookes.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        return new Proxy(responseCookes, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case \"delete\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case \"set\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                return target.set(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n} //# sourceMappingURL=request-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookies),\n/* harmony export */   ResponseCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"(middleware)/../../node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\");\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__);\n //# sourceMappingURL=cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJGLENBRTNGLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzPzExZWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgUmVxdWVzdENvb2tpZXMsIFJlc3BvbnNlQ29va2llcyB9IGZyb20gXCJuZXh0L2Rpc3QvY29tcGlsZWQvQGVkZ2UtcnVudGltZS9jb29raWVzXCI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvb2tpZXMuanMubWFwIl0sIm5hbWVzIjpbIlJlcXVlc3RDb29raWVzIiwiUmVzcG9uc2VDb29raWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextFetchEvent: () => (/* binding */ NextFetchEvent),\n/* harmony export */   waitUntilSymbol: () => (/* binding */ waitUntilSymbol)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error */ \"(middleware)/../../node_modules/next/dist/esm/server/web/error.js\");\n\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nconst waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){\n        this[waitUntilSymbol] = [];\n        this[passThroughSymbol] = false;\n    }\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nclass NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n} //# sourceMappingURL=fetch-event.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vZmV0Y2gtZXZlbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThDO0FBQzlDLE1BQU1DLGlCQUFpQkMsT0FBTztBQUM5QixNQUFNQyxvQkFBb0JELE9BQU87QUFDMUIsTUFBTUUsa0JBQWtCRixPQUFPLGFBQWE7QUFDbkQsTUFBTUc7SUFDRixxRUFBcUU7SUFDckVDLFlBQVlDLFFBQVEsQ0FBQztRQUNqQixJQUFJLENBQUNILGdCQUFnQixHQUFHLEVBQUU7UUFDMUIsSUFBSSxDQUFDRCxrQkFBa0IsR0FBRztJQUM5QjtJQUNBSyxZQUFZQyxRQUFRLEVBQUU7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQ1IsZUFBZSxFQUFFO1lBQ3ZCLElBQUksQ0FBQ0EsZUFBZSxHQUFHUyxRQUFRQyxPQUFPLENBQUNGO1FBQzNDO0lBQ0o7SUFDQUcseUJBQXlCO1FBQ3JCLElBQUksQ0FBQ1Qsa0JBQWtCLEdBQUc7SUFDOUI7SUFDQVUsVUFBVUMsT0FBTyxFQUFFO1FBQ2YsSUFBSSxDQUFDVixnQkFBZ0IsQ0FBQ1csSUFBSSxDQUFDRDtJQUMvQjtBQUNKO0FBQ08sTUFBTUUsdUJBQXVCWDtJQUNoQ0MsWUFBWVcsTUFBTSxDQUFDO1FBQ2YsS0FBSyxDQUFDQSxPQUFPQyxPQUFPO1FBQ3BCLElBQUksQ0FBQ0MsVUFBVSxHQUFHRixPQUFPRyxJQUFJO0lBQ2pDO0lBQ0E7Ozs7R0FJRCxHQUFHLElBQUlGLFVBQVU7UUFDWixNQUFNLElBQUlsQixzREFBa0JBLENBQUM7WUFDekJvQixNQUFNLElBQUksQ0FBQ0QsVUFBVTtRQUN6QjtJQUNKO0lBQ0E7Ozs7R0FJRCxHQUFHWCxjQUFjO1FBQ1osTUFBTSxJQUFJUixzREFBa0JBLENBQUM7WUFDekJvQixNQUFNLElBQUksQ0FBQ0QsVUFBVTtRQUN6QjtJQUNKO0FBQ0osRUFFQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vZmV0Y2gtZXZlbnQuanM/MjNhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlU2lnbmF0dXJlRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JcIjtcbmNvbnN0IHJlc3BvbnNlU3ltYm9sID0gU3ltYm9sKFwicmVzcG9uc2VcIik7XG5jb25zdCBwYXNzVGhyb3VnaFN5bWJvbCA9IFN5bWJvbChcInBhc3NUaHJvdWdoXCIpO1xuZXhwb3J0IGNvbnN0IHdhaXRVbnRpbFN5bWJvbCA9IFN5bWJvbChcIndhaXRVbnRpbFwiKTtcbmNsYXNzIEZldGNoRXZlbnQge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlbGVzcy1jb25zdHJ1Y3RvclxuICAgIGNvbnN0cnVjdG9yKF9yZXF1ZXN0KXtcbiAgICAgICAgdGhpc1t3YWl0VW50aWxTeW1ib2xdID0gW107XG4gICAgICAgIHRoaXNbcGFzc1Rocm91Z2hTeW1ib2xdID0gZmFsc2U7XG4gICAgfVxuICAgIHJlc3BvbmRXaXRoKHJlc3BvbnNlKSB7XG4gICAgICAgIGlmICghdGhpc1tyZXNwb25zZVN5bWJvbF0pIHtcbiAgICAgICAgICAgIHRoaXNbcmVzcG9uc2VTeW1ib2xdID0gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwYXNzVGhyb3VnaE9uRXhjZXB0aW9uKCkge1xuICAgICAgICB0aGlzW3Bhc3NUaHJvdWdoU3ltYm9sXSA9IHRydWU7XG4gICAgfVxuICAgIHdhaXRVbnRpbChwcm9taXNlKSB7XG4gICAgICAgIHRoaXNbd2FpdFVudGlsU3ltYm9sXS5wdXNoKHByb21pc2UpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBOZXh0RmV0Y2hFdmVudCBleHRlbmRzIEZldGNoRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKHBhcmFtcyl7XG4gICAgICAgIHN1cGVyKHBhcmFtcy5yZXF1ZXN0KTtcbiAgICAgICAgdGhpcy5zb3VyY2VQYWdlID0gcGFyYW1zLnBhZ2U7XG4gICAgfVxuICAgIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBUaGUgYHJlcXVlc3RgIGlzIG5vdyB0aGUgZmlyc3QgcGFyYW1ldGVyIGFuZCB0aGUgQVBJIGlzIG5vdyBhc3luYy5cbiAgICpcbiAgICogUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLW5ldy1zaWduYXR1cmVcbiAgICovIGdldCByZXF1ZXN0KCkge1xuICAgICAgICB0aHJvdyBuZXcgUGFnZVNpZ25hdHVyZUVycm9yKHtcbiAgICAgICAgICAgIHBhZ2U6IHRoaXMuc291cmNlUGFnZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFVzaW5nIGByZXNwb25kV2l0aGAgaXMgbm8gbG9uZ2VyIG5lZWRlZC5cbiAgICpcbiAgICogUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLW5ldy1zaWduYXR1cmVcbiAgICovIHJlc3BvbmRXaXRoKCkge1xuICAgICAgICB0aHJvdyBuZXcgUGFnZVNpZ25hdHVyZUVycm9yKHtcbiAgICAgICAgICAgIHBhZ2U6IHRoaXMuc291cmNlUGFnZVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLWV2ZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJQYWdlU2lnbmF0dXJlRXJyb3IiLCJyZXNwb25zZVN5bWJvbCIsIlN5bWJvbCIsInBhc3NUaHJvdWdoU3ltYm9sIiwid2FpdFVudGlsU3ltYm9sIiwiRmV0Y2hFdmVudCIsImNvbnN0cnVjdG9yIiwiX3JlcXVlc3QiLCJyZXNwb25kV2l0aCIsInJlc3BvbnNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJwYXNzVGhyb3VnaE9uRXhjZXB0aW9uIiwid2FpdFVudGlsIiwicHJvbWlzZSIsInB1c2giLCJOZXh0RmV0Y2hFdmVudCIsInBhcmFtcyIsInJlcXVlc3QiLCJzb3VyY2VQYWdlIiwicGFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/request.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/spec-extension/request.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNALS: () => (/* binding */ INTERNALS),\n/* harmony export */   NextRequest: () => (/* binding */ NextRequest)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/../../node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/../../node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error */ \"(middleware)/../../node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cookies */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\n\nconst INTERNALS = Symbol(\"internal request\");\nclass NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url);\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(url, {\n            headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            nextUrl,\n            url:  false ? 0 : nextUrl.toString()\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n} //# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBc0M7QUFDNEI7QUFDTjtBQUNqQjtBQUNwQyxNQUFNTSxZQUFZQyxPQUFPLG9CQUFvQjtBQUM3QyxNQUFNQyxvQkFBb0JDO0lBQzdCQyxZQUFZQyxLQUFLLEVBQUVDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDekIsTUFBTUMsTUFBTSxPQUFPRixVQUFVLFlBQVksU0FBU0EsUUFBUUEsTUFBTUUsR0FBRyxHQUFHQyxPQUFPSDtRQUM3RVQsbURBQVdBLENBQUNXO1FBQ1osSUFBSUYsaUJBQWlCRixTQUFTLEtBQUssQ0FBQ0UsT0FBT0M7YUFDdEMsS0FBSyxDQUFDQyxLQUFLRDtRQUNoQixNQUFNRyxVQUFVLElBQUlmLDhDQUFPQSxDQUFDYSxLQUFLO1lBQzdCRyxTQUFTZixpRUFBeUJBLENBQUMsSUFBSSxDQUFDZSxPQUFPO1lBQy9DQyxZQUFZTCxLQUFLSyxVQUFVO1FBQy9CO1FBQ0EsSUFBSSxDQUFDWCxVQUFVLEdBQUc7WUFDZFksU0FBUyxJQUFJYixvREFBY0EsQ0FBQyxJQUFJLENBQUNXLE9BQU87WUFDeENHLEtBQUtQLEtBQUtPLEdBQUcsSUFBSSxDQUFDO1lBQ2xCQyxJQUFJUixLQUFLUSxFQUFFO1lBQ1hMO1lBQ0FGLEtBQUtRLE1BQThDLEdBQUdSLENBQUdBLEdBQUdFLFFBQVFTLFFBQVE7UUFDaEY7SUFDSjtJQUNBLENBQUNqQixPQUFPa0IsR0FBRyxDQUFDLCtCQUErQixHQUFHO1FBQzFDLE9BQU87WUFDSFAsU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDckJDLEtBQUssSUFBSSxDQUFDQSxHQUFHO1lBQ2JDLElBQUksSUFBSSxDQUFDQSxFQUFFO1lBQ1hMLFNBQVMsSUFBSSxDQUFDQSxPQUFPO1lBQ3JCRixLQUFLLElBQUksQ0FBQ0EsR0FBRztZQUNiLGtDQUFrQztZQUNsQ2EsVUFBVSxJQUFJLENBQUNBLFFBQVE7WUFDdkJDLE9BQU8sSUFBSSxDQUFDQSxLQUFLO1lBQ2pCQyxhQUFhLElBQUksQ0FBQ0EsV0FBVztZQUM3QkMsYUFBYSxJQUFJLENBQUNBLFdBQVc7WUFDN0JiLFNBQVNjLE9BQU9DLFdBQVcsQ0FBQyxJQUFJLENBQUNmLE9BQU87WUFDeENnQixXQUFXLElBQUksQ0FBQ0EsU0FBUztZQUN6QkMsV0FBVyxJQUFJLENBQUNBLFNBQVM7WUFDekJDLFFBQVEsSUFBSSxDQUFDQSxNQUFNO1lBQ25CQyxNQUFNLElBQUksQ0FBQ0EsSUFBSTtZQUNmQyxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2QkMsVUFBVSxJQUFJLENBQUNBLFFBQVE7WUFDdkJDLGdCQUFnQixJQUFJLENBQUNBLGNBQWM7WUFDbkNDLFFBQVEsSUFBSSxDQUFDQSxNQUFNO1FBQ3ZCO0lBQ0o7SUFDQSxJQUFJckIsVUFBVTtRQUNWLE9BQU8sSUFBSSxDQUFDWixVQUFVLENBQUNZLE9BQU87SUFDbEM7SUFDQSxJQUFJQyxNQUFNO1FBQ04sT0FBTyxJQUFJLENBQUNiLFVBQVUsQ0FBQ2EsR0FBRztJQUM5QjtJQUNBLElBQUlDLEtBQUs7UUFDTCxPQUFPLElBQUksQ0FBQ2QsVUFBVSxDQUFDYyxFQUFFO0lBQzdCO0lBQ0EsSUFBSUwsVUFBVTtRQUNWLE9BQU8sSUFBSSxDQUFDVCxVQUFVLENBQUNTLE9BQU87SUFDbEM7SUFDQTs7OztHQUlELEdBQUcsSUFBSXlCLE9BQU87UUFDVCxNQUFNLElBQUlwQyxvREFBZ0JBO0lBQzlCO0lBQ0E7Ozs7R0FJRCxHQUFHLElBQUlxQyxLQUFLO1FBQ1AsTUFBTSxJQUFJdEMsa0RBQWNBO0lBQzVCO0lBQ0EsSUFBSVUsTUFBTTtRQUNOLE9BQU8sSUFBSSxDQUFDUCxVQUFVLENBQUNPLEdBQUc7SUFDOUI7QUFDSixFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0LmpzPzMwZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFVSTCB9IGZyb20gXCIuLi9uZXh0LXVybFwiO1xuaW1wb3J0IHsgdG9Ob2RlT3V0Z29pbmdIdHRwSGVhZGVycywgdmFsaWRhdGVVUkwgfSBmcm9tIFwiLi4vdXRpbHNcIjtcbmltcG9ydCB7IFJlbW92ZWRVQUVycm9yLCBSZW1vdmVkUGFnZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9yXCI7XG5pbXBvcnQgeyBSZXF1ZXN0Q29va2llcyB9IGZyb20gXCIuL2Nvb2tpZXNcIjtcbmV4cG9ydCBjb25zdCBJTlRFUk5BTFMgPSBTeW1ib2woXCJpbnRlcm5hbCByZXF1ZXN0XCIpO1xuZXhwb3J0IGNsYXNzIE5leHRSZXF1ZXN0IGV4dGVuZHMgUmVxdWVzdCB7XG4gICAgY29uc3RydWN0b3IoaW5wdXQsIGluaXQgPSB7fSl7XG4gICAgICAgIGNvbnN0IHVybCA9IHR5cGVvZiBpbnB1dCAhPT0gXCJzdHJpbmdcIiAmJiBcInVybFwiIGluIGlucHV0ID8gaW5wdXQudXJsIDogU3RyaW5nKGlucHV0KTtcbiAgICAgICAgdmFsaWRhdGVVUkwodXJsKTtcbiAgICAgICAgaWYgKGlucHV0IGluc3RhbmNlb2YgUmVxdWVzdCkgc3VwZXIoaW5wdXQsIGluaXQpO1xuICAgICAgICBlbHNlIHN1cGVyKHVybCwgaW5pdCk7XG4gICAgICAgIGNvbnN0IG5leHRVcmwgPSBuZXcgTmV4dFVSTCh1cmwsIHtcbiAgICAgICAgICAgIGhlYWRlcnM6IHRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnModGhpcy5oZWFkZXJzKSxcbiAgICAgICAgICAgIG5leHRDb25maWc6IGluaXQubmV4dENvbmZpZ1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpc1tJTlRFUk5BTFNdID0ge1xuICAgICAgICAgICAgY29va2llczogbmV3IFJlcXVlc3RDb29raWVzKHRoaXMuaGVhZGVycyksXG4gICAgICAgICAgICBnZW86IGluaXQuZ2VvIHx8IHt9LFxuICAgICAgICAgICAgaXA6IGluaXQuaXAsXG4gICAgICAgICAgICBuZXh0VXJsLFxuICAgICAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5fX05FWFRfTk9fTUlERExFV0FSRV9VUkxfTk9STUFMSVpFID8gdXJsIDogbmV4dFVybC50b1N0cmluZygpXG4gICAgICAgIH07XG4gICAgfVxuICAgIFtTeW1ib2wuZm9yKFwiZWRnZS1ydW50aW1lLmluc3BlY3QuY3VzdG9tXCIpXSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNvb2tpZXM6IHRoaXMuY29va2llcyxcbiAgICAgICAgICAgIGdlbzogdGhpcy5nZW8sXG4gICAgICAgICAgICBpcDogdGhpcy5pcCxcbiAgICAgICAgICAgIG5leHRVcmw6IHRoaXMubmV4dFVybCxcbiAgICAgICAgICAgIHVybDogdGhpcy51cmwsXG4gICAgICAgICAgICAvLyByZXN0IG9mIHByb3BzIGNvbWUgZnJvbSBSZXF1ZXN0XG4gICAgICAgICAgICBib2R5VXNlZDogdGhpcy5ib2R5VXNlZCxcbiAgICAgICAgICAgIGNhY2hlOiB0aGlzLmNhY2hlLFxuICAgICAgICAgICAgY3JlZGVudGlhbHM6IHRoaXMuY3JlZGVudGlhbHMsXG4gICAgICAgICAgICBkZXN0aW5hdGlvbjogdGhpcy5kZXN0aW5hdGlvbixcbiAgICAgICAgICAgIGhlYWRlcnM6IE9iamVjdC5mcm9tRW50cmllcyh0aGlzLmhlYWRlcnMpLFxuICAgICAgICAgICAgaW50ZWdyaXR5OiB0aGlzLmludGVncml0eSxcbiAgICAgICAgICAgIGtlZXBhbGl2ZTogdGhpcy5rZWVwYWxpdmUsXG4gICAgICAgICAgICBtZXRob2Q6IHRoaXMubWV0aG9kLFxuICAgICAgICAgICAgbW9kZTogdGhpcy5tb2RlLFxuICAgICAgICAgICAgcmVkaXJlY3Q6IHRoaXMucmVkaXJlY3QsXG4gICAgICAgICAgICByZWZlcnJlcjogdGhpcy5yZWZlcnJlcixcbiAgICAgICAgICAgIHJlZmVycmVyUG9saWN5OiB0aGlzLnJlZmVycmVyUG9saWN5LFxuICAgICAgICAgICAgc2lnbmFsOiB0aGlzLnNpZ25hbFxuICAgICAgICB9O1xuICAgIH1cbiAgICBnZXQgY29va2llcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5jb29raWVzO1xuICAgIH1cbiAgICBnZXQgZ2VvKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmdlbztcbiAgICB9XG4gICAgZ2V0IGlwKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmlwO1xuICAgIH1cbiAgICBnZXQgbmV4dFVybCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5uZXh0VXJsO1xuICAgIH1cbiAgICAvKipcbiAgICogQGRlcHJlY2F0ZWRcbiAgICogYHBhZ2VgIGhhcyBiZWVuIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIGBVUkxQYXR0ZXJuYC5cbiAgICogUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLXJlcXVlc3QtcGFnZVxuICAgKi8gZ2V0IHBhZ2UoKSB7XG4gICAgICAgIHRocm93IG5ldyBSZW1vdmVkUGFnZUVycm9yKCk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBAZGVwcmVjYXRlZFxuICAgKiBgdWFgIGhhcyBiZWVuIHJlbW92ZWQgaW4gZmF2b3VyIG9mIFxcYHVzZXJBZ2VudFxcYCBmdW5jdGlvbi5cbiAgICogUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLXBhcnNlLXVzZXItYWdlbnRcbiAgICovIGdldCB1YSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlbW92ZWRVQUVycm9yKCk7XG4gICAgfVxuICAgIGdldCB1cmwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10udXJsO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC5qcy5tYXAiXSwibmFtZXMiOlsiTmV4dFVSTCIsInRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMiLCJ2YWxpZGF0ZVVSTCIsIlJlbW92ZWRVQUVycm9yIiwiUmVtb3ZlZFBhZ2VFcnJvciIsIlJlcXVlc3RDb29raWVzIiwiSU5URVJOQUxTIiwiU3ltYm9sIiwiTmV4dFJlcXVlc3QiLCJSZXF1ZXN0IiwiY29uc3RydWN0b3IiLCJpbnB1dCIsImluaXQiLCJ1cmwiLCJTdHJpbmciLCJuZXh0VXJsIiwiaGVhZGVycyIsIm5leHRDb25maWciLCJjb29raWVzIiwiZ2VvIiwiaXAiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX05PX01JRERMRVdBUkVfVVJMX05PUk1BTElaRSIsInRvU3RyaW5nIiwiZm9yIiwiYm9keVVzZWQiLCJjYWNoZSIsImNyZWRlbnRpYWxzIiwiZGVzdGluYXRpb24iLCJPYmplY3QiLCJmcm9tRW50cmllcyIsImludGVncml0eSIsImtlZXBhbGl2ZSIsIm1ldGhvZCIsIm1vZGUiLCJyZWRpcmVjdCIsInJlZmVycmVyIiwicmVmZXJyZXJQb2xpY3kiLCJzaWduYWwiLCJwYWdlIiwidWEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/request.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/response.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/spec-extension/response.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextResponse: () => (/* binding */ NextResponse)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/../../node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/../../node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cookies */ \"(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nclass NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_2__.ResponseCookies(this.headers),\n            url: init.url ? new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(init.url, {\n                headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n} //# sourceMappingURL=response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/spec-extension/response.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/server/web/utils.js":
/*!************************************************************!*\
  !*** ../../node_modules/next/dist/esm/server/web/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromNodeOutgoingHttpHeaders: () => (/* binding */ fromNodeOutgoingHttpHeaders),\n/* harmony export */   splitCookiesString: () => (/* binding */ splitCookiesString),\n/* harmony export */   toNodeOutgoingHttpHeaders: () => (/* binding */ toNodeOutgoingHttpHeaders),\n/* harmony export */   validateURL: () => (/* binding */ validateURL)\n/* harmony export */ });\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === \"undefined\") continue;\n            if (typeof v === \"number\") {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === \"set-cookie\") {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztDQVFDLEdBQVUsU0FBU0EsNEJBQTRCQyxXQUFXO0lBQ3ZELE1BQU1DLFVBQVUsSUFBSUM7SUFDcEIsS0FBSyxJQUFJLENBQUNDLEtBQUtDLE1BQU0sSUFBSUMsT0FBT0MsT0FBTyxDQUFDTixhQUFhO1FBQ2pELE1BQU1PLFNBQVNDLE1BQU1DLE9BQU8sQ0FBQ0wsU0FBU0EsUUFBUTtZQUMxQ0E7U0FDSDtRQUNELEtBQUssSUFBSU0sS0FBS0gsT0FBTztZQUNqQixJQUFJLE9BQU9HLE1BQU0sYUFBYTtZQUM5QixJQUFJLE9BQU9BLE1BQU0sVUFBVTtnQkFDdkJBLElBQUlBLEVBQUVDLFFBQVE7WUFDbEI7WUFDQVYsUUFBUVcsTUFBTSxDQUFDVCxLQUFLTztRQUN4QjtJQUNKO0lBQ0EsT0FBT1Q7QUFDWDtBQUNBOzs7Ozs7Ozs7QUFTQSxHQUFVLFNBQVNZLG1CQUFtQkMsYUFBYTtJQUMvQyxJQUFJQyxpQkFBaUIsRUFBRTtJQUN2QixJQUFJQyxNQUFNO0lBQ1YsSUFBSUM7SUFDSixJQUFJQztJQUNKLElBQUlDO0lBQ0osSUFBSUM7SUFDSixJQUFJQztJQUNKLFNBQVNDO1FBQ0wsTUFBTU4sTUFBTUYsY0FBY1MsTUFBTSxJQUFJLEtBQUtDLElBQUksQ0FBQ1YsY0FBY1csTUFBTSxDQUFDVCxNQUFNO1lBQ3JFQSxPQUFPO1FBQ1g7UUFDQSxPQUFPQSxNQUFNRixjQUFjUyxNQUFNO0lBQ3JDO0lBQ0EsU0FBU0c7UUFDTFIsS0FBS0osY0FBY1csTUFBTSxDQUFDVDtRQUMxQixPQUFPRSxPQUFPLE9BQU9BLE9BQU8sT0FBT0EsT0FBTztJQUM5QztJQUNBLE1BQU1GLE1BQU1GLGNBQWNTLE1BQU0sQ0FBQztRQUM3Qk4sUUFBUUQ7UUFDUkssd0JBQXdCO1FBQ3hCLE1BQU1DLGlCQUFpQjtZQUNuQkosS0FBS0osY0FBY1csTUFBTSxDQUFDVDtZQUMxQixJQUFJRSxPQUFPLEtBQUs7Z0JBQ1osdUVBQXVFO2dCQUN2RUMsWUFBWUg7Z0JBQ1pBLE9BQU87Z0JBQ1BNO2dCQUNBRixZQUFZSjtnQkFDWixNQUFNQSxNQUFNRixjQUFjUyxNQUFNLElBQUlHLGlCQUFpQjtvQkFDakRWLE9BQU87Z0JBQ1g7Z0JBQ0EsOEJBQThCO2dCQUM5QixJQUFJQSxNQUFNRixjQUFjUyxNQUFNLElBQUlULGNBQWNXLE1BQU0sQ0FBQ1QsU0FBUyxLQUFLO29CQUNqRSw2QkFBNkI7b0JBQzdCSyx3QkFBd0I7b0JBQ3hCLDJEQUEyRDtvQkFDM0RMLE1BQU1JO29CQUNOTCxlQUFlWSxJQUFJLENBQUNiLGNBQWNjLFNBQVMsQ0FBQ1gsT0FBT0U7b0JBQ25ERixRQUFRRDtnQkFDWixPQUFPO29CQUNILHVDQUF1QztvQkFDdkMsOEJBQThCO29CQUM5QkEsTUFBTUcsWUFBWTtnQkFDdEI7WUFDSixPQUFPO2dCQUNISCxPQUFPO1lBQ1g7UUFDSjtRQUNBLElBQUksQ0FBQ0sseUJBQXlCTCxPQUFPRixjQUFjUyxNQUFNLEVBQUU7WUFDdkRSLGVBQWVZLElBQUksQ0FBQ2IsY0FBY2MsU0FBUyxDQUFDWCxPQUFPSCxjQUFjUyxNQUFNO1FBQzNFO0lBQ0o7SUFDQSxPQUFPUjtBQUNYO0FBQ0E7Ozs7OztDQU1DLEdBQVUsU0FBU2MsMEJBQTBCNUIsT0FBTztJQUNqRCxNQUFNRCxjQUFjLENBQUM7SUFDckIsTUFBTThCLFVBQVUsRUFBRTtJQUNsQixJQUFJN0IsU0FBUztRQUNULEtBQUssTUFBTSxDQUFDRSxLQUFLQyxNQUFNLElBQUlILFFBQVFLLE9BQU8sR0FBRztZQUN6QyxJQUFJSCxJQUFJNEIsV0FBVyxPQUFPLGNBQWM7Z0JBQ3BDLG1FQUFtRTtnQkFDbkUsa0VBQWtFO2dCQUNsRSxnQ0FBZ0M7Z0JBQ2hDRCxRQUFRSCxJQUFJLElBQUlkLG1CQUFtQlQ7Z0JBQ25DSixXQUFXLENBQUNHLElBQUksR0FBRzJCLFFBQVFQLE1BQU0sS0FBSyxJQUFJTyxPQUFPLENBQUMsRUFBRSxHQUFHQTtZQUMzRCxPQUFPO2dCQUNIOUIsV0FBVyxDQUFDRyxJQUFJLEdBQUdDO1lBQ3ZCO1FBQ0o7SUFDSjtJQUNBLE9BQU9KO0FBQ1g7QUFDQTs7Q0FFQyxHQUFVLFNBQVNnQyxZQUFZQyxHQUFHO0lBQy9CLElBQUk7UUFDQSxPQUFPQyxPQUFPLElBQUlDLElBQUlELE9BQU9EO0lBQ2pDLEVBQUUsT0FBT0csT0FBTztRQUNaLE1BQU0sSUFBSUMsTUFBTSxDQUFDLGtCQUFrQixFQUFFSCxPQUFPRCxLQUFLLDRGQUE0RixDQUFDLEVBQUU7WUFDNUlLLE9BQU9GO1FBQ1g7SUFDSjtBQUNKLEVBRUEsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3V0aWxzLmpzP2ZlMTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb252ZXJ0cyBhIE5vZGUuanMgSW5jb21pbmdIdHRwSGVhZGVycyBvYmplY3QgdG8gYSBIZWFkZXJzIG9iamVjdC4gQW55XG4gKiBoZWFkZXJzIHdpdGggbXVsdGlwbGUgdmFsdWVzIHdpbGwgYmUgam9pbmVkIHdpdGggYSBjb21tYSBhbmQgc3BhY2UuIEFueVxuICogaGVhZGVycyB0aGF0IGhhdmUgYW4gdW5kZWZpbmVkIHZhbHVlIHdpbGwgYmUgaWdub3JlZCBhbmQgb3RoZXJzIHdpbGwgYmVcbiAqIGNvZXJjZWQgdG8gc3RyaW5ncy5cbiAqXG4gKiBAcGFyYW0gbm9kZUhlYWRlcnMgdGhlIGhlYWRlcnMgb2JqZWN0IHRvIGNvbnZlcnRcbiAqIEByZXR1cm5zIHRoZSBjb252ZXJ0ZWQgaGVhZGVycyBvYmplY3RcbiAqLyBleHBvcnQgZnVuY3Rpb24gZnJvbU5vZGVPdXRnb2luZ0h0dHBIZWFkZXJzKG5vZGVIZWFkZXJzKSB7XG4gICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XG4gICAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKG5vZGVIZWFkZXJzKSl7XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBbXG4gICAgICAgICAgICB2YWx1ZVxuICAgICAgICBdO1xuICAgICAgICBmb3IgKGxldCB2IG9mIHZhbHVlcyl7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHYgPT09IFwidW5kZWZpbmVkXCIpIGNvbnRpbnVlO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2ID09PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgICAgICAgdiA9IHYudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGhlYWRlcnMuYXBwZW5kKGtleSwgdik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGhlYWRlcnM7XG59XG4vKlxuICBTZXQtQ29va2llIGhlYWRlciBmaWVsZC12YWx1ZXMgYXJlIHNvbWV0aW1lcyBjb21tYSBqb2luZWQgaW4gb25lIHN0cmluZy4gVGhpcyBzcGxpdHMgdGhlbSB3aXRob3V0IGNob2tpbmcgb24gY29tbWFzXG4gIHRoYXQgYXJlIHdpdGhpbiBhIHNpbmdsZSBzZXQtY29va2llIGZpZWxkLXZhbHVlLCBzdWNoIGFzIGluIHRoZSBFeHBpcmVzIHBvcnRpb24uXG4gIFRoaXMgaXMgdW5jb21tb24sIGJ1dCBleHBsaWNpdGx5IGFsbG93ZWQgLSBzZWUgaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzI2MTYjc2VjdGlvbi00LjJcbiAgTm9kZS5qcyBkb2VzIHRoaXMgZm9yIGV2ZXJ5IGhlYWRlciAqZXhjZXB0KiBzZXQtY29va2llIC0gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9ibG9iL2Q1ZTM2M2I3N2ViYWYxY2FmNjdjZDc1MjgyMjRiNjUxYzg2ODE1YzEvbGliL19odHRwX2luY29taW5nLmpzI0wxMjhcbiAgUmVhY3QgTmF0aXZlJ3MgZmV0Y2ggZG9lcyB0aGlzIGZvciAqZXZlcnkqIGhlYWRlciwgaW5jbHVkaW5nIHNldC1jb29raWUuXG4gIFxuICBCYXNlZCBvbjogaHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9qMm9iamMvY29tbWl0LzE2ODIwZmRiYzhmNzZjYTBjMzM0NzI4MTBjZTBjYjAzZDIwZWZlMjVcbiAgQ3JlZGl0cyB0bzogaHR0cHM6Ly9naXRodWIuY29tL3RvbWJhbGwgZm9yIG9yaWdpbmFsIGFuZCBodHRwczovL2dpdGh1Yi5jb20vY2hydXNhcnQgZm9yIEphdmFTY3JpcHQgaW1wbGVtZW50YXRpb25cbiovIGV4cG9ydCBmdW5jdGlvbiBzcGxpdENvb2tpZXNTdHJpbmcoY29va2llc1N0cmluZykge1xuICAgIHZhciBjb29raWVzU3RyaW5ncyA9IFtdO1xuICAgIHZhciBwb3MgPSAwO1xuICAgIHZhciBzdGFydDtcbiAgICB2YXIgY2g7XG4gICAgdmFyIGxhc3RDb21tYTtcbiAgICB2YXIgbmV4dFN0YXJ0O1xuICAgIHZhciBjb29raWVzU2VwYXJhdG9yRm91bmQ7XG4gICAgZnVuY3Rpb24gc2tpcFdoaXRlc3BhY2UoKSB7XG4gICAgICAgIHdoaWxlKHBvcyA8IGNvb2tpZXNTdHJpbmcubGVuZ3RoICYmIC9cXHMvLnRlc3QoY29va2llc1N0cmluZy5jaGFyQXQocG9zKSkpe1xuICAgICAgICAgICAgcG9zICs9IDE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBvcyA8IGNvb2tpZXNTdHJpbmcubGVuZ3RoO1xuICAgIH1cbiAgICBmdW5jdGlvbiBub3RTcGVjaWFsQ2hhcigpIHtcbiAgICAgICAgY2ggPSBjb29raWVzU3RyaW5nLmNoYXJBdChwb3MpO1xuICAgICAgICByZXR1cm4gY2ggIT09IFwiPVwiICYmIGNoICE9PSBcIjtcIiAmJiBjaCAhPT0gXCIsXCI7XG4gICAgfVxuICAgIHdoaWxlKHBvcyA8IGNvb2tpZXNTdHJpbmcubGVuZ3RoKXtcbiAgICAgICAgc3RhcnQgPSBwb3M7XG4gICAgICAgIGNvb2tpZXNTZXBhcmF0b3JGb3VuZCA9IGZhbHNlO1xuICAgICAgICB3aGlsZShza2lwV2hpdGVzcGFjZSgpKXtcbiAgICAgICAgICAgIGNoID0gY29va2llc1N0cmluZy5jaGFyQXQocG9zKTtcbiAgICAgICAgICAgIGlmIChjaCA9PT0gXCIsXCIpIHtcbiAgICAgICAgICAgICAgICAvLyAnLCcgaXMgYSBjb29raWUgc2VwYXJhdG9yIGlmIHdlIGhhdmUgbGF0ZXIgZmlyc3QgJz0nLCBub3QgJzsnIG9yICcsJ1xuICAgICAgICAgICAgICAgIGxhc3RDb21tYSA9IHBvcztcbiAgICAgICAgICAgICAgICBwb3MgKz0gMTtcbiAgICAgICAgICAgICAgICBza2lwV2hpdGVzcGFjZSgpO1xuICAgICAgICAgICAgICAgIG5leHRTdGFydCA9IHBvcztcbiAgICAgICAgICAgICAgICB3aGlsZShwb3MgPCBjb29raWVzU3RyaW5nLmxlbmd0aCAmJiBub3RTcGVjaWFsQ2hhcigpKXtcbiAgICAgICAgICAgICAgICAgICAgcG9zICs9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGN1cnJlbnRseSBzcGVjaWFsIGNoYXJhY3RlclxuICAgICAgICAgICAgICAgIGlmIChwb3MgPCBjb29raWVzU3RyaW5nLmxlbmd0aCAmJiBjb29raWVzU3RyaW5nLmNoYXJBdChwb3MpID09PSBcIj1cIikge1xuICAgICAgICAgICAgICAgICAgICAvLyB3ZSBmb3VuZCBjb29raWVzIHNlcGFyYXRvclxuICAgICAgICAgICAgICAgICAgICBjb29raWVzU2VwYXJhdG9yRm91bmQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAvLyBwb3MgaXMgaW5zaWRlIHRoZSBuZXh0IGNvb2tpZSwgc28gYmFjayB1cCBhbmQgcmV0dXJuIGl0LlxuICAgICAgICAgICAgICAgICAgICBwb3MgPSBuZXh0U3RhcnQ7XG4gICAgICAgICAgICAgICAgICAgIGNvb2tpZXNTdHJpbmdzLnB1c2goY29va2llc1N0cmluZy5zdWJzdHJpbmcoc3RhcnQsIGxhc3RDb21tYSkpO1xuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHBvcztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBpbiBwYXJhbSAnLCcgb3IgcGFyYW0gc2VwYXJhdG9yICc7JyxcbiAgICAgICAgICAgICAgICAgICAgLy8gd2UgY29udGludWUgZnJvbSB0aGF0IGNvbW1hXG4gICAgICAgICAgICAgICAgICAgIHBvcyA9IGxhc3RDb21tYSArIDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBwb3MgKz0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIWNvb2tpZXNTZXBhcmF0b3JGb3VuZCB8fCBwb3MgPj0gY29va2llc1N0cmluZy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvb2tpZXNTdHJpbmdzLnB1c2goY29va2llc1N0cmluZy5zdWJzdHJpbmcoc3RhcnQsIGNvb2tpZXNTdHJpbmcubGVuZ3RoKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvb2tpZXNTdHJpbmdzO1xufVxuLyoqXG4gKiBDb252ZXJ0cyBhIEhlYWRlcnMgb2JqZWN0IHRvIGEgTm9kZS5qcyBPdXRnb2luZ0h0dHBIZWFkZXJzIG9iamVjdC4gVGhpcyBpc1xuICogcmVxdWlyZWQgdG8gc3VwcG9ydCB0aGUgc2V0LWNvb2tpZSBoZWFkZXIsIHdoaWNoIG1heSBoYXZlIG11bHRpcGxlIHZhbHVlcy5cbiAqXG4gKiBAcGFyYW0gaGVhZGVycyB0aGUgaGVhZGVycyBvYmplY3QgdG8gY29udmVydFxuICogQHJldHVybnMgdGhlIGNvbnZlcnRlZCBoZWFkZXJzIG9iamVjdFxuICovIGV4cG9ydCBmdW5jdGlvbiB0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBub2RlSGVhZGVycyA9IHt9O1xuICAgIGNvbnN0IGNvb2tpZXMgPSBbXTtcbiAgICBpZiAoaGVhZGVycykge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBoZWFkZXJzLmVudHJpZXMoKSl7XG4gICAgICAgICAgICBpZiAoa2V5LnRvTG93ZXJDYXNlKCkgPT09IFwic2V0LWNvb2tpZVwiKSB7XG4gICAgICAgICAgICAgICAgLy8gV2UgbWF5IGhhdmUgZ290dGVuIGEgY29tbWEgam9pbmVkIHN0cmluZyBvZiBjb29raWVzLCBvciBtdWx0aXBsZVxuICAgICAgICAgICAgICAgIC8vIHNldC1jb29raWUgaGVhZGVycy4gV2UgbmVlZCB0byBtZXJnZSB0aGVtIGludG8gb25lIGhlYWRlciBhcnJheVxuICAgICAgICAgICAgICAgIC8vIHRvIHJlcHJlc2VudCBhbGwgdGhlIGNvb2tpZXMuXG4gICAgICAgICAgICAgICAgY29va2llcy5wdXNoKC4uLnNwbGl0Q29va2llc1N0cmluZyh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIG5vZGVIZWFkZXJzW2tleV0gPSBjb29raWVzLmxlbmd0aCA9PT0gMSA/IGNvb2tpZXNbMF0gOiBjb29raWVzO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBub2RlSGVhZGVyc1trZXldID0gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5vZGVIZWFkZXJzO1xufVxuLyoqXG4gKiBWYWxpZGF0ZSB0aGUgY29ycmVjdG5lc3Mgb2YgYSB1c2VyLXByb3ZpZGVkIFVSTC5cbiAqLyBleHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVVUkwodXJsKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyhuZXcgVVJMKFN0cmluZyh1cmwpKSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVUkwgaXMgbWFsZm9ybWVkIFwiJHtTdHJpbmcodXJsKX1cIi4gUGxlYXNlIHVzZSBvbmx5IGFic29sdXRlIFVSTHMgLSBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taWRkbGV3YXJlLXJlbGF0aXZlLXVybHNgLCB7XG4gICAgICAgICAgICBjYXVzZTogZXJyb3JcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiZnJvbU5vZGVPdXRnb2luZ0h0dHBIZWFkZXJzIiwibm9kZUhlYWRlcnMiLCJoZWFkZXJzIiwiSGVhZGVycyIsImtleSIsInZhbHVlIiwiT2JqZWN0IiwiZW50cmllcyIsInZhbHVlcyIsIkFycmF5IiwiaXNBcnJheSIsInYiLCJ0b1N0cmluZyIsImFwcGVuZCIsInNwbGl0Q29va2llc1N0cmluZyIsImNvb2tpZXNTdHJpbmciLCJjb29raWVzU3RyaW5ncyIsInBvcyIsInN0YXJ0IiwiY2giLCJsYXN0Q29tbWEiLCJuZXh0U3RhcnQiLCJjb29raWVzU2VwYXJhdG9yRm91bmQiLCJza2lwV2hpdGVzcGFjZSIsImxlbmd0aCIsInRlc3QiLCJjaGFyQXQiLCJub3RTcGVjaWFsQ2hhciIsInB1c2giLCJzdWJzdHJpbmciLCJ0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzIiwiY29va2llcyIsInRvTG93ZXJDYXNlIiwidmFsaWRhdGVVUkwiLCJ1cmwiLCJTdHJpbmciLCJVUkwiLCJlcnJvciIsIkVycm9yIiwiY2F1c2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/server/web/utils.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppRouterContext: () => (/* binding */ AppRouterContext),\n/* harmony export */   CacheStates: () => (/* binding */ CacheStates),\n/* harmony export */   GlobalLayoutRouterContext: () => (/* binding */ GlobalLayoutRouterContext),\n/* harmony export */   LayoutRouterContext: () => (/* binding */ LayoutRouterContext),\n/* harmony export */   TemplateContext: () => (/* binding */ TemplateContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\nvar CacheStates;\n(function(CacheStates) {\n    CacheStates[\"LAZY_INITIALIZED\"] = \"LAZYINITIALIZED\";\n    CacheStates[\"DATA_FETCH\"] = \"DATAFETCH\";\n    CacheStates[\"READY\"] = \"READY\";\n})(CacheStates || (CacheStates = {}));\nconst AppRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst LayoutRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst GlobalLayoutRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst TemplateContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nif (true) {\n    AppRouterContext.displayName = \"AppRouterContext\";\n    LayoutRouterContext.displayName = \"LayoutRouterContext\";\n    GlobalLayoutRouterContext.displayName = \"GlobalLayoutRouterContext\";\n    TemplateContext.displayName = \"TemplateContext\";\n} //# sourceMappingURL=app-router-context.shared-runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvYXBwLXJvdXRlci1jb250ZXh0LnNoYXJlZC1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUUwQjtBQUNuQixJQUFJQyxZQUFZO0FBQ3RCLFVBQVNBLFdBQVc7SUFDakJBLFdBQVcsQ0FBQyxtQkFBbUIsR0FBRztJQUNsQ0EsV0FBVyxDQUFDLGFBQWEsR0FBRztJQUM1QkEsV0FBVyxDQUFDLFFBQVEsR0FBRztBQUMzQixHQUFHQSxlQUFnQkEsQ0FBQUEsY0FBYyxDQUFDO0FBQzNCLE1BQU1DLGlDQUFtQkYsMERBQW1CLENBQUMsTUFBTTtBQUNuRCxNQUFNSSxvQ0FBc0JKLDBEQUFtQixDQUFDLE1BQU07QUFDdEQsTUFBTUssMENBQTRCTCwwREFBbUIsQ0FBQyxNQUFNO0FBQzVELE1BQU1NLGdDQUFrQk4sMERBQW1CLENBQUMsTUFBTTtBQUN6RCxJQUFJTyxJQUFxQyxFQUFFO0lBQ3ZDTCxpQkFBaUJNLFdBQVcsR0FBRztJQUMvQkosb0JBQW9CSSxXQUFXLEdBQUc7SUFDbENILDBCQUEwQkcsV0FBVyxHQUFHO0lBQ3hDRixnQkFBZ0JFLFdBQVcsR0FBRztBQUNsQyxFQUVBLDZEQUE2RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanM/ZmViZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IHZhciBDYWNoZVN0YXRlcztcbihmdW5jdGlvbihDYWNoZVN0YXRlcykge1xuICAgIENhY2hlU3RhdGVzW1wiTEFaWV9JTklUSUFMSVpFRFwiXSA9IFwiTEFaWUlOSVRJQUxJWkVEXCI7XG4gICAgQ2FjaGVTdGF0ZXNbXCJEQVRBX0ZFVENIXCJdID0gXCJEQVRBRkVUQ0hcIjtcbiAgICBDYWNoZVN0YXRlc1tcIlJFQURZXCJdID0gXCJSRUFEWVwiO1xufSkoQ2FjaGVTdGF0ZXMgfHwgKENhY2hlU3RhdGVzID0ge30pKTtcbmV4cG9ydCBjb25zdCBBcHBSb3V0ZXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBjb25zdCBMYXlvdXRSb3V0ZXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBjb25zdCBHbG9iYWxMYXlvdXRSb3V0ZXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBjb25zdCBUZW1wbGF0ZUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIEFwcFJvdXRlckNvbnRleHQuZGlzcGxheU5hbWUgPSBcIkFwcFJvdXRlckNvbnRleHRcIjtcbiAgICBMYXlvdXRSb3V0ZXJDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJMYXlvdXRSb3V0ZXJDb250ZXh0XCI7XG4gICAgR2xvYmFsTGF5b3V0Um91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiR2xvYmFsTGF5b3V0Um91dGVyQ29udGV4dFwiO1xuICAgIFRlbXBsYXRlQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiVGVtcGxhdGVDb250ZXh0XCI7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJDYWNoZVN0YXRlcyIsIkFwcFJvdXRlckNvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwiTGF5b3V0Um91dGVyQ29udGV4dCIsIkdsb2JhbExheW91dFJvdXRlckNvbnRleHQiLCJUZW1wbGF0ZUNvbnRleHQiLCJwcm9jZXNzIiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/get-hostname.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/get-hostname.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHostname: () => (/* binding */ getHostname)\n/* harmony export */ });\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ function getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(\":\")[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUFVLFNBQVNBLFlBQVlDLE1BQU0sRUFBRUMsT0FBTztJQUMzQywyRUFBMkU7SUFDM0UsWUFBWTtJQUNaLElBQUlDO0lBQ0osSUFBSSxDQUFDRCxXQUFXLE9BQU8sS0FBSyxJQUFJQSxRQUFRRSxJQUFJLEtBQUssQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSixRQUFRRSxJQUFJLEdBQUc7UUFDM0VELFdBQVdELFFBQVFFLElBQUksQ0FBQ0csUUFBUSxHQUFHQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7SUFDcEQsT0FBTyxJQUFJUCxPQUFPRSxRQUFRLEVBQUU7UUFDeEJBLFdBQVdGLE9BQU9FLFFBQVE7SUFDOUIsT0FBTztJQUNQLE9BQU9BLFNBQVNNLFdBQVc7QUFDL0IsRUFFQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lLmpzPzZkNjQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWtlcyBhbiBvYmplY3Qgd2l0aCBhIGhvc3RuYW1lIHByb3BlcnR5IChsaWtlIGEgcGFyc2VkIFVSTCkgYW5kIHNvbWVcbiAqIGhlYWRlcnMgdGhhdCBtYXkgY29udGFpbiBIb3N0IGFuZCByZXR1cm5zIHRoZSBwcmVmZXJyZWQgaG9zdG5hbWUuXG4gKiBAcGFyYW0gcGFyc2VkIEFuIG9iamVjdCBjb250YWluaW5nIGEgaG9zdG5hbWUgcHJvcGVydHkuXG4gKiBAcGFyYW0gaGVhZGVycyBBIGRpY3Rpb25hcnkgd2l0aCBoZWFkZXJzIGNvbnRhaW5pbmcgYSBgaG9zdGAuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGdldEhvc3RuYW1lKHBhcnNlZCwgaGVhZGVycykge1xuICAgIC8vIEdldCB0aGUgaG9zdG5hbWUgZnJvbSB0aGUgaGVhZGVycyBpZiBpdCBleGlzdHMsIG90aGVyd2lzZSB1c2UgdGhlIHBhcnNlZFxuICAgIC8vIGhvc3RuYW1lLlxuICAgIGxldCBob3N0bmFtZTtcbiAgICBpZiAoKGhlYWRlcnMgPT0gbnVsbCA/IHZvaWQgMCA6IGhlYWRlcnMuaG9zdCkgJiYgIUFycmF5LmlzQXJyYXkoaGVhZGVycy5ob3N0KSkge1xuICAgICAgICBob3N0bmFtZSA9IGhlYWRlcnMuaG9zdC50b1N0cmluZygpLnNwbGl0KFwiOlwiKVswXTtcbiAgICB9IGVsc2UgaWYgKHBhcnNlZC5ob3N0bmFtZSkge1xuICAgICAgICBob3N0bmFtZSA9IHBhcnNlZC5ob3N0bmFtZTtcbiAgICB9IGVsc2UgcmV0dXJuO1xuICAgIHJldHVybiBob3N0bmFtZS50b0xvd2VyQ2FzZSgpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtaG9zdG5hbWUuanMubWFwIl0sIm5hbWVzIjpbImdldEhvc3RuYW1lIiwicGFyc2VkIiwiaGVhZGVycyIsImhvc3RuYW1lIiwiaG9zdCIsIkFycmF5IiwiaXNBcnJheSIsInRvU3RyaW5nIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/get-hostname.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PathParamsContext: () => (/* binding */ PathParamsContext),\n/* harmony export */   PathnameContext: () => (/* binding */ PathnameContext),\n/* harmony export */   SearchParamsContext: () => (/* binding */ SearchParamsContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\nconst SearchParamsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nconst PathnameContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nconst PathParamsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nif (true) {\n    SearchParamsContext.displayName = \"SearchParamsContext\";\n    PathnameContext.displayName = \"PathnameContext\";\n    PathParamsContext.displayName = \"PathParamsContext\";\n} //# sourceMappingURL=hooks-client-context.shared-runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvaG9va3MtY2xpZW50LWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUVzQztBQUMvQixNQUFNQyxvQ0FBc0JELG9EQUFhQSxDQUFDLE1BQU07QUFDaEQsTUFBTUUsZ0NBQWtCRixvREFBYUEsQ0FBQyxNQUFNO0FBQzVDLE1BQU1HLGtDQUFvQkgsb0RBQWFBLENBQUMsTUFBTTtBQUNyRCxJQUFJSSxJQUFxQyxFQUFFO0lBQ3ZDSCxvQkFBb0JJLFdBQVcsR0FBRztJQUNsQ0gsZ0JBQWdCRyxXQUFXLEdBQUc7SUFDOUJGLGtCQUFrQkUsV0FBVyxHQUFHO0FBQ3BDLEVBRUEsK0RBQStEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL2hvb2tzLWNsaWVudC1jb250ZXh0LnNoYXJlZC1ydW50aW1lLmpzPzNlZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcbmV4cG9ydCBjb25zdCBTZWFyY2hQYXJhbXNDb250ZXh0ID0gY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBjb25zdCBQYXRobmFtZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KG51bGwpO1xuZXhwb3J0IGNvbnN0IFBhdGhQYXJhbXNDb250ZXh0ID0gY3JlYXRlQ29udGV4dChudWxsKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBTZWFyY2hQYXJhbXNDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJTZWFyY2hQYXJhbXNDb250ZXh0XCI7XG4gICAgUGF0aG5hbWVDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJQYXRobmFtZUNvbnRleHRcIjtcbiAgICBQYXRoUGFyYW1zQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiUGF0aFBhcmFtc0NvbnRleHRcIjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG9va3MtY2xpZW50LWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUNvbnRleHQiLCJTZWFyY2hQYXJhbXNDb250ZXh0IiwiUGF0aG5hbWVDb250ZXh0IiwiUGF0aFBhcmFtc0NvbnRleHQiLCJwcm9jZXNzIiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectDomainLocale: () => (/* binding */ detectDomainLocale)\n/* harmony export */ });\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var _item_domain, _item_locales;\n        // remove port if present\n        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\")[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvaTE4bi9kZXRlY3QtZG9tYWluLWxvY2FsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsbUJBQW1CQyxXQUFXLEVBQUVDLFFBQVEsRUFBRUMsY0FBYztJQUNwRSxJQUFJLENBQUNGLGFBQWE7SUFDbEIsSUFBSUUsZ0JBQWdCO1FBQ2hCQSxpQkFBaUJBLGVBQWVDLFdBQVc7SUFDL0M7SUFDQSxLQUFLLE1BQU1DLFFBQVFKLFlBQVk7UUFDM0IsSUFBSUssY0FBY0M7UUFDbEIseUJBQXlCO1FBQ3pCLE1BQU1DLGlCQUFpQixDQUFDRixlQUFlRCxLQUFLSSxNQUFNLEtBQUssT0FBTyxLQUFLLElBQUlILGFBQWFJLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDTixXQUFXO1FBQzdHLElBQUlGLGFBQWFNLGtCQUFrQkwsbUJBQW1CRSxLQUFLTSxhQUFhLENBQUNQLFdBQVcsTUFBTyxFQUFDRyxnQkFBZ0JGLEtBQUtPLE9BQU8sS0FBSyxPQUFPLEtBQUssSUFBSUwsY0FBY00sSUFBSSxDQUFDLENBQUNDLFNBQVNBLE9BQU9WLFdBQVcsT0FBT0QsZUFBYyxHQUFJO1lBQ2pOLE9BQU9FO1FBQ1g7SUFDSjtBQUNKLEVBRUEsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL2kxOG4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUuanM/NjRlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZGV0ZWN0RG9tYWluTG9jYWxlKGRvbWFpbkl0ZW1zLCBob3N0bmFtZSwgZGV0ZWN0ZWRMb2NhbGUpIHtcbiAgICBpZiAoIWRvbWFpbkl0ZW1zKSByZXR1cm47XG4gICAgaWYgKGRldGVjdGVkTG9jYWxlKSB7XG4gICAgICAgIGRldGVjdGVkTG9jYWxlID0gZGV0ZWN0ZWRMb2NhbGUudG9Mb3dlckNhc2UoKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGRvbWFpbkl0ZW1zKXtcbiAgICAgICAgdmFyIF9pdGVtX2RvbWFpbiwgX2l0ZW1fbG9jYWxlcztcbiAgICAgICAgLy8gcmVtb3ZlIHBvcnQgaWYgcHJlc2VudFxuICAgICAgICBjb25zdCBkb21haW5Ib3N0bmFtZSA9IChfaXRlbV9kb21haW4gPSBpdGVtLmRvbWFpbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9pdGVtX2RvbWFpbi5zcGxpdChcIjpcIilbMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKGhvc3RuYW1lID09PSBkb21haW5Ib3N0bmFtZSB8fCBkZXRlY3RlZExvY2FsZSA9PT0gaXRlbS5kZWZhdWx0TG9jYWxlLnRvTG93ZXJDYXNlKCkgfHwgKChfaXRlbV9sb2NhbGVzID0gaXRlbS5sb2NhbGVzKSA9PSBudWxsID8gdm9pZCAwIDogX2l0ZW1fbG9jYWxlcy5zb21lKChsb2NhbGUpPT5sb2NhbGUudG9Mb3dlckNhc2UoKSA9PT0gZGV0ZWN0ZWRMb2NhbGUpKSkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldGVjdC1kb21haW4tbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJkZXRlY3REb21haW5Mb2NhbGUiLCJkb21haW5JdGVtcyIsImhvc3RuYW1lIiwiZGV0ZWN0ZWRMb2NhbGUiLCJ0b0xvd2VyQ2FzZSIsIml0ZW0iLCJfaXRlbV9kb21haW4iLCJfaXRlbV9sb2NhbGVzIiwiZG9tYWluSG9zdG5hbWUiLCJkb21haW4iLCJzcGxpdCIsImRlZmF1bHRMb2NhbGUiLCJsb2NhbGVzIiwic29tZSIsImxvY2FsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeLocalePath: () => (/* binding */ normalizeLocalePath)\n/* harmony export */ });\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n} //# sourceMappingURL=normalize-locale-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvaTE4bi9ub3JtYWxpemUtbG9jYWxlLXBhdGguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7OztDQVFDLEdBQVUsU0FBU0Esb0JBQW9CQyxRQUFRLEVBQUVDLE9BQU87SUFDckQsSUFBSUM7SUFDSiwrREFBK0Q7SUFDL0QsTUFBTUMsZ0JBQWdCSCxTQUFTSSxLQUFLLENBQUM7SUFDcENILENBQUFBLFdBQVcsRUFBRSxFQUFFSSxJQUFJLENBQUMsQ0FBQ0M7UUFDbEIsSUFBSUgsYUFBYSxDQUFDLEVBQUUsSUFBSUEsYUFBYSxDQUFDLEVBQUUsQ0FBQ0ksV0FBVyxPQUFPRCxPQUFPQyxXQUFXLElBQUk7WUFDN0VMLGlCQUFpQkk7WUFDakJILGNBQWNLLE1BQU0sQ0FBQyxHQUFHO1lBQ3hCUixXQUFXRyxjQUFjTSxJQUFJLENBQUMsUUFBUTtZQUN0QyxPQUFPO1FBQ1g7UUFDQSxPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0hUO1FBQ0FFO0lBQ0o7QUFDSixFQUVBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC5qcz9kMjllIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRm9yIGEgcGF0aG5hbWUgdGhhdCBtYXkgaW5jbHVkZSBhIGxvY2FsZSBmcm9tIGEgbGlzdCBvZiBsb2NhbGVzLCBpdFxuICogcmVtb3ZlcyB0aGUgbG9jYWxlIGZyb20gdGhlIHBhdGhuYW1lIHJldHVybmluZyBpdCBhbG9uZ3NpZGUgd2l0aCB0aGVcbiAqIGRldGVjdGVkIGxvY2FsZS5cbiAqXG4gKiBAcGFyYW0gcGF0aG5hbWUgQSBwYXRobmFtZSB0aGF0IG1heSBpbmNsdWRlIGEgbG9jYWxlLlxuICogQHBhcmFtIGxvY2FsZXMgQSBsaXN0IG9mIGxvY2FsZXMuXG4gKiBAcmV0dXJucyBUaGUgZGV0ZWN0ZWQgbG9jYWxlIGFuZCBwYXRobmFtZSB3aXRob3V0IGxvY2FsZVxuICovIGV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVMb2NhbGVQYXRoKHBhdGhuYW1lLCBsb2NhbGVzKSB7XG4gICAgbGV0IGRldGVjdGVkTG9jYWxlO1xuICAgIC8vIGZpcnN0IGl0ZW0gd2lsbCBiZSBlbXB0eSBzdHJpbmcgZnJvbSBzcGxpdHRpbmcgYXQgZmlyc3QgY2hhclxuICAgIGNvbnN0IHBhdGhuYW1lUGFydHMgPSBwYXRobmFtZS5zcGxpdChcIi9cIik7XG4gICAgKGxvY2FsZXMgfHwgW10pLnNvbWUoKGxvY2FsZSk9PntcbiAgICAgICAgaWYgKHBhdGhuYW1lUGFydHNbMV0gJiYgcGF0aG5hbWVQYXJ0c1sxXS50b0xvd2VyQ2FzZSgpID09PSBsb2NhbGUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgZGV0ZWN0ZWRMb2NhbGUgPSBsb2NhbGU7XG4gICAgICAgICAgICBwYXRobmFtZVBhcnRzLnNwbGljZSgxLCAxKTtcbiAgICAgICAgICAgIHBhdGhuYW1lID0gcGF0aG5hbWVQYXJ0cy5qb2luKFwiL1wiKSB8fCBcIi9cIjtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgZGV0ZWN0ZWRMb2NhbGVcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemUtbG9jYWxlLXBhdGguanMubWFwIl0sIm5hbWVzIjpbIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJwYXRobmFtZSIsImxvY2FsZXMiLCJkZXRlY3RlZExvY2FsZSIsInBhdGhuYW1lUGFydHMiLCJzcGxpdCIsInNvbWUiLCJsb2NhbGUiLCJ0b0xvd2VyQ2FzZSIsInNwbGljZSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/lazy-dynamic/dynamic-no-ssr.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/lazy-dynamic/dynamic-no-ssr.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoSSR: () => (/* binding */ NoSSR),\n/* harmony export */   suspense: () => (/* binding */ suspense)\n/* harmony export */ });\n/* harmony import */ var _no_ssr_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./no-ssr-error */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/lazy-dynamic/no-ssr-error.js\");\n\"use client\";\n\nfunction suspense() {\n    const error = new Error(_no_ssr_error__WEBPACK_IMPORTED_MODULE_0__.NEXT_DYNAMIC_NO_SSR_CODE);\n    error.digest = _no_ssr_error__WEBPACK_IMPORTED_MODULE_0__.NEXT_DYNAMIC_NO_SSR_CODE;\n    throw error;\n}\nfunction NoSSR(param) {\n    let { children } = param;\n    if (true) {\n        suspense();\n    }\n    return children;\n} //# sourceMappingURL=dynamic-no-ssr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvbGF6eS1keW5hbWljL2R5bmFtaWMtbm8tc3NyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBRTBEO0FBQ25ELFNBQVNDO0lBQ1osTUFBTUMsUUFBUSxJQUFJQyxNQUFNSCxtRUFBd0JBO0lBQ2hERSxNQUFNRSxNQUFNLEdBQUdKLG1FQUF3QkE7SUFDdkMsTUFBTUU7QUFDVjtBQUNPLFNBQVNHLE1BQU1DLEtBQUs7SUFDdkIsSUFBSSxFQUFFQyxRQUFRLEVBQUUsR0FBR0Q7SUFDbkIsSUFBSSxJQUE2QixFQUFFO1FBQy9CTDtJQUNKO0lBQ0EsT0FBT007QUFDWCxFQUVBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvZHluYW1pYy1uby1zc3IuanM/Yjc3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgTkVYVF9EWU5BTUlDX05PX1NTUl9DT0RFIH0gZnJvbSBcIi4vbm8tc3NyLWVycm9yXCI7XG5leHBvcnQgZnVuY3Rpb24gc3VzcGVuc2UoKSB7XG4gICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoTkVYVF9EWU5BTUlDX05PX1NTUl9DT0RFKTtcbiAgICBlcnJvci5kaWdlc3QgPSBORVhUX0RZTkFNSUNfTk9fU1NSX0NPREU7XG4gICAgdGhyb3cgZXJyb3I7XG59XG5leHBvcnQgZnVuY3Rpb24gTm9TU1IocGFyYW0pIHtcbiAgICBsZXQgeyBjaGlsZHJlbiB9ID0gcGFyYW07XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgc3VzcGVuc2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIGNoaWxkcmVuO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1keW5hbWljLW5vLXNzci5qcy5tYXAiXSwibmFtZXMiOlsiTkVYVF9EWU5BTUlDX05PX1NTUl9DT0RFIiwic3VzcGVuc2UiLCJlcnJvciIsIkVycm9yIiwiZGlnZXN0IiwiTm9TU1IiLCJwYXJhbSIsImNoaWxkcmVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/lazy-dynamic/dynamic-no-ssr.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/lazy-dynamic/no-ssr-error.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/lazy-dynamic/no-ssr-error.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NEXT_DYNAMIC_NO_SSR_CODE: () => (/* binding */ NEXT_DYNAMIC_NO_SSR_CODE)\n/* harmony export */ });\n// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst NEXT_DYNAMIC_NO_SSR_CODE = \"NEXT_DYNAMIC_NO_SSR_CODE\"; //# sourceMappingURL=no-ssr-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvbGF6eS1keW5hbWljL25vLXNzci1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsK0dBQStHO0FBQ3hHLE1BQU1BLDJCQUEyQiwyQkFBMkIsQ0FFbkUsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL2xhenktZHluYW1pYy9uby1zc3ItZXJyb3IuanM/ZjBjNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGhhcyB0byBiZSBhIHNoYXJlZCBtb2R1bGUgd2hpY2ggaXMgc2hhcmVkIGJldHdlZW4gY2xpZW50IGNvbXBvbmVudCBlcnJvciBib3VuZGFyeSBhbmQgZHluYW1pYyBjb21wb25lbnRcbmV4cG9ydCBjb25zdCBORVhUX0RZTkFNSUNfTk9fU1NSX0NPREUgPSBcIk5FWFRfRFlOQU1JQ19OT19TU1JfQ09ERVwiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1uby1zc3ItZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIk5FWFRfRFlOQU1JQ19OT19TU1JfQ09ERSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/lazy-dynamic/no-ssr-error.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureLeadingSlash: () => (/* binding */ ensureLeadingSlash)\n/* harmony export */ });\n/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */ function ensureLeadingSlash(path) {\n    return path.startsWith(\"/\") ? path : \"/\" + path;\n} //# sourceMappingURL=ensure-leading-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcGFnZS1wYXRoL2Vuc3VyZS1sZWFkaW5nLXNsYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0NBR0MsR0FBVSxTQUFTQSxtQkFBbUJDLElBQUk7SUFDdkMsT0FBT0EsS0FBS0MsVUFBVSxDQUFDLE9BQU9ELE9BQU8sTUFBTUE7QUFDL0MsRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcGFnZS1wYXRoL2Vuc3VyZS1sZWFkaW5nLXNsYXNoLmpzPzNjNzYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGb3IgYSBnaXZlbiBwYWdlIHBhdGgsIHRoaXMgZnVuY3Rpb24gZW5zdXJlcyB0aGF0IHRoZXJlIGlzIGEgbGVhZGluZyBzbGFzaC5cbiAqIElmIHRoZXJlIGlzIG5vdCBhIGxlYWRpbmcgc2xhc2gsIG9uZSBpcyBhZGRlZCwgb3RoZXJ3aXNlIGl0IGlzIG5vb3AuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGVuc3VyZUxlYWRpbmdTbGFzaChwYXRoKSB7XG4gICAgcmV0dXJuIHBhdGguc3RhcnRzV2l0aChcIi9cIikgPyBwYXRoIDogXCIvXCIgKyBwYXRoO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnN1cmUtbGVhZGluZy1zbGFzaC5qcy5tYXAiXSwibmFtZXMiOlsiZW5zdXJlTGVhZGluZ1NsYXNoIiwicGF0aCIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLocale: () => (/* binding */ addLocale)\n/* harmony export */ });\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_0__.addPathPrefix)(path, \"/\" + locale);\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1sb2NhbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ0E7QUFDbEQ7Ozs7Q0FJQyxHQUFVLFNBQVNFLFVBQVVDLElBQUksRUFBRUMsTUFBTSxFQUFFQyxhQUFhLEVBQUVDLFlBQVk7SUFDbkUsNEVBQTRFO0lBQzVFLHNCQUFzQjtJQUN0QixJQUFJLENBQUNGLFVBQVVBLFdBQVdDLGVBQWUsT0FBT0Y7SUFDaEQsTUFBTUksUUFBUUosS0FBS0ssV0FBVztJQUM5QiwyRUFBMkU7SUFDM0UsaUNBQWlDO0lBQ2pDLElBQUksQ0FBQ0YsY0FBYztRQUNmLElBQUlMLCtEQUFhQSxDQUFDTSxPQUFPLFNBQVMsT0FBT0o7UUFDekMsSUFBSUYsK0RBQWFBLENBQUNNLE9BQU8sTUFBTUgsT0FBT0ksV0FBVyxLQUFLLE9BQU9MO0lBQ2pFO0lBQ0EscUNBQXFDO0lBQ3JDLE9BQU9ILCtEQUFhQSxDQUFDRyxNQUFNLE1BQU1DO0FBQ3JDLEVBRUEsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtbG9jYWxlLmpzP2U4M2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWRkUGF0aFByZWZpeCB9IGZyb20gXCIuL2FkZC1wYXRoLXByZWZpeFwiO1xuaW1wb3J0IHsgcGF0aEhhc1ByZWZpeCB9IGZyb20gXCIuL3BhdGgtaGFzLXByZWZpeFwiO1xuLyoqXG4gKiBGb3IgYSBnaXZlbiBwYXRoIGFuZCBhIGxvY2FsZSwgaWYgdGhlIGxvY2FsZSBpcyBnaXZlbiwgaXQgd2lsbCBwcmVmaXggdGhlXG4gKiBsb2NhbGUuIFRoZSBwYXRoIHNob3VsZG4ndCBiZSBhbiBBUEkgcGF0aC4gSWYgYSBkZWZhdWx0IGxvY2FsZSBpcyBnaXZlbiB0aGVcbiAqIHByZWZpeCB3aWxsIGJlIG9taXR0ZWQgaWYgdGhlIGxvY2FsZSBpcyBhbHJlYWR5IHRoZSBkZWZhdWx0IGxvY2FsZS5cbiAqLyBleHBvcnQgZnVuY3Rpb24gYWRkTG9jYWxlKHBhdGgsIGxvY2FsZSwgZGVmYXVsdExvY2FsZSwgaWdub3JlUHJlZml4KSB7XG4gICAgLy8gSWYgbm8gbG9jYWxlIHdhcyBnaXZlbiBvciB0aGUgbG9jYWxlIGlzIHRoZSBkZWZhdWx0IGxvY2FsZSwgd2UgZG9uJ3QgbmVlZFxuICAgIC8vIHRvIHByZWZpeCB0aGUgcGF0aC5cbiAgICBpZiAoIWxvY2FsZSB8fCBsb2NhbGUgPT09IGRlZmF1bHRMb2NhbGUpIHJldHVybiBwYXRoO1xuICAgIGNvbnN0IGxvd2VyID0gcGF0aC50b0xvd2VyQ2FzZSgpO1xuICAgIC8vIElmIHRoZSBwYXRoIGlzIGFuIEFQSSBwYXRoIG9yIHRoZSBwYXRoIGFscmVhZHkgaGFzIHRoZSBsb2NhbGUgcHJlZml4LCB3ZVxuICAgIC8vIGRvbid0IG5lZWQgdG8gcHJlZml4IHRoZSBwYXRoLlxuICAgIGlmICghaWdub3JlUHJlZml4KSB7XG4gICAgICAgIGlmIChwYXRoSGFzUHJlZml4KGxvd2VyLCBcIi9hcGlcIikpIHJldHVybiBwYXRoO1xuICAgICAgICBpZiAocGF0aEhhc1ByZWZpeChsb3dlciwgXCIvXCIgKyBsb2NhbGUudG9Mb3dlckNhc2UoKSkpIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICAvLyBBZGQgdGhlIGxvY2FsZSBwcmVmaXggdG8gdGhlIHBhdGguXG4gICAgcmV0dXJuIGFkZFBhdGhQcmVmaXgocGF0aCwgXCIvXCIgKyBsb2NhbGUpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGQtbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJhZGRQYXRoUHJlZml4IiwicGF0aEhhc1ByZWZpeCIsImFkZExvY2FsZSIsInBhdGgiLCJsb2NhbGUiLCJkZWZhdWx0TG9jYWxlIiwiaWdub3JlUHJlZml4IiwibG93ZXIiLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathPrefix: () => (/* binding */ addPathPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ function addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + prefix + pathname + query + hash;\n} //# sourceMappingURL=add-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXByZWZpeC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUN6Qzs7O0NBR0MsR0FBVSxTQUFTQyxjQUFjQyxJQUFJLEVBQUVDLE1BQU07SUFDMUMsSUFBSSxDQUFDRCxLQUFLRSxVQUFVLENBQUMsUUFBUSxDQUFDRCxRQUFRO1FBQ2xDLE9BQU9EO0lBQ1g7SUFDQSxNQUFNLEVBQUVHLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUUsR0FBR1Asc0RBQVNBLENBQUNFO0lBQzVDLE9BQU8sS0FBS0MsU0FBU0UsV0FBV0MsUUFBUUM7QUFDNUMsRUFFQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXByZWZpeC5qcz82OWZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gXCIuL3BhcnNlLXBhdGhcIjtcbi8qKlxuICogQWRkcyB0aGUgcHJvdmlkZWQgcHJlZml4IHRvIHRoZSBnaXZlbiBwYXRoLiBJdCBmaXJzdCBlbnN1cmVzIHRoYXQgdGhlIHBhdGhcbiAqIGlzIGluZGVlZCBzdGFydGluZyB3aXRoIGEgc2xhc2guXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGFkZFBhdGhQcmVmaXgocGF0aCwgcHJlZml4KSB7XG4gICAgaWYgKCFwYXRoLnN0YXJ0c1dpdGgoXCIvXCIpIHx8ICFwcmVmaXgpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIGNvbnN0IHsgcGF0aG5hbWUsIHF1ZXJ5LCBoYXNoIH0gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgcmV0dXJuIFwiXCIgKyBwcmVmaXggKyBwYXRobmFtZSArIHF1ZXJ5ICsgaGFzaDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLXBhdGgtcHJlZml4LmpzLm1hcCJdLCJuYW1lcyI6WyJwYXJzZVBhdGgiLCJhZGRQYXRoUHJlZml4IiwicGF0aCIsInByZWZpeCIsInN0YXJ0c1dpdGgiLCJwYXRobmFtZSIsInF1ZXJ5IiwiaGFzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathSuffix: () => (/* binding */ addPathSuffix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ function addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + pathname + suffix + query + hash;\n} //# sourceMappingURL=add-path-suffix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXN1ZmZpeC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUN6Qzs7OztDQUlDLEdBQVUsU0FBU0MsY0FBY0MsSUFBSSxFQUFFQyxNQUFNO0lBQzFDLElBQUksQ0FBQ0QsS0FBS0UsVUFBVSxDQUFDLFFBQVEsQ0FBQ0QsUUFBUTtRQUNsQyxPQUFPRDtJQUNYO0lBQ0EsTUFBTSxFQUFFRyxRQUFRLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFLEdBQUdQLHNEQUFTQSxDQUFDRTtJQUM1QyxPQUFPLEtBQUtHLFdBQVdGLFNBQVNHLFFBQVFDO0FBQzVDLEVBRUEsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtcGF0aC1zdWZmaXguanM/OWQwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVBhdGggfSBmcm9tIFwiLi9wYXJzZS1wYXRoXCI7XG4vKipcbiAqIFNpbWlsYXJseSB0byBgYWRkUGF0aFByZWZpeGAsIHRoaXMgZnVuY3Rpb24gYWRkcyBhIHN1ZmZpeCBhdCB0aGUgZW5kIG9uIHRoZVxuICogcHJvdmlkZWQgcGF0aC4gSXQgYWxzbyB3b3JrcyBvbmx5IGZvciBwYXRocyBlbnN1cmluZyB0aGUgYXJndW1lbnQgc3RhcnRzXG4gKiB3aXRoIGEgc2xhc2guXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGFkZFBhdGhTdWZmaXgocGF0aCwgc3VmZml4KSB7XG4gICAgaWYgKCFwYXRoLnN0YXJ0c1dpdGgoXCIvXCIpIHx8ICFzdWZmaXgpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIGNvbnN0IHsgcGF0aG5hbWUsIHF1ZXJ5LCBoYXNoIH0gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgcmV0dXJuIFwiXCIgKyBwYXRobmFtZSArIHN1ZmZpeCArIHF1ZXJ5ICsgaGFzaDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLXBhdGgtc3VmZml4LmpzLm1hcCJdLCJuYW1lcyI6WyJwYXJzZVBhdGgiLCJhZGRQYXRoU3VmZml4IiwicGF0aCIsInN1ZmZpeCIsInN0YXJ0c1dpdGgiLCJwYXRobmFtZSIsInF1ZXJ5IiwiaGFzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeAppPath: () => (/* binding */ normalizeAppPath),\n/* harmony export */   normalizeRscPath: () => (/* binding */ normalizeRscPath)\n/* harmony export */ });\n/* harmony import */ var _page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../page-path/ensure-leading-slash */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\");\n/* harmony import */ var _segment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../segment */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/segment.js\");\n\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ function normalizeAppPath(route) {\n    return (0,_page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__.ensureLeadingSlash)(route.split(\"/\").reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if ((0,_segment__WEBPACK_IMPORTED_MODULE_1__.isGroupSegment)(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === \"@\") {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === \"page\" || segment === \"route\") && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, \"\"));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, \"$1\") : pathname;\n} //# sourceMappingURL=app-paths.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FwcC1wYXRocy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBFO0FBQzNCO0FBQy9DOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FrQkMsR0FBVSxTQUFTRSxpQkFBaUJDLEtBQUs7SUFDdEMsT0FBT0gsbUZBQWtCQSxDQUFDRyxNQUFNQyxLQUFLLENBQUMsS0FBS0MsTUFBTSxDQUFDLENBQUNDLFVBQVVDLFNBQVNDLE9BQU9DO1FBQ3pFLDhCQUE4QjtRQUM5QixJQUFJLENBQUNGLFNBQVM7WUFDVixPQUFPRDtRQUNYO1FBQ0Esc0JBQXNCO1FBQ3RCLElBQUlMLHdEQUFjQSxDQUFDTSxVQUFVO1lBQ3pCLE9BQU9EO1FBQ1g7UUFDQSxpQ0FBaUM7UUFDakMsSUFBSUMsT0FBTyxDQUFDLEVBQUUsS0FBSyxLQUFLO1lBQ3BCLE9BQU9EO1FBQ1g7UUFDQSx1REFBdUQ7UUFDdkQsSUFBSSxDQUFDQyxZQUFZLFVBQVVBLFlBQVksT0FBTSxLQUFNQyxVQUFVQyxTQUFTQyxNQUFNLEdBQUcsR0FBRztZQUM5RSxPQUFPSjtRQUNYO1FBQ0EsT0FBT0EsV0FBVyxNQUFNQztJQUM1QixHQUFHO0FBQ1A7QUFDQTs7O0NBR0MsR0FBVSxTQUFTSSxpQkFBaUJMLFFBQVEsRUFBRU0sT0FBTztJQUNsRCxPQUFPQSxVQUFVTixTQUFTTyxPQUFPLENBQUMsZUFDbEMsUUFBUVA7QUFDWixFQUVBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYXBwLXBhdGhzLmpzP2QzNGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5zdXJlTGVhZGluZ1NsYXNoIH0gZnJvbSBcIi4uLy4uL3BhZ2UtcGF0aC9lbnN1cmUtbGVhZGluZy1zbGFzaFwiO1xuaW1wb3J0IHsgaXNHcm91cFNlZ21lbnQgfSBmcm9tIFwiLi4vLi4vc2VnbWVudFwiO1xuLyoqXG4gKiBOb3JtYWxpemVzIGFuIGFwcCByb3V0ZSBzbyBpdCByZXByZXNlbnRzIHRoZSBhY3R1YWwgcmVxdWVzdCBwYXRoLiBFc3NlbnRpYWxseVxuICogcGVyZm9ybWluZyB0aGUgZm9sbG93aW5nIHRyYW5zZm9ybWF0aW9uczpcbiAqXG4gKiAtIGAvKGRhc2hib2FyZCkvdXNlci9baWRdL3BhZ2VgIHRvIGAvdXNlci9baWRdYFxuICogLSBgLyhkYXNoYm9hcmQpL2FjY291bnQvcGFnZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3VzZXIvW2lkXS9wYWdlYCB0byBgL3VzZXIvW2lkXWBcbiAqIC0gYC9hY2NvdW50L3BhZ2VgIHRvIGAvYWNjb3VudGBcbiAqIC0gYC9wYWdlYCB0byBgL2BcbiAqIC0gYC8oZGFzaGJvYXJkKS91c2VyL1tpZF0vcm91dGVgIHRvIGAvdXNlci9baWRdYFxuICogLSBgLyhkYXNoYm9hcmQpL2FjY291bnQvcm91dGVgIHRvIGAvYWNjb3VudGBcbiAqIC0gYC91c2VyL1tpZF0vcm91dGVgIHRvIGAvdXNlci9baWRdYFxuICogLSBgL2FjY291bnQvcm91dGVgIHRvIGAvYWNjb3VudGBcbiAqIC0gYC9yb3V0ZWAgdG8gYC9gXG4gKiAtIGAvYCB0byBgL2BcbiAqXG4gKiBAcGFyYW0gcm91dGUgdGhlIGFwcCByb3V0ZSB0byBub3JtYWxpemVcbiAqIEByZXR1cm5zIHRoZSBub3JtYWxpemVkIHBhdGhuYW1lXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZUFwcFBhdGgocm91dGUpIHtcbiAgICByZXR1cm4gZW5zdXJlTGVhZGluZ1NsYXNoKHJvdXRlLnNwbGl0KFwiL1wiKS5yZWR1Y2UoKHBhdGhuYW1lLCBzZWdtZW50LCBpbmRleCwgc2VnbWVudHMpPT57XG4gICAgICAgIC8vIEVtcHR5IHNlZ21lbnRzIGFyZSBpZ25vcmVkLlxuICAgICAgICBpZiAoIXNlZ21lbnQpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXRobmFtZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBHcm91cHMgYXJlIGlnbm9yZWQuXG4gICAgICAgIGlmIChpc0dyb3VwU2VnbWVudChzZWdtZW50KSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgICAgIC8vIFBhcmFsbGVsIHNlZ21lbnRzIGFyZSBpZ25vcmVkLlxuICAgICAgICBpZiAoc2VnbWVudFswXSA9PT0gXCJAXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXRobmFtZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBUaGUgbGFzdCBzZWdtZW50IChpZiBpdCdzIGEgbGVhZikgc2hvdWxkIGJlIGlnbm9yZWQuXG4gICAgICAgIGlmICgoc2VnbWVudCA9PT0gXCJwYWdlXCIgfHwgc2VnbWVudCA9PT0gXCJyb3V0ZVwiKSAmJiBpbmRleCA9PT0gc2VnbWVudHMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXRobmFtZSArIFwiL1wiICsgc2VnbWVudDtcbiAgICB9LCBcIlwiKSk7XG59XG4vKipcbiAqIFN0cmlwcyB0aGUgYC5yc2NgIGV4dGVuc2lvbiBpZiBpdCdzIGluIHRoZSBwYXRobmFtZS5cbiAqIFNpbmNlIHRoaXMgZnVuY3Rpb24gaXMgdXNlZCBvbiBmdWxsIHVybHMgaXQgY2hlY2tzIGA/YCBmb3Igc2VhcmNoUGFyYW1zIGhhbmRsaW5nLlxuICovIGV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVSc2NQYXRoKHBhdGhuYW1lLCBlbmFibGVkKSB7XG4gICAgcmV0dXJuIGVuYWJsZWQgPyBwYXRobmFtZS5yZXBsYWNlKC9cXC5yc2MoJHxcXD8pLywgLy8gJDEgZW5zdXJlcyBgP2AgaXMgcHJlc2VydmVkXG4gICAgXCIkMVwiKSA6IHBhdGhuYW1lO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcGF0aHMuanMubWFwIl0sIm5hbWVzIjpbImVuc3VyZUxlYWRpbmdTbGFzaCIsImlzR3JvdXBTZWdtZW50Iiwibm9ybWFsaXplQXBwUGF0aCIsInJvdXRlIiwic3BsaXQiLCJyZWR1Y2UiLCJwYXRobmFtZSIsInNlZ21lbnQiLCJpbmRleCIsInNlZ21lbnRzIiwibGVuZ3RoIiwibm9ybWFsaXplUnNjUGF0aCIsImVuYWJsZWQiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatNextPathnameInfo: () => (/* binding */ formatNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./remove-trailing-slash */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\");\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _add_path_suffix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-path-suffix */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\");\n/* harmony import */ var _add_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-locale */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\");\n\n\n\n\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0,_add_locale__WEBPACK_IMPORTED_MODULE_3__.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)((0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, \"/_next/data/\" + info.buildId), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)(pathname, \"/\") : pathname : (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n} //# sourceMappingURL=format-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBOEQ7QUFDWjtBQUNBO0FBQ1Q7QUFDbEMsU0FBU0ksdUJBQXVCQyxJQUFJO0lBQ3ZDLElBQUlDLFdBQVdILHNEQUFTQSxDQUFDRSxLQUFLQyxRQUFRLEVBQUVELEtBQUtFLE1BQU0sRUFBRUYsS0FBS0csT0FBTyxHQUFHQyxZQUFZSixLQUFLSyxhQUFhLEVBQUVMLEtBQUtNLFlBQVk7SUFDckgsSUFBSU4sS0FBS0csT0FBTyxJQUFJLENBQUNILEtBQUtPLGFBQWEsRUFBRTtRQUNyQ04sV0FBV04sMkVBQW1CQSxDQUFDTTtJQUNuQztJQUNBLElBQUlELEtBQUtHLE9BQU8sRUFBRTtRQUNkRixXQUFXSiwrREFBYUEsQ0FBQ0QsK0RBQWFBLENBQUNLLFVBQVUsaUJBQWlCRCxLQUFLRyxPQUFPLEdBQUdILEtBQUtDLFFBQVEsS0FBSyxNQUFNLGVBQWU7SUFDNUg7SUFDQUEsV0FBV0wsK0RBQWFBLENBQUNLLFVBQVVELEtBQUtRLFFBQVE7SUFDaEQsT0FBTyxDQUFDUixLQUFLRyxPQUFPLElBQUlILEtBQUtPLGFBQWEsR0FBRyxDQUFDTixTQUFTUSxRQUFRLENBQUMsT0FBT1osK0RBQWFBLENBQUNJLFVBQVUsT0FBT0EsV0FBV04sMkVBQW1CQSxDQUFDTTtBQUN6SSxFQUVBLHFEQUFxRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcz9hNTgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbW92ZVRyYWlsaW5nU2xhc2ggfSBmcm9tIFwiLi9yZW1vdmUtdHJhaWxpbmctc2xhc2hcIjtcbmltcG9ydCB7IGFkZFBhdGhQcmVmaXggfSBmcm9tIFwiLi9hZGQtcGF0aC1wcmVmaXhcIjtcbmltcG9ydCB7IGFkZFBhdGhTdWZmaXggfSBmcm9tIFwiLi9hZGQtcGF0aC1zdWZmaXhcIjtcbmltcG9ydCB7IGFkZExvY2FsZSB9IGZyb20gXCIuL2FkZC1sb2NhbGVcIjtcbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXROZXh0UGF0aG5hbWVJbmZvKGluZm8pIHtcbiAgICBsZXQgcGF0aG5hbWUgPSBhZGRMb2NhbGUoaW5mby5wYXRobmFtZSwgaW5mby5sb2NhbGUsIGluZm8uYnVpbGRJZCA/IHVuZGVmaW5lZCA6IGluZm8uZGVmYXVsdExvY2FsZSwgaW5mby5pZ25vcmVQcmVmaXgpO1xuICAgIGlmIChpbmZvLmJ1aWxkSWQgfHwgIWluZm8udHJhaWxpbmdTbGFzaCkge1xuICAgICAgICBwYXRobmFtZSA9IHJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xuICAgIH1cbiAgICBpZiAoaW5mby5idWlsZElkKSB7XG4gICAgICAgIHBhdGhuYW1lID0gYWRkUGF0aFN1ZmZpeChhZGRQYXRoUHJlZml4KHBhdGhuYW1lLCBcIi9fbmV4dC9kYXRhL1wiICsgaW5mby5idWlsZElkKSwgaW5mby5wYXRobmFtZSA9PT0gXCIvXCIgPyBcImluZGV4Lmpzb25cIiA6IFwiLmpzb25cIik7XG4gICAgfVxuICAgIHBhdGhuYW1lID0gYWRkUGF0aFByZWZpeChwYXRobmFtZSwgaW5mby5iYXNlUGF0aCk7XG4gICAgcmV0dXJuICFpbmZvLmJ1aWxkSWQgJiYgaW5mby50cmFpbGluZ1NsYXNoID8gIXBhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKSA/IGFkZFBhdGhTdWZmaXgocGF0aG5hbWUsIFwiL1wiKSA6IHBhdGhuYW1lIDogcmVtb3ZlVHJhaWxpbmdTbGFzaChwYXRobmFtZSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm8uanMubWFwIl0sIm5hbWVzIjpbInJlbW92ZVRyYWlsaW5nU2xhc2giLCJhZGRQYXRoUHJlZml4IiwiYWRkUGF0aFN1ZmZpeCIsImFkZExvY2FsZSIsImZvcm1hdE5leHRQYXRobmFtZUluZm8iLCJpbmZvIiwicGF0aG5hbWUiLCJsb2NhbGUiLCJidWlsZElkIiwidW5kZWZpbmVkIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsInRyYWlsaW5nU2xhc2giLCJiYXNlUGF0aCIsImVuZHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextPathnameInfo: () => (/* binding */ getNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../i18n/normalize-locale-path */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\");\n/* harmony import */ var _remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remove-path-prefix */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n\nfunction getNextPathnameInfo(pathname, options) {\n    var _options_nextConfig;\n    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};\n    const info = {\n        pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && (0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_2__.pathHasPrefix)(info.pathname, basePath)) {\n        info.pathname = (0,_remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__.removePathPrefix)(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    let pathnameNoDataPrefix = info.pathname;\n    if (info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.buildId = buildId;\n        pathnameNoDataPrefix = paths[1] !== \"index\" ? \"/\" + paths.slice(1).join(\"/\") : \"/\";\n        // update pathname with normalized if enabled although\n        // we use normalized to populate locale info still\n        if (options.parseData === true) {\n            info.pathname = pathnameNoDataPrefix;\n        }\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (i18n) {\n        let result = options.i18nProvider ? options.i18nProvider.analyze(info.pathname) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(info.pathname, i18n.locales);\n        info.locale = result.detectedLocale;\n        var _result_pathname;\n        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;\n        if (!result.detectedLocale && info.buildId) {\n            result = options.i18nProvider ? options.i18nProvider.analyze(pathnameNoDataPrefix) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(pathnameNoDataPrefix, i18n.locales);\n            if (result.detectedLocale) {\n                info.locale = result.detectedLocale;\n            }\n        }\n    }\n    return info;\n} //# sourceMappingURL=get-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1RTtBQUNmO0FBQ047QUFDM0MsU0FBU0csb0JBQW9CQyxRQUFRLEVBQUVDLE9BQU87SUFDakQsSUFBSUM7SUFDSixNQUFNLEVBQUVDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxhQUFhLEVBQUUsR0FBRyxDQUFDSCxzQkFBc0JELFFBQVFLLFVBQVUsS0FBSyxPQUFPSixzQkFBc0IsQ0FBQztJQUN0SCxNQUFNSyxPQUFPO1FBQ1RQO1FBQ0FLLGVBQWVMLGFBQWEsTUFBTUEsU0FBU1EsUUFBUSxDQUFDLE9BQU9IO0lBQy9EO0lBQ0EsSUFBSUYsWUFBWUwsK0RBQWFBLENBQUNTLEtBQUtQLFFBQVEsRUFBRUcsV0FBVztRQUNwREksS0FBS1AsUUFBUSxHQUFHSCxxRUFBZ0JBLENBQUNVLEtBQUtQLFFBQVEsRUFBRUc7UUFDaERJLEtBQUtKLFFBQVEsR0FBR0E7SUFDcEI7SUFDQSxJQUFJTSx1QkFBdUJGLEtBQUtQLFFBQVE7SUFDeEMsSUFBSU8sS0FBS1AsUUFBUSxDQUFDVSxVQUFVLENBQUMsbUJBQW1CSCxLQUFLUCxRQUFRLENBQUNRLFFBQVEsQ0FBQyxVQUFVO1FBQzdFLE1BQU1HLFFBQVFKLEtBQUtQLFFBQVEsQ0FBQ1ksT0FBTyxDQUFDLG9CQUFvQixJQUFJQSxPQUFPLENBQUMsV0FBVyxJQUFJQyxLQUFLLENBQUM7UUFDekYsTUFBTUMsVUFBVUgsS0FBSyxDQUFDLEVBQUU7UUFDeEJKLEtBQUtPLE9BQU8sR0FBR0E7UUFDZkwsdUJBQXVCRSxLQUFLLENBQUMsRUFBRSxLQUFLLFVBQVUsTUFBTUEsTUFBTUksS0FBSyxDQUFDLEdBQUdDLElBQUksQ0FBQyxPQUFPO1FBQy9FLHNEQUFzRDtRQUN0RCxrREFBa0Q7UUFDbEQsSUFBSWYsUUFBUWdCLFNBQVMsS0FBSyxNQUFNO1lBQzVCVixLQUFLUCxRQUFRLEdBQUdTO1FBQ3BCO0lBQ0o7SUFDQSw0RUFBNEU7SUFDNUUseUJBQXlCO0lBQ3pCLElBQUlMLE1BQU07UUFDTixJQUFJYyxTQUFTakIsUUFBUWtCLFlBQVksR0FBR2xCLFFBQVFrQixZQUFZLENBQUNDLE9BQU8sQ0FBQ2IsS0FBS1AsUUFBUSxJQUFJSixnRkFBbUJBLENBQUNXLEtBQUtQLFFBQVEsRUFBRUksS0FBS2lCLE9BQU87UUFDaklkLEtBQUtlLE1BQU0sR0FBR0osT0FBT0ssY0FBYztRQUNuQyxJQUFJQztRQUNKakIsS0FBS1AsUUFBUSxHQUFHLENBQUN3QixtQkFBbUJOLE9BQU9sQixRQUFRLEtBQUssT0FBT3dCLG1CQUFtQmpCLEtBQUtQLFFBQVE7UUFDL0YsSUFBSSxDQUFDa0IsT0FBT0ssY0FBYyxJQUFJaEIsS0FBS08sT0FBTyxFQUFFO1lBQ3hDSSxTQUFTakIsUUFBUWtCLFlBQVksR0FBR2xCLFFBQVFrQixZQUFZLENBQUNDLE9BQU8sQ0FBQ1gsd0JBQXdCYixnRkFBbUJBLENBQUNhLHNCQUFzQkwsS0FBS2lCLE9BQU87WUFDM0ksSUFBSUgsT0FBT0ssY0FBYyxFQUFFO2dCQUN2QmhCLEtBQUtlLE1BQU0sR0FBR0osT0FBT0ssY0FBYztZQUN2QztRQUNKO0lBQ0o7SUFDQSxPQUFPaEI7QUFDWCxFQUVBLGtEQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcz83YjRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vcm1hbGl6ZUxvY2FsZVBhdGggfSBmcm9tIFwiLi4vLi4vaTE4bi9ub3JtYWxpemUtbG9jYWxlLXBhdGhcIjtcbmltcG9ydCB7IHJlbW92ZVBhdGhQcmVmaXggfSBmcm9tIFwiLi9yZW1vdmUtcGF0aC1wcmVmaXhcIjtcbmltcG9ydCB7IHBhdGhIYXNQcmVmaXggfSBmcm9tIFwiLi9wYXRoLWhhcy1wcmVmaXhcIjtcbmV4cG9ydCBmdW5jdGlvbiBnZXROZXh0UGF0aG5hbWVJbmZvKHBhdGhuYW1lLCBvcHRpb25zKSB7XG4gICAgdmFyIF9vcHRpb25zX25leHRDb25maWc7XG4gICAgY29uc3QgeyBiYXNlUGF0aCwgaTE4biwgdHJhaWxpbmdTbGFzaCB9ID0gKF9vcHRpb25zX25leHRDb25maWcgPSBvcHRpb25zLm5leHRDb25maWcpICE9IG51bGwgPyBfb3B0aW9uc19uZXh0Q29uZmlnIDoge307XG4gICAgY29uc3QgaW5mbyA9IHtcbiAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgIHRyYWlsaW5nU2xhc2g6IHBhdGhuYW1lICE9PSBcIi9cIiA/IHBhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKSA6IHRyYWlsaW5nU2xhc2hcbiAgICB9O1xuICAgIGlmIChiYXNlUGF0aCAmJiBwYXRoSGFzUHJlZml4KGluZm8ucGF0aG5hbWUsIGJhc2VQYXRoKSkge1xuICAgICAgICBpbmZvLnBhdGhuYW1lID0gcmVtb3ZlUGF0aFByZWZpeChpbmZvLnBhdGhuYW1lLCBiYXNlUGF0aCk7XG4gICAgICAgIGluZm8uYmFzZVBhdGggPSBiYXNlUGF0aDtcbiAgICB9XG4gICAgbGV0IHBhdGhuYW1lTm9EYXRhUHJlZml4ID0gaW5mby5wYXRobmFtZTtcbiAgICBpZiAoaW5mby5wYXRobmFtZS5zdGFydHNXaXRoKFwiL19uZXh0L2RhdGEvXCIpICYmIGluZm8ucGF0aG5hbWUuZW5kc1dpdGgoXCIuanNvblwiKSkge1xuICAgICAgICBjb25zdCBwYXRocyA9IGluZm8ucGF0aG5hbWUucmVwbGFjZSgvXlxcL19uZXh0XFwvZGF0YVxcLy8sIFwiXCIpLnJlcGxhY2UoL1xcLmpzb24kLywgXCJcIikuc3BsaXQoXCIvXCIpO1xuICAgICAgICBjb25zdCBidWlsZElkID0gcGF0aHNbMF07XG4gICAgICAgIGluZm8uYnVpbGRJZCA9IGJ1aWxkSWQ7XG4gICAgICAgIHBhdGhuYW1lTm9EYXRhUHJlZml4ID0gcGF0aHNbMV0gIT09IFwiaW5kZXhcIiA/IFwiL1wiICsgcGF0aHMuc2xpY2UoMSkuam9pbihcIi9cIikgOiBcIi9cIjtcbiAgICAgICAgLy8gdXBkYXRlIHBhdGhuYW1lIHdpdGggbm9ybWFsaXplZCBpZiBlbmFibGVkIGFsdGhvdWdoXG4gICAgICAgIC8vIHdlIHVzZSBub3JtYWxpemVkIHRvIHBvcHVsYXRlIGxvY2FsZSBpbmZvIHN0aWxsXG4gICAgICAgIGlmIChvcHRpb25zLnBhcnNlRGF0YSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgaW5mby5wYXRobmFtZSA9IHBhdGhuYW1lTm9EYXRhUHJlZml4O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIElmIHByb3ZpZGVkLCB1c2UgdGhlIGxvY2FsZSByb3V0ZSBub3JtYWxpemVyIHRvIGRldGVjdCB0aGUgbG9jYWxlIGluc3RlYWRcbiAgICAvLyBvZiB0aGUgZnVuY3Rpb24gYmVsb3cuXG4gICAgaWYgKGkxOG4pIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IG9wdGlvbnMuaTE4blByb3ZpZGVyID8gb3B0aW9ucy5pMThuUHJvdmlkZXIuYW5hbHl6ZShpbmZvLnBhdGhuYW1lKSA6IG5vcm1hbGl6ZUxvY2FsZVBhdGgoaW5mby5wYXRobmFtZSwgaTE4bi5sb2NhbGVzKTtcbiAgICAgICAgaW5mby5sb2NhbGUgPSByZXN1bHQuZGV0ZWN0ZWRMb2NhbGU7XG4gICAgICAgIHZhciBfcmVzdWx0X3BhdGhuYW1lO1xuICAgICAgICBpbmZvLnBhdGhuYW1lID0gKF9yZXN1bHRfcGF0aG5hbWUgPSByZXN1bHQucGF0aG5hbWUpICE9IG51bGwgPyBfcmVzdWx0X3BhdGhuYW1lIDogaW5mby5wYXRobmFtZTtcbiAgICAgICAgaWYgKCFyZXN1bHQuZGV0ZWN0ZWRMb2NhbGUgJiYgaW5mby5idWlsZElkKSB7XG4gICAgICAgICAgICByZXN1bHQgPSBvcHRpb25zLmkxOG5Qcm92aWRlciA/IG9wdGlvbnMuaTE4blByb3ZpZGVyLmFuYWx5emUocGF0aG5hbWVOb0RhdGFQcmVmaXgpIDogbm9ybWFsaXplTG9jYWxlUGF0aChwYXRobmFtZU5vRGF0YVByZWZpeCwgaTE4bi5sb2NhbGVzKTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQuZGV0ZWN0ZWRMb2NhbGUpIHtcbiAgICAgICAgICAgICAgICBpbmZvLmxvY2FsZSA9IHJlc3VsdC5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaW5mbztcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcy5tYXAiXSwibmFtZXMiOlsibm9ybWFsaXplTG9jYWxlUGF0aCIsInJlbW92ZVBhdGhQcmVmaXgiLCJwYXRoSGFzUHJlZml4IiwiZ2V0TmV4dFBhdGhuYW1lSW5mbyIsInBhdGhuYW1lIiwib3B0aW9ucyIsIl9vcHRpb25zX25leHRDb25maWciLCJiYXNlUGF0aCIsImkxOG4iLCJ0cmFpbGluZ1NsYXNoIiwibmV4dENvbmZpZyIsImluZm8iLCJlbmRzV2l0aCIsInBhdGhuYW1lTm9EYXRhUHJlZml4Iiwic3RhcnRzV2l0aCIsInBhdGhzIiwicmVwbGFjZSIsInNwbGl0IiwiYnVpbGRJZCIsInNsaWNlIiwiam9pbiIsInBhcnNlRGF0YSIsInJlc3VsdCIsImkxOG5Qcm92aWRlciIsImFuYWx5emUiLCJsb2NhbGVzIiwibG9jYWxlIiwiZGV0ZWN0ZWRMb2NhbGUiLCJfcmVzdWx0X3BhdGhuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePath: () => (/* binding */ parsePath)\n/* harmony export */ });\n/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ function parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n} //# sourceMappingURL=parse-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhcnNlLXBhdGguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FBVSxTQUFTQSxVQUFVQyxJQUFJO0lBQzlCLE1BQU1DLFlBQVlELEtBQUtFLE9BQU8sQ0FBQztJQUMvQixNQUFNQyxhQUFhSCxLQUFLRSxPQUFPLENBQUM7SUFDaEMsTUFBTUUsV0FBV0QsYUFBYSxDQUFDLEtBQU1GLENBQUFBLFlBQVksS0FBS0UsYUFBYUYsU0FBUTtJQUMzRSxJQUFJRyxZQUFZSCxZQUFZLENBQUMsR0FBRztRQUM1QixPQUFPO1lBQ0hJLFVBQVVMLEtBQUtNLFNBQVMsQ0FBQyxHQUFHRixXQUFXRCxhQUFhRjtZQUNwRE0sT0FBT0gsV0FBV0osS0FBS00sU0FBUyxDQUFDSCxZQUFZRixZQUFZLENBQUMsSUFBSUEsWUFBWU8sYUFBYTtZQUN2RkMsTUFBTVIsWUFBWSxDQUFDLElBQUlELEtBQUtVLEtBQUssQ0FBQ1QsYUFBYTtRQUNuRDtJQUNKO0lBQ0EsT0FBTztRQUNISSxVQUFVTDtRQUNWTyxPQUFPO1FBQ1BFLE1BQU07SUFDVjtBQUNKLEVBRUEsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXJzZS1wYXRoLmpzP2FjZGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhIHBhdGggdGhpcyBmdW5jdGlvbiB3aWxsIGZpbmQgdGhlIHBhdGhuYW1lLCBxdWVyeSBhbmQgaGFzaCBhbmQgcmV0dXJuXG4gKiB0aGVtLiBUaGlzIGlzIHVzZWZ1bCB0byBwYXJzZSBmdWxsIHBhdGhzIG9uIHRoZSBjbGllbnQgc2lkZS5cbiAqIEBwYXJhbSBwYXRoIEEgcGF0aCB0byBwYXJzZSBlLmcuIC9mb28vYmFyP2lkPTEjaGFzaFxuICovIGV4cG9ydCBmdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICAgIGNvbnN0IGhhc2hJbmRleCA9IHBhdGguaW5kZXhPZihcIiNcIik7XG4gICAgY29uc3QgcXVlcnlJbmRleCA9IHBhdGguaW5kZXhPZihcIj9cIik7XG4gICAgY29uc3QgaGFzUXVlcnkgPSBxdWVyeUluZGV4ID4gLTEgJiYgKGhhc2hJbmRleCA8IDAgfHwgcXVlcnlJbmRleCA8IGhhc2hJbmRleCk7XG4gICAgaWYgKGhhc1F1ZXJ5IHx8IGhhc2hJbmRleCA+IC0xKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRobmFtZTogcGF0aC5zdWJzdHJpbmcoMCwgaGFzUXVlcnkgPyBxdWVyeUluZGV4IDogaGFzaEluZGV4KSxcbiAgICAgICAgICAgIHF1ZXJ5OiBoYXNRdWVyeSA/IHBhdGguc3Vic3RyaW5nKHF1ZXJ5SW5kZXgsIGhhc2hJbmRleCA+IC0xID8gaGFzaEluZGV4IDogdW5kZWZpbmVkKSA6IFwiXCIsXG4gICAgICAgICAgICBoYXNoOiBoYXNoSW5kZXggPiAtMSA/IHBhdGguc2xpY2UoaGFzaEluZGV4KSA6IFwiXCJcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGF0aG5hbWU6IHBhdGgsXG4gICAgICAgIHF1ZXJ5OiBcIlwiLFxuICAgICAgICBoYXNoOiBcIlwiXG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2UtcGF0aC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwicGF0aCIsImhhc2hJbmRleCIsImluZGV4T2YiLCJxdWVyeUluZGV4IiwiaGFzUXVlcnkiLCJwYXRobmFtZSIsInN1YnN0cmluZyIsInF1ZXJ5IiwidW5kZWZpbmVkIiwiaGFzaCIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pathHasPrefix: () => (/* binding */ pathHasPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ function pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n} //# sourceMappingURL=path-has-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhdGgtaGFzLXByZWZpeC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUN6Qzs7Ozs7O0NBTUMsR0FBVSxTQUFTQyxjQUFjQyxJQUFJLEVBQUVDLE1BQU07SUFDMUMsSUFBSSxPQUFPRCxTQUFTLFVBQVU7UUFDMUIsT0FBTztJQUNYO0lBQ0EsTUFBTSxFQUFFRSxRQUFRLEVBQUUsR0FBR0osc0RBQVNBLENBQUNFO0lBQy9CLE9BQU9FLGFBQWFELFVBQVVDLFNBQVNDLFVBQVUsQ0FBQ0YsU0FBUztBQUMvRCxFQUVBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LmpzP2MzZGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VQYXRoIH0gZnJvbSBcIi4vcGFyc2UtcGF0aFwiO1xuLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBwYXRoIHN0YXJ0cyB3aXRoIGEgZ2l2ZW4gcHJlZml4LiBJdCBlbnN1cmVzIGl0IG1hdGNoZXNcbiAqIGV4YWN0bHkgd2l0aG91dCBjb250YWluaW5nIGV4dHJhIGNoYXJzLiBlLmcuIHByZWZpeCAvZG9jcyBzaG91bGQgcmVwbGFjZVxuICogZm9yIC9kb2NzLCAvZG9jcy8sIC9kb2NzL2EgYnV0IG5vdCAvZG9jc3NzXG4gKiBAcGFyYW0gcGF0aCBUaGUgcGF0aCB0byBjaGVjay5cbiAqIEBwYXJhbSBwcmVmaXggVGhlIHByZWZpeCB0byBjaGVjayBhZ2FpbnN0LlxuICovIGV4cG9ydCBmdW5jdGlvbiBwYXRoSGFzUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIGlmICh0eXBlb2YgcGF0aCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHsgcGF0aG5hbWUgfSA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICByZXR1cm4gcGF0aG5hbWUgPT09IHByZWZpeCB8fCBwYXRobmFtZS5zdGFydHNXaXRoKHByZWZpeCArIFwiL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGF0aC1oYXMtcHJlZml4LmpzLm1hcCJdLCJuYW1lcyI6WyJwYXJzZVBhdGgiLCJwYXRoSGFzUHJlZml4IiwicGF0aCIsInByZWZpeCIsInBhdGhuYW1lIiwic3RhcnRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   relativizeURL: () => (/* binding */ relativizeURL)\n/* harmony export */ });\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ function relativizeURL(url, base) {\n    const baseURL = typeof base === \"string\" ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = baseURL.protocol + \"//\" + baseURL.host;\n    return relative.protocol + \"//\" + relative.host === origin ? relative.toString().replace(origin, \"\") : relative.toString();\n} //# sourceMappingURL=relativize-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbGF0aXZpemUtdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBQVUsU0FBU0EsY0FBY0MsR0FBRyxFQUFFQyxJQUFJO0lBQ3ZDLE1BQU1DLFVBQVUsT0FBT0QsU0FBUyxXQUFXLElBQUlFLElBQUlGLFFBQVFBO0lBQzNELE1BQU1HLFdBQVcsSUFBSUQsSUFBSUgsS0FBS0M7SUFDOUIsTUFBTUksU0FBU0gsUUFBUUksUUFBUSxHQUFHLE9BQU9KLFFBQVFLLElBQUk7SUFDckQsT0FBT0gsU0FBU0UsUUFBUSxHQUFHLE9BQU9GLFNBQVNHLElBQUksS0FBS0YsU0FBU0QsU0FBU0ksUUFBUSxHQUFHQyxPQUFPLENBQUNKLFFBQVEsTUFBTUQsU0FBU0ksUUFBUTtBQUM1SCxFQUVBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVsYXRpdml6ZS11cmwuanM/MDBkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGEgVVJMIGFzIGEgc3RyaW5nIGFuZCBhIGJhc2UgVVJMIGl0IHdpbGwgbWFrZSB0aGUgVVJMIHJlbGF0aXZlXG4gKiBpZiB0aGUgcGFyc2VkIHByb3RvY29sIGFuZCBob3N0IGlzIHRoZSBzYW1lIGFzIHRoZSBvbmUgaW4gdGhlIGJhc2VcbiAqIFVSTC4gT3RoZXJ3aXNlIGl0IHJldHVybnMgdGhlIHNhbWUgVVJMIHN0cmluZy5cbiAqLyBleHBvcnQgZnVuY3Rpb24gcmVsYXRpdml6ZVVSTCh1cmwsIGJhc2UpIHtcbiAgICBjb25zdCBiYXNlVVJMID0gdHlwZW9mIGJhc2UgPT09IFwic3RyaW5nXCIgPyBuZXcgVVJMKGJhc2UpIDogYmFzZTtcbiAgICBjb25zdCByZWxhdGl2ZSA9IG5ldyBVUkwodXJsLCBiYXNlKTtcbiAgICBjb25zdCBvcmlnaW4gPSBiYXNlVVJMLnByb3RvY29sICsgXCIvL1wiICsgYmFzZVVSTC5ob3N0O1xuICAgIHJldHVybiByZWxhdGl2ZS5wcm90b2NvbCArIFwiLy9cIiArIHJlbGF0aXZlLmhvc3QgPT09IG9yaWdpbiA/IHJlbGF0aXZlLnRvU3RyaW5nKCkucmVwbGFjZShvcmlnaW4sIFwiXCIpIDogcmVsYXRpdmUudG9TdHJpbmcoKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVsYXRpdml6ZS11cmwuanMubWFwIl0sIm5hbWVzIjpbInJlbGF0aXZpemVVUkwiLCJ1cmwiLCJiYXNlIiwiYmFzZVVSTCIsIlVSTCIsInJlbGF0aXZlIiwib3JpZ2luIiwicHJvdG9jb2wiLCJob3N0IiwidG9TdHJpbmciLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removePathPrefix: () => (/* binding */ removePathPrefix)\n/* harmony export */ });\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ function removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_0__.pathHasPrefix)(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith(\"/\")) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return \"/\" + withoutPrefix;\n} //# sourceMappingURL=remove-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS1wYXRoLXByZWZpeC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUNsRDs7Ozs7OztDQU9DLEdBQVUsU0FBU0MsaUJBQWlCQyxJQUFJLEVBQUVDLE1BQU07SUFDN0MseUVBQXlFO0lBQ3pFLDBFQUEwRTtJQUMxRSxrQkFBa0I7SUFDbEIsRUFBRTtJQUNGLG9CQUFvQjtJQUNwQixFQUFFO0lBQ0Ysa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsdUJBQXVCO0lBQ3ZCLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIsSUFBSSxDQUFDSCwrREFBYUEsQ0FBQ0UsTUFBTUMsU0FBUztRQUM5QixPQUFPRDtJQUNYO0lBQ0EsK0NBQStDO0lBQy9DLE1BQU1FLGdCQUFnQkYsS0FBS0csS0FBSyxDQUFDRixPQUFPRyxNQUFNO0lBQzlDLDJFQUEyRTtJQUMzRSxJQUFJRixjQUFjRyxVQUFVLENBQUMsTUFBTTtRQUMvQixPQUFPSDtJQUNYO0lBQ0EsNEVBQTRFO0lBQzVFLG1EQUFtRDtJQUNuRCxPQUFPLE1BQU1BO0FBQ2pCLEVBRUEsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZW1vdmUtcGF0aC1wcmVmaXguanM/ZjM5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXRoSGFzUHJlZml4IH0gZnJvbSBcIi4vcGF0aC1oYXMtcHJlZml4XCI7XG4vKipcbiAqIEdpdmVuIGEgcGF0aCBhbmQgYSBwcmVmaXggaXQgd2lsbCByZW1vdmUgdGhlIHByZWZpeCB3aGVuIGl0IGV4aXN0cyBpbiB0aGVcbiAqIGdpdmVuIHBhdGguIEl0IGVuc3VyZXMgaXQgbWF0Y2hlcyBleGFjdGx5IHdpdGhvdXQgY29udGFpbmluZyBleHRyYSBjaGFyc1xuICogYW5kIGlmIHRoZSBwcmVmaXggaXMgbm90IHRoZXJlIGl0IHdpbGwgYmUgbm9vcC5cbiAqXG4gKiBAcGFyYW0gcGF0aCBUaGUgcGF0aCB0byByZW1vdmUgdGhlIHByZWZpeCBmcm9tLlxuICogQHBhcmFtIHByZWZpeCBUaGUgcHJlZml4IHRvIGJlIHJlbW92ZWQuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVBhdGhQcmVmaXgocGF0aCwgcHJlZml4KSB7XG4gICAgLy8gSWYgdGhlIHBhdGggZG9lc24ndCBzdGFydCB3aXRoIHRoZSBwcmVmaXggd2UgY2FuIHJldHVybiBpdCBhcyBpcy4gVGhpc1xuICAgIC8vIHByb3RlY3RzIHVzIGZyb20gc2l0dWF0aW9ucyB3aGVyZSB0aGUgcHJlZml4IGlzIGEgc3Vic3RyaW5nIG9mIHRoZSBwYXRoXG4gICAgLy8gcHJlZml4IHN1Y2ggYXM6XG4gICAgLy9cbiAgICAvLyBGb3IgcHJlZml4OiAvYmxvZ1xuICAgIC8vXG4gICAgLy8gICAvYmxvZyAtPiB0cnVlXG4gICAgLy8gICAvYmxvZy8gLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2cvMSAtPiB0cnVlXG4gICAgLy8gICAvYmxvZ2dpbmcgLT4gZmFsc2VcbiAgICAvLyAgIC9ibG9nZ2luZy8gLT4gZmFsc2VcbiAgICAvLyAgIC9ibG9nZ2luZy8xIC0+IGZhbHNlXG4gICAgaWYgKCFwYXRoSGFzUHJlZml4KHBhdGgsIHByZWZpeCkpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIC8vIFJlbW92ZSB0aGUgcHJlZml4IGZyb20gdGhlIHBhdGggdmlhIHNsaWNpbmcuXG4gICAgY29uc3Qgd2l0aG91dFByZWZpeCA9IHBhdGguc2xpY2UocHJlZml4Lmxlbmd0aCk7XG4gICAgLy8gSWYgdGhlIHBhdGggd2l0aG91dCB0aGUgcHJlZml4IHN0YXJ0cyB3aXRoIGEgYC9gIHdlIGNhbiByZXR1cm4gaXQgYXMgaXMuXG4gICAgaWYgKHdpdGhvdXRQcmVmaXguc3RhcnRzV2l0aChcIi9cIikpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhvdXRQcmVmaXg7XG4gICAgfVxuICAgIC8vIElmIHRoZSBwYXRoIHdpdGhvdXQgdGhlIHByZWZpeCBkb2Vzbid0IHN0YXJ0IHdpdGggYSBgL2Agd2UgbmVlZCB0byBhZGQgaXRcbiAgICAvLyBiYWNrIHRvIHRoZSBwYXRoIHRvIG1ha2Ugc3VyZSBpdCdzIGEgdmFsaWQgcGF0aC5cbiAgICByZXR1cm4gXCIvXCIgKyB3aXRob3V0UHJlZml4O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmUtcGF0aC1wcmVmaXguanMubWFwIl0sIm5hbWVzIjpbInBhdGhIYXNQcmVmaXgiLCJyZW1vdmVQYXRoUHJlZml4IiwicGF0aCIsInByZWZpeCIsIndpdGhvdXRQcmVmaXgiLCJzbGljZSIsImxlbmd0aCIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeTrailingSlash: () => (/* binding */ removeTrailingSlash)\n/* harmony export */ });\n/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n} //# sourceMappingURL=remove-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS10cmFpbGluZy1zbGFzaC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7OztDQU1DLEdBQVUsU0FBU0Esb0JBQW9CQyxLQUFLO0lBQ3pDLE9BQU9BLE1BQU1DLE9BQU8sQ0FBQyxPQUFPLE9BQU87QUFDdkMsRUFFQSxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS10cmFpbGluZy1zbGFzaC5qcz84MmJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVtb3ZlcyB0aGUgdHJhaWxpbmcgc2xhc2ggZm9yIGEgZ2l2ZW4gcm91dGUgb3IgcGFnZSBwYXRoLiBQcmVzZXJ2ZXMgdGhlXG4gKiByb290IHBhZ2UuIEV4YW1wbGVzOlxuICogICAtIGAvZm9vL2Jhci9gIC0+IGAvZm9vL2JhcmBcbiAqICAgLSBgL2Zvby9iYXJgIC0+IGAvZm9vL2JhcmBcbiAqICAgLSBgL2AgLT4gYC9gXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVRyYWlsaW5nU2xhc2gocm91dGUpIHtcbiAgICByZXR1cm4gcm91dGUucmVwbGFjZSgvXFwvJC8sIFwiXCIpIHx8IFwiL1wiO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmUtdHJhaWxpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbInJlbW92ZVRyYWlsaW5nU2xhc2giLCJyb3V0ZSIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/segment.js":
/*!**************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/segment.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isGroupSegment: () => (/* binding */ isGroupSegment)\n/* harmony export */ });\nfunction isGroupSegment(segment) {\n    // Use array[0] for performant purpose\n    return segment[0] === \"(\" && segment.endsWith(\")\");\n} //# sourceMappingURL=segment.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvc2VnbWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsZUFBZUMsT0FBTztJQUNsQyxzQ0FBc0M7SUFDdEMsT0FBT0EsT0FBTyxDQUFDLEVBQUUsS0FBSyxPQUFPQSxRQUFRQyxRQUFRLENBQUM7QUFDbEQsRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvc2VnbWVudC5qcz8zZmY0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0dyb3VwU2VnbWVudChzZWdtZW50KSB7XG4gICAgLy8gVXNlIGFycmF5WzBdIGZvciBwZXJmb3JtYW50IHB1cnBvc2VcbiAgICByZXR1cm4gc2VnbWVudFswXSA9PT0gXCIoXCIgJiYgc2VnbWVudC5lbmRzV2l0aChcIilcIik7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlZ21lbnQuanMubWFwIl0sIm5hbWVzIjpbImlzR3JvdXBTZWdtZW50Iiwic2VnbWVudCIsImVuZHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/segment.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerInsertedHTMLContext: () => (/* binding */ ServerInsertedHTMLContext),\n/* harmony export */   useServerInsertedHTML: () => (/* binding */ useServerInsertedHTML)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\n// Use `React.createContext` to avoid errors from the RSC checks because\n// it can't be imported directly in Server Components:\n//\n//   import { createContext } from 'react'\n//\n// More info: https://github.com/vercel/next.js/pull/40686\nconst ServerInsertedHTMLContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nfunction useServerInsertedHTML(callback) {\n    const addInsertedServerHTMLCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ServerInsertedHTMLContext);\n    // Should have no effects on client where there's no flush effects provider\n    if (addInsertedServerHTMLCallback) {\n        addInsertedServerHTMLCallback(callback);\n    }\n} //# sourceMappingURL=server-inserted-html.shared-runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvc2VydmVyLWluc2VydGVkLWh0bWwuc2hhcmVkLXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBRTBDO0FBQzFDLHdFQUF3RTtBQUN4RSxzREFBc0Q7QUFDdEQsRUFBRTtBQUNGLDBDQUEwQztBQUMxQyxFQUFFO0FBQ0YsMERBQTBEO0FBQ25ELE1BQU1FLDRCQUE0QixXQUFXLEdBQUdGLDBEQUFtQixDQUFDLE1BQU07QUFDMUUsU0FBU0ksc0JBQXNCQyxRQUFRO0lBQzFDLE1BQU1DLGdDQUFnQ0wsaURBQVVBLENBQUNDO0lBQ2pELDJFQUEyRTtJQUMzRSxJQUFJSSwrQkFBK0I7UUFDL0JBLDhCQUE4QkQ7SUFDbEM7QUFDSixFQUVBLCtEQUErRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZXJ2ZXItaW5zZXJ0ZWQtaHRtbC5zaGFyZWQtcnVudGltZS5qcz85NzU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuLy8gVXNlIGBSZWFjdC5jcmVhdGVDb250ZXh0YCB0byBhdm9pZCBlcnJvcnMgZnJvbSB0aGUgUlNDIGNoZWNrcyBiZWNhdXNlXG4vLyBpdCBjYW4ndCBiZSBpbXBvcnRlZCBkaXJlY3RseSBpbiBTZXJ2ZXIgQ29tcG9uZW50czpcbi8vXG4vLyAgIGltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCdcbi8vXG4vLyBNb3JlIGluZm86IGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9wdWxsLzQwNjg2XG5leHBvcnQgY29uc3QgU2VydmVySW5zZXJ0ZWRIVE1MQ29udGV4dCA9IC8qI19fUFVSRV9fKi8gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBmdW5jdGlvbiB1c2VTZXJ2ZXJJbnNlcnRlZEhUTUwoY2FsbGJhY2spIHtcbiAgICBjb25zdCBhZGRJbnNlcnRlZFNlcnZlckhUTUxDYWxsYmFjayA9IHVzZUNvbnRleHQoU2VydmVySW5zZXJ0ZWRIVE1MQ29udGV4dCk7XG4gICAgLy8gU2hvdWxkIGhhdmUgbm8gZWZmZWN0cyBvbiBjbGllbnQgd2hlcmUgdGhlcmUncyBubyBmbHVzaCBlZmZlY3RzIHByb3ZpZGVyXG4gICAgaWYgKGFkZEluc2VydGVkU2VydmVySFRNTENhbGxiYWNrKSB7XG4gICAgICAgIGFkZEluc2VydGVkU2VydmVySFRNTENhbGxiYWNrKGNhbGxiYWNrKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcnZlci1pbnNlcnRlZC1odG1sLnNoYXJlZC1ydW50aW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUNvbnRleHQiLCJTZXJ2ZXJJbnNlcnRlZEhUTUxDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsInVzZVNlcnZlckluc2VydGVkSFRNTCIsImNhbGxiYWNrIiwiYWRkSW5zZXJ0ZWRTZXJ2ZXJIVE1MQ2FsbGJhY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/headers.js":
/*!******************************************!*\
  !*** ../../node_modules/next/headers.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./dist/client/components/headers */ \"(middleware)/../../node_modules/next/dist/esm/client/components/headers.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6IjtBQUFBQSwwSkFBeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L2hlYWRlcnMuanM/ZDU4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9jbGllbnQvY29tcG9uZW50cy9oZWFkZXJzJylcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/headers.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/navigation.js":
/*!*********************************************!*\
  !*** ../../node_modules/next/navigation.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./dist/client/components/navigation */ \"(middleware)/../../node_modules/next/dist/esm/client/components/navigation.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6IjtBQUFBQSxnS0FBeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9uZXh0L25hdmlnYXRpb24uanM/YmRmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9jbGllbnQvY29tcG9uZW50cy9uYXZpZ2F0aW9uJylcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/next/navigation.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/no-case/dist.es2015/index.js":
/*!*******************************************************!*\
  !*** ../../node_modules/no-case/dist.es2015/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   noCase: () => (/* binding */ noCase)\n/* harmony export */ });\n/* harmony import */ var lower_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lower-case */ \"(middleware)/../../node_modules/lower-case/dist.es2015/index.js\");\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [\n    /([a-z0-9])([A-Z])/g,\n    /([A-Z])([A-Z][a-z])/g\n];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */ function noCase(input, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lower_case__WEBPACK_IMPORTED_MODULE_0__.lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\x00$2\"), stripRegexp, \"\\x00\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while(result.charAt(start) === \"\\x00\")start++;\n    while(result.charAt(end - 1) === \"\\x00\")end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\x00\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */ function replace(input, re, value) {\n    if (re instanceof RegExp) return input.replace(re, value);\n    return re.reduce(function(input, re) {\n        return input.replace(re, value);\n    }, input);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9uby1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDO0FBQ3ZDLG9GQUFvRjtBQUNwRixJQUFJQyx1QkFBdUI7SUFBQztJQUFzQjtDQUF1QjtBQUN6RSxrQ0FBa0M7QUFDbEMsSUFBSUMsdUJBQXVCO0FBQzNCOztDQUVDLEdBQ00sU0FBU0MsT0FBT0MsS0FBSyxFQUFFQyxPQUFPO0lBQ2pDLElBQUlBLFlBQVksS0FBSyxHQUFHO1FBQUVBLFVBQVUsQ0FBQztJQUFHO0lBQ3hDLElBQUlDLEtBQUtELFFBQVFFLFdBQVcsRUFBRUEsY0FBY0QsT0FBTyxLQUFLLElBQUlMLHVCQUF1QkssSUFBSUUsS0FBS0gsUUFBUUksV0FBVyxFQUFFQSxjQUFjRCxPQUFPLEtBQUssSUFBSU4sdUJBQXVCTSxJQUFJRSxLQUFLTCxRQUFRTSxTQUFTLEVBQUVBLFlBQVlELE9BQU8sS0FBSyxJQUFJVixpREFBU0EsR0FBR1UsSUFBSUUsS0FBS1AsUUFBUVEsU0FBUyxFQUFFQSxZQUFZRCxPQUFPLEtBQUssSUFBSSxNQUFNQTtJQUN4UyxJQUFJRSxTQUFTQyxRQUFRQSxRQUFRWCxPQUFPRyxhQUFhLGFBQVdFLGFBQWE7SUFDekUsSUFBSU8sUUFBUTtJQUNaLElBQUlDLE1BQU1ILE9BQU9JLE1BQU07SUFDdkIsb0RBQW9EO0lBQ3BELE1BQU9KLE9BQU9LLE1BQU0sQ0FBQ0gsV0FBVyxPQUM1QkE7SUFDSixNQUFPRixPQUFPSyxNQUFNLENBQUNGLE1BQU0sT0FBTyxPQUM5QkE7SUFDSixzQ0FBc0M7SUFDdEMsT0FBT0gsT0FBT00sS0FBSyxDQUFDSixPQUFPQyxLQUFLSSxLQUFLLENBQUMsUUFBTUMsR0FBRyxDQUFDWCxXQUFXWSxJQUFJLENBQUNWO0FBQ3BFO0FBQ0E7O0NBRUMsR0FDRCxTQUFTRSxRQUFRWCxLQUFLLEVBQUVvQixFQUFFLEVBQUVDLEtBQUs7SUFDN0IsSUFBSUQsY0FBY0UsUUFDZCxPQUFPdEIsTUFBTVcsT0FBTyxDQUFDUyxJQUFJQztJQUM3QixPQUFPRCxHQUFHRyxNQUFNLENBQUMsU0FBVXZCLEtBQUssRUFBRW9CLEVBQUU7UUFBSSxPQUFPcEIsTUFBTVcsT0FBTyxDQUFDUyxJQUFJQztJQUFRLEdBQUdyQjtBQUNoRixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL25vLWNhc2UvZGlzdC5lczIwMTUvaW5kZXguanM/MDQyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb3dlckNhc2UgfSBmcm9tIFwibG93ZXItY2FzZVwiO1xuLy8gU3VwcG9ydCBjYW1lbCBjYXNlIChcImNhbWVsQ2FzZVwiIC0+IFwiY2FtZWwgQ2FzZVwiIGFuZCBcIkNBTUVMQ2FzZVwiIC0+IFwiQ0FNRUwgQ2FzZVwiKS5cbnZhciBERUZBVUxUX1NQTElUX1JFR0VYUCA9IFsvKFthLXowLTldKShbQS1aXSkvZywgLyhbQS1aXSkoW0EtWl1bYS16XSkvZ107XG4vLyBSZW1vdmUgYWxsIG5vbi13b3JkIGNoYXJhY3RlcnMuXG52YXIgREVGQVVMVF9TVFJJUF9SRUdFWFAgPSAvW15BLVowLTldKy9naTtcbi8qKlxuICogTm9ybWFsaXplIHRoZSBzdHJpbmcgaW50byBzb21ldGhpbmcgb3RoZXIgbGlicmFyaWVzIGNhbiBtYW5pcHVsYXRlIGVhc2llci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vQ2FzZShpbnB1dCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgdmFyIF9hID0gb3B0aW9ucy5zcGxpdFJlZ2V4cCwgc3BsaXRSZWdleHAgPSBfYSA9PT0gdm9pZCAwID8gREVGQVVMVF9TUExJVF9SRUdFWFAgOiBfYSwgX2IgPSBvcHRpb25zLnN0cmlwUmVnZXhwLCBzdHJpcFJlZ2V4cCA9IF9iID09PSB2b2lkIDAgPyBERUZBVUxUX1NUUklQX1JFR0VYUCA6IF9iLCBfYyA9IG9wdGlvbnMudHJhbnNmb3JtLCB0cmFuc2Zvcm0gPSBfYyA9PT0gdm9pZCAwID8gbG93ZXJDYXNlIDogX2MsIF9kID0gb3B0aW9ucy5kZWxpbWl0ZXIsIGRlbGltaXRlciA9IF9kID09PSB2b2lkIDAgPyBcIiBcIiA6IF9kO1xuICAgIHZhciByZXN1bHQgPSByZXBsYWNlKHJlcGxhY2UoaW5wdXQsIHNwbGl0UmVnZXhwLCBcIiQxXFwwJDJcIiksIHN0cmlwUmVnZXhwLCBcIlxcMFwiKTtcbiAgICB2YXIgc3RhcnQgPSAwO1xuICAgIHZhciBlbmQgPSByZXN1bHQubGVuZ3RoO1xuICAgIC8vIFRyaW0gdGhlIGRlbGltaXRlciBmcm9tIGFyb3VuZCB0aGUgb3V0cHV0IHN0cmluZy5cbiAgICB3aGlsZSAocmVzdWx0LmNoYXJBdChzdGFydCkgPT09IFwiXFwwXCIpXG4gICAgICAgIHN0YXJ0Kys7XG4gICAgd2hpbGUgKHJlc3VsdC5jaGFyQXQoZW5kIC0gMSkgPT09IFwiXFwwXCIpXG4gICAgICAgIGVuZC0tO1xuICAgIC8vIFRyYW5zZm9ybSBlYWNoIHRva2VuIGluZGVwZW5kZW50bHkuXG4gICAgcmV0dXJuIHJlc3VsdC5zbGljZShzdGFydCwgZW5kKS5zcGxpdChcIlxcMFwiKS5tYXAodHJhbnNmb3JtKS5qb2luKGRlbGltaXRlcik7XG59XG4vKipcbiAqIFJlcGxhY2UgYHJlYCBpbiB0aGUgaW5wdXQgc3RyaW5nIHdpdGggdGhlIHJlcGxhY2VtZW50IHZhbHVlLlxuICovXG5mdW5jdGlvbiByZXBsYWNlKGlucHV0LCByZSwgdmFsdWUpIHtcbiAgICBpZiAocmUgaW5zdGFuY2VvZiBSZWdFeHApXG4gICAgICAgIHJldHVybiBpbnB1dC5yZXBsYWNlKHJlLCB2YWx1ZSk7XG4gICAgcmV0dXJuIHJlLnJlZHVjZShmdW5jdGlvbiAoaW5wdXQsIHJlKSB7IHJldHVybiBpbnB1dC5yZXBsYWNlKHJlLCB2YWx1ZSk7IH0sIGlucHV0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJsb3dlckNhc2UiLCJERUZBVUxUX1NQTElUX1JFR0VYUCIsIkRFRkFVTFRfU1RSSVBfUkVHRVhQIiwibm9DYXNlIiwiaW5wdXQiLCJvcHRpb25zIiwiX2EiLCJzcGxpdFJlZ2V4cCIsIl9iIiwic3RyaXBSZWdleHAiLCJfYyIsInRyYW5zZm9ybSIsIl9kIiwiZGVsaW1pdGVyIiwicmVzdWx0IiwicmVwbGFjZSIsInN0YXJ0IiwiZW5kIiwibGVuZ3RoIiwiY2hhckF0Iiwic2xpY2UiLCJzcGxpdCIsIm1hcCIsImpvaW4iLCJyZSIsInZhbHVlIiwiUmVnRXhwIiwicmVkdWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/no-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/path-to-regexp/dist.es2015/index.js":
/*!**************************************************************!*\
  !*** ../../node_modules/path-to-regexp/dist.es2015/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compile: () => (/* binding */ compile),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   pathToRegexp: () => (/* binding */ pathToRegexp),\n/* harmony export */   regexpToFunction: () => (/* binding */ regexpToFunction),\n/* harmony export */   tokensToFunction: () => (/* binding */ tokensToFunction),\n/* harmony export */   tokensToRegexp: () => (/* binding */ tokensToRegexp)\n/* harmony export */ });\n/**\n * Tokenize input string.\n */ function lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while(i < str.length){\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({\n                type: \"MODIFIER\",\n                index: i,\n                value: str[i++]\n            });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({\n                type: \"ESCAPED_CHAR\",\n                index: i++,\n                value: str[i++]\n            });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({\n                type: \"OPEN\",\n                index: i,\n                value: str[i++]\n            });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({\n                type: \"CLOSE\",\n                index: i,\n                value: str[i++]\n            });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while(j < str.length){\n                var code = str.charCodeAt(j);\n                if (// `0-9`\n                code >= 48 && code <= 57 || // `A-Z`\n                code >= 65 && code <= 90 || // `a-z`\n                code >= 97 && code <= 122 || // `_`\n                code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name) throw new TypeError(\"Missing parameter name at \".concat(i));\n            tokens.push({\n                type: \"NAME\",\n                index: i,\n                value: name\n            });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError('Pattern cannot start with \"?\" at '.concat(j));\n            }\n            while(j < str.length){\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                } else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count) throw new TypeError(\"Unbalanced pattern at \".concat(i));\n            if (!pattern) throw new TypeError(\"Missing pattern at \".concat(i));\n            tokens.push({\n                type: \"PATTERN\",\n                index: i,\n                value: pattern\n            });\n            i = j;\n            continue;\n        }\n        tokens.push({\n            type: \"CHAR\",\n            index: i,\n            value: str[i++]\n        });\n    }\n    tokens.push({\n        type: \"END\",\n        index: i,\n        value: \"\"\n    });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */ function parse(str, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function(type) {\n        if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n    };\n    var mustConsume = function(type) {\n        var value = tryConsume(type);\n        if (value !== undefined) return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n    };\n    var consumeText = function() {\n        var result = \"\";\n        var value;\n        while(value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\")){\n            result += value;\n        }\n        return result;\n    };\n    while(i < tokens.length){\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */ function compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */ function tokensToFunction(tokens, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function(x) {\n        return x;\n    } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function(token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n        }\n    });\n    return function(data) {\n        var path = \"\";\n        for(var i = 0; i < tokens.length; i++){\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError('Expected \"'.concat(token.name, '\" to not repeat, but got an array'));\n                }\n                if (value.length === 0) {\n                    if (optional) continue;\n                    throw new TypeError('Expected \"'.concat(token.name, '\" to not be empty'));\n                }\n                for(var j = 0; j < value.length; j++){\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError('Expected all \"'.concat(token.name, '\" to match \"').concat(token.pattern, '\", but got \"').concat(segment, '\"'));\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError('Expected \"'.concat(token.name, '\" to match \"').concat(token.pattern, '\", but got \"').concat(segment, '\"'));\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional) continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError('Expected \"'.concat(token.name, '\" to be ').concat(typeOfMessage));\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */ function match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */ function regexpToFunction(re, keys, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _a = options.decode, decode = _a === void 0 ? function(x) {\n        return x;\n    } : _a;\n    return function(pathname) {\n        var m = re.exec(pathname);\n        if (!m) return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function(i) {\n            if (m[i] === undefined) return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function(value) {\n                    return decode(value, key);\n                });\n            } else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for(var i = 1; i < m.length; i++){\n            _loop_1(i);\n        }\n        return {\n            path: path,\n            index: index,\n            params: params\n        };\n    };\n}\n/**\n * Escape a regular expression string.\n */ function escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */ function flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */ function regexpToRegexp(path, keys) {\n    if (!keys) return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while(execResult){\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\"\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */ function arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function(path) {\n        return pathToRegexp(path, keys, options).source;\n    });\n    return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */ function stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */ function tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function(x) {\n        return x;\n    } : _d, _e = options.delimiter, delimiter = _e === void 0 ? \"/#?\" : _e, _f = options.endsWith, endsWith = _f === void 0 ? \"\" : _f;\n    var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n    var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for(var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++){\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        } else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys) keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n                    } else {\n                        route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n                    }\n                } else {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n                    } else {\n                        route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n                    }\n                }\n            } else {\n                route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n            }\n        }\n    }\n    if (end) {\n        if (!strict) route += \"\".concat(delimiterRe, \"?\");\n        route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n    } else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\" ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1 : endToken === undefined;\n        if (!strict) {\n            route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */ function pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp) return regexpToRegexp(path, keys);\n    if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9wYXRoLXRvLXJlZ2V4cC9kaXN0LmVzMjAxNS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FDRCxTQUFTQSxNQUFNQyxHQUFHO0lBQ2QsSUFBSUMsU0FBUyxFQUFFO0lBQ2YsSUFBSUMsSUFBSTtJQUNSLE1BQU9BLElBQUlGLElBQUlHLE1BQU0sQ0FBRTtRQUNuQixJQUFJQyxPQUFPSixHQUFHLENBQUNFLEVBQUU7UUFDakIsSUFBSUUsU0FBUyxPQUFPQSxTQUFTLE9BQU9BLFNBQVMsS0FBSztZQUM5Q0gsT0FBT0ksSUFBSSxDQUFDO2dCQUFFQyxNQUFNO2dCQUFZQyxPQUFPTDtnQkFBR00sT0FBT1IsR0FBRyxDQUFDRSxJQUFJO1lBQUM7WUFDMUQ7UUFDSjtRQUNBLElBQUlFLFNBQVMsTUFBTTtZQUNmSCxPQUFPSSxJQUFJLENBQUM7Z0JBQUVDLE1BQU07Z0JBQWdCQyxPQUFPTDtnQkFBS00sT0FBT1IsR0FBRyxDQUFDRSxJQUFJO1lBQUM7WUFDaEU7UUFDSjtRQUNBLElBQUlFLFNBQVMsS0FBSztZQUNkSCxPQUFPSSxJQUFJLENBQUM7Z0JBQUVDLE1BQU07Z0JBQVFDLE9BQU9MO2dCQUFHTSxPQUFPUixHQUFHLENBQUNFLElBQUk7WUFBQztZQUN0RDtRQUNKO1FBQ0EsSUFBSUUsU0FBUyxLQUFLO1lBQ2RILE9BQU9JLElBQUksQ0FBQztnQkFBRUMsTUFBTTtnQkFBU0MsT0FBT0w7Z0JBQUdNLE9BQU9SLEdBQUcsQ0FBQ0UsSUFBSTtZQUFDO1lBQ3ZEO1FBQ0o7UUFDQSxJQUFJRSxTQUFTLEtBQUs7WUFDZCxJQUFJSyxPQUFPO1lBQ1gsSUFBSUMsSUFBSVIsSUFBSTtZQUNaLE1BQU9RLElBQUlWLElBQUlHLE1BQU0sQ0FBRTtnQkFDbkIsSUFBSVEsT0FBT1gsSUFBSVksVUFBVSxDQUFDRjtnQkFDMUIsSUFFQSxRQURRO2dCQUNQQyxRQUFRLE1BQU1BLFFBQVEsTUFDbkIsUUFBUTtnQkFDUEEsUUFBUSxNQUFNQSxRQUFRLE1BQ3ZCLFFBQVE7Z0JBQ1BBLFFBQVEsTUFBTUEsUUFBUSxPQUN2QixNQUFNO2dCQUNOQSxTQUFTLElBQUk7b0JBQ2JGLFFBQVFULEdBQUcsQ0FBQ1UsSUFBSTtvQkFDaEI7Z0JBQ0o7Z0JBQ0E7WUFDSjtZQUNBLElBQUksQ0FBQ0QsTUFDRCxNQUFNLElBQUlJLFVBQVUsNkJBQTZCQyxNQUFNLENBQUNaO1lBQzVERCxPQUFPSSxJQUFJLENBQUM7Z0JBQUVDLE1BQU07Z0JBQVFDLE9BQU9MO2dCQUFHTSxPQUFPQztZQUFLO1lBQ2xEUCxJQUFJUTtZQUNKO1FBQ0o7UUFDQSxJQUFJTixTQUFTLEtBQUs7WUFDZCxJQUFJVyxRQUFRO1lBQ1osSUFBSUMsVUFBVTtZQUNkLElBQUlOLElBQUlSLElBQUk7WUFDWixJQUFJRixHQUFHLENBQUNVLEVBQUUsS0FBSyxLQUFLO2dCQUNoQixNQUFNLElBQUlHLFVBQVUsb0NBQXNDQyxNQUFNLENBQUNKO1lBQ3JFO1lBQ0EsTUFBT0EsSUFBSVYsSUFBSUcsTUFBTSxDQUFFO2dCQUNuQixJQUFJSCxHQUFHLENBQUNVLEVBQUUsS0FBSyxNQUFNO29CQUNqQk0sV0FBV2hCLEdBQUcsQ0FBQ1UsSUFBSSxHQUFHVixHQUFHLENBQUNVLElBQUk7b0JBQzlCO2dCQUNKO2dCQUNBLElBQUlWLEdBQUcsQ0FBQ1UsRUFBRSxLQUFLLEtBQUs7b0JBQ2hCSztvQkFDQSxJQUFJQSxVQUFVLEdBQUc7d0JBQ2JMO3dCQUNBO29CQUNKO2dCQUNKLE9BQ0ssSUFBSVYsR0FBRyxDQUFDVSxFQUFFLEtBQUssS0FBSztvQkFDckJLO29CQUNBLElBQUlmLEdBQUcsQ0FBQ1UsSUFBSSxFQUFFLEtBQUssS0FBSzt3QkFDcEIsTUFBTSxJQUFJRyxVQUFVLHVDQUF1Q0MsTUFBTSxDQUFDSjtvQkFDdEU7Z0JBQ0o7Z0JBQ0FNLFdBQVdoQixHQUFHLENBQUNVLElBQUk7WUFDdkI7WUFDQSxJQUFJSyxPQUNBLE1BQU0sSUFBSUYsVUFBVSx5QkFBeUJDLE1BQU0sQ0FBQ1o7WUFDeEQsSUFBSSxDQUFDYyxTQUNELE1BQU0sSUFBSUgsVUFBVSxzQkFBc0JDLE1BQU0sQ0FBQ1o7WUFDckRELE9BQU9JLElBQUksQ0FBQztnQkFBRUMsTUFBTTtnQkFBV0MsT0FBT0w7Z0JBQUdNLE9BQU9RO1lBQVE7WUFDeERkLElBQUlRO1lBQ0o7UUFDSjtRQUNBVCxPQUFPSSxJQUFJLENBQUM7WUFBRUMsTUFBTTtZQUFRQyxPQUFPTDtZQUFHTSxPQUFPUixHQUFHLENBQUNFLElBQUk7UUFBQztJQUMxRDtJQUNBRCxPQUFPSSxJQUFJLENBQUM7UUFBRUMsTUFBTTtRQUFPQyxPQUFPTDtRQUFHTSxPQUFPO0lBQUc7SUFDL0MsT0FBT1A7QUFDWDtBQUNBOztDQUVDLEdBQ00sU0FBU2dCLE1BQU1qQixHQUFHLEVBQUVrQixPQUFPO0lBQzlCLElBQUlBLFlBQVksS0FBSyxHQUFHO1FBQUVBLFVBQVUsQ0FBQztJQUFHO0lBQ3hDLElBQUlqQixTQUFTRixNQUFNQztJQUNuQixJQUFJbUIsS0FBS0QsUUFBUUUsUUFBUSxFQUFFQSxXQUFXRCxPQUFPLEtBQUssSUFBSSxPQUFPQTtJQUM3RCxJQUFJRSxpQkFBaUIsS0FBS1AsTUFBTSxDQUFDUSxhQUFhSixRQUFRSyxTQUFTLElBQUksUUFBUTtJQUMzRSxJQUFJQyxTQUFTLEVBQUU7SUFDZixJQUFJQyxNQUFNO0lBQ1YsSUFBSXZCLElBQUk7SUFDUixJQUFJd0IsT0FBTztJQUNYLElBQUlDLGFBQWEsU0FBVXJCLElBQUk7UUFDM0IsSUFBSUosSUFBSUQsT0FBT0UsTUFBTSxJQUFJRixNQUFNLENBQUNDLEVBQUUsQ0FBQ0ksSUFBSSxLQUFLQSxNQUN4QyxPQUFPTCxNQUFNLENBQUNDLElBQUksQ0FBQ00sS0FBSztJQUNoQztJQUNBLElBQUlvQixjQUFjLFNBQVV0QixJQUFJO1FBQzVCLElBQUlFLFFBQVFtQixXQUFXckI7UUFDdkIsSUFBSUUsVUFBVXFCLFdBQ1YsT0FBT3JCO1FBQ1gsSUFBSVcsS0FBS2xCLE1BQU0sQ0FBQ0MsRUFBRSxFQUFFNEIsV0FBV1gsR0FBR2IsSUFBSSxFQUFFQyxRQUFRWSxHQUFHWixLQUFLO1FBQ3hELE1BQU0sSUFBSU0sVUFBVSxjQUFjQyxNQUFNLENBQUNnQixVQUFVLFFBQVFoQixNQUFNLENBQUNQLE9BQU8sZUFBZU8sTUFBTSxDQUFDUjtJQUNuRztJQUNBLElBQUl5QixjQUFjO1FBQ2QsSUFBSVAsU0FBUztRQUNiLElBQUloQjtRQUNKLE1BQVFBLFFBQVFtQixXQUFXLFdBQVdBLFdBQVcsZ0JBQWtCO1lBQy9ESCxVQUFVaEI7UUFDZDtRQUNBLE9BQU9nQjtJQUNYO0lBQ0EsTUFBT3RCLElBQUlELE9BQU9FLE1BQU0sQ0FBRTtRQUN0QixJQUFJQyxPQUFPdUIsV0FBVztRQUN0QixJQUFJbEIsT0FBT2tCLFdBQVc7UUFDdEIsSUFBSVgsVUFBVVcsV0FBVztRQUN6QixJQUFJbEIsUUFBUU8sU0FBUztZQUNqQixJQUFJZ0IsU0FBUzVCLFFBQVE7WUFDckIsSUFBSWdCLFNBQVNhLE9BQU8sQ0FBQ0QsWUFBWSxDQUFDLEdBQUc7Z0JBQ2pDTixRQUFRTTtnQkFDUkEsU0FBUztZQUNiO1lBQ0EsSUFBSU4sTUFBTTtnQkFDTkYsT0FBT25CLElBQUksQ0FBQ3FCO2dCQUNaQSxPQUFPO1lBQ1g7WUFDQUYsT0FBT25CLElBQUksQ0FBQztnQkFDUkksTUFBTUEsUUFBUWdCO2dCQUNkTyxRQUFRQTtnQkFDUkUsUUFBUTtnQkFDUmxCLFNBQVNBLFdBQVdLO2dCQUNwQmMsVUFBVVIsV0FBVyxlQUFlO1lBQ3hDO1lBQ0E7UUFDSjtRQUNBLElBQUluQixRQUFRSixRQUFRdUIsV0FBVztRQUMvQixJQUFJbkIsT0FBTztZQUNQa0IsUUFBUWxCO1lBQ1I7UUFDSjtRQUNBLElBQUlrQixNQUFNO1lBQ05GLE9BQU9uQixJQUFJLENBQUNxQjtZQUNaQSxPQUFPO1FBQ1g7UUFDQSxJQUFJVSxPQUFPVCxXQUFXO1FBQ3RCLElBQUlTLE1BQU07WUFDTixJQUFJSixTQUFTRDtZQUNiLElBQUlNLFNBQVNWLFdBQVcsV0FBVztZQUNuQyxJQUFJVyxZQUFZWCxXQUFXLGNBQWM7WUFDekMsSUFBSU8sU0FBU0g7WUFDYkgsWUFBWTtZQUNaSixPQUFPbkIsSUFBSSxDQUFDO2dCQUNSSSxNQUFNNEIsVUFBV0MsQ0FBQUEsWUFBWWIsUUFBUSxFQUFDO2dCQUN0Q1QsU0FBU3FCLFVBQVUsQ0FBQ0MsWUFBWWpCLGlCQUFpQmlCO2dCQUNqRE4sUUFBUUE7Z0JBQ1JFLFFBQVFBO2dCQUNSQyxVQUFVUixXQUFXLGVBQWU7WUFDeEM7WUFDQTtRQUNKO1FBQ0FDLFlBQVk7SUFDaEI7SUFDQSxPQUFPSjtBQUNYO0FBQ0E7O0NBRUMsR0FDTSxTQUFTZSxRQUFRdkMsR0FBRyxFQUFFa0IsT0FBTztJQUNoQyxPQUFPc0IsaUJBQWlCdkIsTUFBTWpCLEtBQUtrQixVQUFVQTtBQUNqRDtBQUNBOztDQUVDLEdBQ00sU0FBU3NCLGlCQUFpQnZDLE1BQU0sRUFBRWlCLE9BQU87SUFDNUMsSUFBSUEsWUFBWSxLQUFLLEdBQUc7UUFBRUEsVUFBVSxDQUFDO0lBQUc7SUFDeEMsSUFBSXVCLFVBQVVDLE1BQU14QjtJQUNwQixJQUFJQyxLQUFLRCxRQUFReUIsTUFBTSxFQUFFQSxTQUFTeEIsT0FBTyxLQUFLLElBQUksU0FBVXlCLENBQUM7UUFBSSxPQUFPQTtJQUFHLElBQUl6QixJQUFJMEIsS0FBSzNCLFFBQVE0QixRQUFRLEVBQUVBLFdBQVdELE9BQU8sS0FBSyxJQUFJLE9BQU9BO0lBQzVJLHVDQUF1QztJQUN2QyxJQUFJRSxVQUFVOUMsT0FBTytDLEdBQUcsQ0FBQyxTQUFVQyxLQUFLO1FBQ3BDLElBQUksT0FBT0EsVUFBVSxVQUFVO1lBQzNCLE9BQU8sSUFBSUMsT0FBTyxPQUFPcEMsTUFBTSxDQUFDbUMsTUFBTWpDLE9BQU8sRUFBRSxPQUFPeUI7UUFDMUQ7SUFDSjtJQUNBLE9BQU8sU0FBVVUsSUFBSTtRQUNqQixJQUFJekIsT0FBTztRQUNYLElBQUssSUFBSXhCLElBQUksR0FBR0EsSUFBSUQsT0FBT0UsTUFBTSxFQUFFRCxJQUFLO1lBQ3BDLElBQUkrQyxRQUFRaEQsTUFBTSxDQUFDQyxFQUFFO1lBQ3JCLElBQUksT0FBTytDLFVBQVUsVUFBVTtnQkFDM0J2QixRQUFRdUI7Z0JBQ1I7WUFDSjtZQUNBLElBQUl6QyxRQUFRMkMsT0FBT0EsSUFBSSxDQUFDRixNQUFNeEMsSUFBSSxDQUFDLEdBQUdvQjtZQUN0QyxJQUFJdUIsV0FBV0gsTUFBTWQsUUFBUSxLQUFLLE9BQU9jLE1BQU1kLFFBQVEsS0FBSztZQUM1RCxJQUFJa0IsU0FBU0osTUFBTWQsUUFBUSxLQUFLLE9BQU9jLE1BQU1kLFFBQVEsS0FBSztZQUMxRCxJQUFJbUIsTUFBTUMsT0FBTyxDQUFDL0MsUUFBUTtnQkFDdEIsSUFBSSxDQUFDNkMsUUFBUTtvQkFDVCxNQUFNLElBQUl4QyxVQUFVLGFBQWNDLE1BQU0sQ0FBQ21DLE1BQU14QyxJQUFJLEVBQUU7Z0JBQ3pEO2dCQUNBLElBQUlELE1BQU1MLE1BQU0sS0FBSyxHQUFHO29CQUNwQixJQUFJaUQsVUFDQTtvQkFDSixNQUFNLElBQUl2QyxVQUFVLGFBQWNDLE1BQU0sQ0FBQ21DLE1BQU14QyxJQUFJLEVBQUU7Z0JBQ3pEO2dCQUNBLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJRixNQUFNTCxNQUFNLEVBQUVPLElBQUs7b0JBQ25DLElBQUk4QyxVQUFVYixPQUFPbkMsS0FBSyxDQUFDRSxFQUFFLEVBQUV1QztvQkFDL0IsSUFBSUgsWUFBWSxDQUFDQyxPQUFPLENBQUM3QyxFQUFFLENBQUN1RCxJQUFJLENBQUNELFVBQVU7d0JBQ3ZDLE1BQU0sSUFBSTNDLFVBQVUsaUJBQWtCQyxNQUFNLENBQUNtQyxNQUFNeEMsSUFBSSxFQUFFLGdCQUFrQkssTUFBTSxDQUFDbUMsTUFBTWpDLE9BQU8sRUFBRSxnQkFBa0JGLE1BQU0sQ0FBQzBDLFNBQVM7b0JBQ3ZJO29CQUNBOUIsUUFBUXVCLE1BQU1qQixNQUFNLEdBQUd3QixVQUFVUCxNQUFNZixNQUFNO2dCQUNqRDtnQkFDQTtZQUNKO1lBQ0EsSUFBSSxPQUFPMUIsVUFBVSxZQUFZLE9BQU9BLFVBQVUsVUFBVTtnQkFDeEQsSUFBSWdELFVBQVViLE9BQU9lLE9BQU9sRCxRQUFReUM7Z0JBQ3BDLElBQUlILFlBQVksQ0FBQ0MsT0FBTyxDQUFDN0MsRUFBRSxDQUFDdUQsSUFBSSxDQUFDRCxVQUFVO29CQUN2QyxNQUFNLElBQUkzQyxVQUFVLGFBQWNDLE1BQU0sQ0FBQ21DLE1BQU14QyxJQUFJLEVBQUUsZ0JBQWtCSyxNQUFNLENBQUNtQyxNQUFNakMsT0FBTyxFQUFFLGdCQUFrQkYsTUFBTSxDQUFDMEMsU0FBUztnQkFDbkk7Z0JBQ0E5QixRQUFRdUIsTUFBTWpCLE1BQU0sR0FBR3dCLFVBQVVQLE1BQU1mLE1BQU07Z0JBQzdDO1lBQ0o7WUFDQSxJQUFJa0IsVUFDQTtZQUNKLElBQUlPLGdCQUFnQk4sU0FBUyxhQUFhO1lBQzFDLE1BQU0sSUFBSXhDLFVBQVUsYUFBY0MsTUFBTSxDQUFDbUMsTUFBTXhDLElBQUksRUFBRSxZQUFhSyxNQUFNLENBQUM2QztRQUM3RTtRQUNBLE9BQU9qQztJQUNYO0FBQ0o7QUFDQTs7Q0FFQyxHQUNNLFNBQVNrQyxNQUFNNUQsR0FBRyxFQUFFa0IsT0FBTztJQUM5QixJQUFJMkMsT0FBTyxFQUFFO0lBQ2IsSUFBSUMsS0FBS0MsYUFBYS9ELEtBQUs2RCxNQUFNM0M7SUFDakMsT0FBTzhDLGlCQUFpQkYsSUFBSUQsTUFBTTNDO0FBQ3RDO0FBQ0E7O0NBRUMsR0FDTSxTQUFTOEMsaUJBQWlCRixFQUFFLEVBQUVELElBQUksRUFBRTNDLE9BQU87SUFDOUMsSUFBSUEsWUFBWSxLQUFLLEdBQUc7UUFBRUEsVUFBVSxDQUFDO0lBQUc7SUFDeEMsSUFBSUMsS0FBS0QsUUFBUStDLE1BQU0sRUFBRUEsU0FBUzlDLE9BQU8sS0FBSyxJQUFJLFNBQVV5QixDQUFDO1FBQUksT0FBT0E7SUFBRyxJQUFJekI7SUFDL0UsT0FBTyxTQUFVK0MsUUFBUTtRQUNyQixJQUFJQyxJQUFJTCxHQUFHTSxJQUFJLENBQUNGO1FBQ2hCLElBQUksQ0FBQ0MsR0FDRCxPQUFPO1FBQ1gsSUFBSXpDLE9BQU95QyxDQUFDLENBQUMsRUFBRSxFQUFFNUQsUUFBUTRELEVBQUU1RCxLQUFLO1FBQ2hDLElBQUk4RCxTQUFTQyxPQUFPQyxNQUFNLENBQUM7UUFDM0IsSUFBSUMsVUFBVSxTQUFVdEUsQ0FBQztZQUNyQixJQUFJaUUsQ0FBQyxDQUFDakUsRUFBRSxLQUFLMkIsV0FDVCxPQUFPO1lBQ1gsSUFBSUosTUFBTW9DLElBQUksQ0FBQzNELElBQUksRUFBRTtZQUNyQixJQUFJdUIsSUFBSVUsUUFBUSxLQUFLLE9BQU9WLElBQUlVLFFBQVEsS0FBSyxLQUFLO2dCQUM5Q2tDLE1BQU0sQ0FBQzVDLElBQUloQixJQUFJLENBQUMsR0FBRzBELENBQUMsQ0FBQ2pFLEVBQUUsQ0FBQ3VFLEtBQUssQ0FBQ2hELElBQUlPLE1BQU0sR0FBR1AsSUFBSVMsTUFBTSxFQUFFYyxHQUFHLENBQUMsU0FBVXhDLEtBQUs7b0JBQ3RFLE9BQU95RCxPQUFPekQsT0FBT2lCO2dCQUN6QjtZQUNKLE9BQ0s7Z0JBQ0Q0QyxNQUFNLENBQUM1QyxJQUFJaEIsSUFBSSxDQUFDLEdBQUd3RCxPQUFPRSxDQUFDLENBQUNqRSxFQUFFLEVBQUV1QjtZQUNwQztRQUNKO1FBQ0EsSUFBSyxJQUFJdkIsSUFBSSxHQUFHQSxJQUFJaUUsRUFBRWhFLE1BQU0sRUFBRUQsSUFBSztZQUMvQnNFLFFBQVF0RTtRQUNaO1FBQ0EsT0FBTztZQUFFd0IsTUFBTUE7WUFBTW5CLE9BQU9BO1lBQU84RCxRQUFRQTtRQUFPO0lBQ3REO0FBQ0o7QUFDQTs7Q0FFQyxHQUNELFNBQVMvQyxhQUFhdEIsR0FBRztJQUNyQixPQUFPQSxJQUFJMEUsT0FBTyxDQUFDLDZCQUE2QjtBQUNwRDtBQUNBOztDQUVDLEdBQ0QsU0FBU2hDLE1BQU14QixPQUFPO0lBQ2xCLE9BQU9BLFdBQVdBLFFBQVF5RCxTQUFTLEdBQUcsS0FBSztBQUMvQztBQUNBOztDQUVDLEdBQ0QsU0FBU0MsZUFBZWxELElBQUksRUFBRW1DLElBQUk7SUFDOUIsSUFBSSxDQUFDQSxNQUNELE9BQU9uQztJQUNYLElBQUltRCxjQUFjO0lBQ2xCLElBQUl0RSxRQUFRO0lBQ1osSUFBSXVFLGFBQWFELFlBQVlULElBQUksQ0FBQzFDLEtBQUtxRCxNQUFNO0lBQzdDLE1BQU9ELFdBQVk7UUFDZmpCLEtBQUt4RCxJQUFJLENBQUM7WUFDTixrRUFBa0U7WUFDbEVJLE1BQU1xRSxVQUFVLENBQUMsRUFBRSxJQUFJdkU7WUFDdkJ5QixRQUFRO1lBQ1JFLFFBQVE7WUFDUkMsVUFBVTtZQUNWbkIsU0FBUztRQUNiO1FBQ0E4RCxhQUFhRCxZQUFZVCxJQUFJLENBQUMxQyxLQUFLcUQsTUFBTTtJQUM3QztJQUNBLE9BQU9yRDtBQUNYO0FBQ0E7O0NBRUMsR0FDRCxTQUFTc0QsY0FBY0MsS0FBSyxFQUFFcEIsSUFBSSxFQUFFM0MsT0FBTztJQUN2QyxJQUFJZ0UsUUFBUUQsTUFBTWpDLEdBQUcsQ0FBQyxTQUFVdEIsSUFBSTtRQUFJLE9BQU9xQyxhQUFhckMsTUFBTW1DLE1BQU0zQyxTQUFTNkQsTUFBTTtJQUFFO0lBQ3pGLE9BQU8sSUFBSTdCLE9BQU8sTUFBTXBDLE1BQU0sQ0FBQ29FLE1BQU1DLElBQUksQ0FBQyxNQUFNLE1BQU16QyxNQUFNeEI7QUFDaEU7QUFDQTs7Q0FFQyxHQUNELFNBQVNrRSxlQUFlMUQsSUFBSSxFQUFFbUMsSUFBSSxFQUFFM0MsT0FBTztJQUN2QyxPQUFPbUUsZUFBZXBFLE1BQU1TLE1BQU1SLFVBQVUyQyxNQUFNM0M7QUFDdEQ7QUFDQTs7Q0FFQyxHQUNNLFNBQVNtRSxlQUFlcEYsTUFBTSxFQUFFNEQsSUFBSSxFQUFFM0MsT0FBTztJQUNoRCxJQUFJQSxZQUFZLEtBQUssR0FBRztRQUFFQSxVQUFVLENBQUM7SUFBRztJQUN4QyxJQUFJQyxLQUFLRCxRQUFRb0UsTUFBTSxFQUFFQSxTQUFTbkUsT0FBTyxLQUFLLElBQUksUUFBUUEsSUFBSTBCLEtBQUszQixRQUFRcUUsS0FBSyxFQUFFQSxRQUFRMUMsT0FBTyxLQUFLLElBQUksT0FBT0EsSUFBSTJDLEtBQUt0RSxRQUFRdUUsR0FBRyxFQUFFQSxNQUFNRCxPQUFPLEtBQUssSUFBSSxPQUFPQSxJQUFJRSxLQUFLeEUsUUFBUXlCLE1BQU0sRUFBRUEsU0FBUytDLE9BQU8sS0FBSyxJQUFJLFNBQVU5QyxDQUFDO1FBQUksT0FBT0E7SUFBRyxJQUFJOEMsSUFBSUMsS0FBS3pFLFFBQVFLLFNBQVMsRUFBRUEsWUFBWW9FLE9BQU8sS0FBSyxJQUFJLFFBQVFBLElBQUlDLEtBQUsxRSxRQUFRMkUsUUFBUSxFQUFFQSxXQUFXRCxPQUFPLEtBQUssSUFBSSxLQUFLQTtJQUM5VyxJQUFJRSxhQUFhLElBQUloRixNQUFNLENBQUNRLGFBQWF1RSxXQUFXO0lBQ3BELElBQUlFLGNBQWMsSUFBSWpGLE1BQU0sQ0FBQ1EsYUFBYUMsWUFBWTtJQUN0RCxJQUFJeUUsUUFBUVQsUUFBUSxNQUFNO0lBQzFCLHdEQUF3RDtJQUN4RCxJQUFLLElBQUlVLEtBQUssR0FBR0MsV0FBV2pHLFFBQVFnRyxLQUFLQyxTQUFTL0YsTUFBTSxFQUFFOEYsS0FBTTtRQUM1RCxJQUFJaEQsUUFBUWlELFFBQVEsQ0FBQ0QsR0FBRztRQUN4QixJQUFJLE9BQU9oRCxVQUFVLFVBQVU7WUFDM0IrQyxTQUFTMUUsYUFBYXFCLE9BQU9NO1FBQ2pDLE9BQ0s7WUFDRCxJQUFJakIsU0FBU1YsYUFBYXFCLE9BQU9NLE1BQU1qQixNQUFNO1lBQzdDLElBQUlFLFNBQVNaLGFBQWFxQixPQUFPTSxNQUFNZixNQUFNO1lBQzdDLElBQUllLE1BQU1qQyxPQUFPLEVBQUU7Z0JBQ2YsSUFBSTZDLE1BQ0FBLEtBQUt4RCxJQUFJLENBQUM0QztnQkFDZCxJQUFJakIsVUFBVUUsUUFBUTtvQkFDbEIsSUFBSWUsTUFBTWQsUUFBUSxLQUFLLE9BQU9jLE1BQU1kLFFBQVEsS0FBSyxLQUFLO3dCQUNsRCxJQUFJZ0UsTUFBTWxELE1BQU1kLFFBQVEsS0FBSyxNQUFNLE1BQU07d0JBQ3pDNkQsU0FBUyxNQUFNbEYsTUFBTSxDQUFDa0IsUUFBUSxRQUFRbEIsTUFBTSxDQUFDbUMsTUFBTWpDLE9BQU8sRUFBRSxRQUFRRixNQUFNLENBQUNvQixRQUFRcEIsTUFBTSxDQUFDa0IsUUFBUSxPQUFPbEIsTUFBTSxDQUFDbUMsTUFBTWpDLE9BQU8sRUFBRSxRQUFRRixNQUFNLENBQUNvQixRQUFRLEtBQUtwQixNQUFNLENBQUNxRjtvQkFDdEssT0FDSzt3QkFDREgsU0FBUyxNQUFNbEYsTUFBTSxDQUFDa0IsUUFBUSxLQUFLbEIsTUFBTSxDQUFDbUMsTUFBTWpDLE9BQU8sRUFBRSxLQUFLRixNQUFNLENBQUNvQixRQUFRLEtBQUtwQixNQUFNLENBQUNtQyxNQUFNZCxRQUFRO29CQUMzRztnQkFDSixPQUNLO29CQUNELElBQUljLE1BQU1kLFFBQVEsS0FBSyxPQUFPYyxNQUFNZCxRQUFRLEtBQUssS0FBSzt3QkFDbEQ2RCxTQUFTLE9BQU9sRixNQUFNLENBQUNtQyxNQUFNakMsT0FBTyxFQUFFLEtBQUtGLE1BQU0sQ0FBQ21DLE1BQU1kLFFBQVEsRUFBRTtvQkFDdEUsT0FDSzt3QkFDRDZELFNBQVMsSUFBSWxGLE1BQU0sQ0FBQ21DLE1BQU1qQyxPQUFPLEVBQUUsS0FBS0YsTUFBTSxDQUFDbUMsTUFBTWQsUUFBUTtvQkFDakU7Z0JBQ0o7WUFDSixPQUNLO2dCQUNENkQsU0FBUyxNQUFNbEYsTUFBTSxDQUFDa0IsUUFBUWxCLE1BQU0sQ0FBQ29CLFFBQVEsS0FBS3BCLE1BQU0sQ0FBQ21DLE1BQU1kLFFBQVE7WUFDM0U7UUFDSjtJQUNKO0lBQ0EsSUFBSXNELEtBQUs7UUFDTCxJQUFJLENBQUNILFFBQ0RVLFNBQVMsR0FBR2xGLE1BQU0sQ0FBQ2lGLGFBQWE7UUFDcENDLFNBQVMsQ0FBQzlFLFFBQVEyRSxRQUFRLEdBQUcsTUFBTSxNQUFNL0UsTUFBTSxDQUFDZ0YsWUFBWTtJQUNoRSxPQUNLO1FBQ0QsSUFBSU0sV0FBV25HLE1BQU0sQ0FBQ0EsT0FBT0UsTUFBTSxHQUFHLEVBQUU7UUFDeEMsSUFBSWtHLGlCQUFpQixPQUFPRCxhQUFhLFdBQ25DTCxZQUFZOUQsT0FBTyxDQUFDbUUsUUFBUSxDQUFDQSxTQUFTakcsTUFBTSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQ3REaUcsYUFBYXZFO1FBQ25CLElBQUksQ0FBQ3lELFFBQVE7WUFDVFUsU0FBUyxNQUFNbEYsTUFBTSxDQUFDaUYsYUFBYSxPQUFPakYsTUFBTSxDQUFDZ0YsWUFBWTtRQUNqRTtRQUNBLElBQUksQ0FBQ08sZ0JBQWdCO1lBQ2pCTCxTQUFTLE1BQU1sRixNQUFNLENBQUNpRixhQUFhLEtBQUtqRixNQUFNLENBQUNnRixZQUFZO1FBQy9EO0lBQ0o7SUFDQSxPQUFPLElBQUk1QyxPQUFPOEMsT0FBT3RELE1BQU14QjtBQUNuQztBQUNBOzs7Ozs7Q0FNQyxHQUNNLFNBQVM2QyxhQUFhckMsSUFBSSxFQUFFbUMsSUFBSSxFQUFFM0MsT0FBTztJQUM1QyxJQUFJUSxnQkFBZ0J3QixRQUNoQixPQUFPMEIsZUFBZWxELE1BQU1tQztJQUNoQyxJQUFJUCxNQUFNQyxPQUFPLENBQUM3QixPQUNkLE9BQU9zRCxjQUFjdEQsTUFBTW1DLE1BQU0zQztJQUNyQyxPQUFPa0UsZUFBZTFELE1BQU1tQyxNQUFNM0M7QUFDdEMsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9wYXRoLXRvLXJlZ2V4cC9kaXN0LmVzMjAxNS9pbmRleC5qcz84MjkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVG9rZW5pemUgaW5wdXQgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBsZXhlcihzdHIpIHtcbiAgICB2YXIgdG9rZW5zID0gW107XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChpIDwgc3RyLmxlbmd0aCkge1xuICAgICAgICB2YXIgY2hhciA9IHN0cltpXTtcbiAgICAgICAgaWYgKGNoYXIgPT09IFwiKlwiIHx8IGNoYXIgPT09IFwiK1wiIHx8IGNoYXIgPT09IFwiP1wiKSB7XG4gICAgICAgICAgICB0b2tlbnMucHVzaCh7IHR5cGU6IFwiTU9ESUZJRVJcIiwgaW5kZXg6IGksIHZhbHVlOiBzdHJbaSsrXSB9KTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjaGFyID09PSBcIlxcXFxcIikge1xuICAgICAgICAgICAgdG9rZW5zLnB1c2goeyB0eXBlOiBcIkVTQ0FQRURfQ0hBUlwiLCBpbmRleDogaSsrLCB2YWx1ZTogc3RyW2krK10gfSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hhciA9PT0gXCJ7XCIpIHtcbiAgICAgICAgICAgIHRva2Vucy5wdXNoKHsgdHlwZTogXCJPUEVOXCIsIGluZGV4OiBpLCB2YWx1ZTogc3RyW2krK10gfSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hhciA9PT0gXCJ9XCIpIHtcbiAgICAgICAgICAgIHRva2Vucy5wdXNoKHsgdHlwZTogXCJDTE9TRVwiLCBpbmRleDogaSwgdmFsdWU6IHN0cltpKytdIH0pO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNoYXIgPT09IFwiOlwiKSB7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IFwiXCI7XG4gICAgICAgICAgICB2YXIgaiA9IGkgKyAxO1xuICAgICAgICAgICAgd2hpbGUgKGogPCBzdHIubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvZGUgPSBzdHIuY2hhckNvZGVBdChqKTtcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgLy8gYDAtOWBcbiAgICAgICAgICAgICAgICAoY29kZSA+PSA0OCAmJiBjb2RlIDw9IDU3KSB8fFxuICAgICAgICAgICAgICAgICAgICAvLyBgQS1aYFxuICAgICAgICAgICAgICAgICAgICAoY29kZSA+PSA2NSAmJiBjb2RlIDw9IDkwKSB8fFxuICAgICAgICAgICAgICAgICAgICAvLyBgYS16YFxuICAgICAgICAgICAgICAgICAgICAoY29kZSA+PSA5NyAmJiBjb2RlIDw9IDEyMikgfHxcbiAgICAgICAgICAgICAgICAgICAgLy8gYF9gXG4gICAgICAgICAgICAgICAgICAgIGNvZGUgPT09IDk1KSB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWUgKz0gc3RyW2orK107XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghbmFtZSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiTWlzc2luZyBwYXJhbWV0ZXIgbmFtZSBhdCBcIi5jb25jYXQoaSkpO1xuICAgICAgICAgICAgdG9rZW5zLnB1c2goeyB0eXBlOiBcIk5BTUVcIiwgaW5kZXg6IGksIHZhbHVlOiBuYW1lIH0pO1xuICAgICAgICAgICAgaSA9IGo7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hhciA9PT0gXCIoXCIpIHtcbiAgICAgICAgICAgIHZhciBjb3VudCA9IDE7XG4gICAgICAgICAgICB2YXIgcGF0dGVybiA9IFwiXCI7XG4gICAgICAgICAgICB2YXIgaiA9IGkgKyAxO1xuICAgICAgICAgICAgaWYgKHN0cltqXSA9PT0gXCI/XCIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUGF0dGVybiBjYW5ub3Qgc3RhcnQgd2l0aCBcXFwiP1xcXCIgYXQgXCIuY29uY2F0KGopKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdoaWxlIChqIDwgc3RyLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGlmIChzdHJbal0gPT09IFwiXFxcXFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdHRlcm4gKz0gc3RyW2orK10gKyBzdHJbaisrXTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzdHJbal0gPT09IFwiKVwiKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvdW50LS07XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb3VudCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaisrO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoc3RyW2pdID09PSBcIihcIikge1xuICAgICAgICAgICAgICAgICAgICBjb3VudCsrO1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RyW2ogKyAxXSAhPT0gXCI/XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYXB0dXJpbmcgZ3JvdXBzIGFyZSBub3QgYWxsb3dlZCBhdCBcIi5jb25jYXQoaikpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHBhdHRlcm4gKz0gc3RyW2orK107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY291bnQpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVuYmFsYW5jZWQgcGF0dGVybiBhdCBcIi5jb25jYXQoaSkpO1xuICAgICAgICAgICAgaWYgKCFwYXR0ZXJuKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJNaXNzaW5nIHBhdHRlcm4gYXQgXCIuY29uY2F0KGkpKTtcbiAgICAgICAgICAgIHRva2Vucy5wdXNoKHsgdHlwZTogXCJQQVRURVJOXCIsIGluZGV4OiBpLCB2YWx1ZTogcGF0dGVybiB9KTtcbiAgICAgICAgICAgIGkgPSBqO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgdG9rZW5zLnB1c2goeyB0eXBlOiBcIkNIQVJcIiwgaW5kZXg6IGksIHZhbHVlOiBzdHJbaSsrXSB9KTtcbiAgICB9XG4gICAgdG9rZW5zLnB1c2goeyB0eXBlOiBcIkVORFwiLCBpbmRleDogaSwgdmFsdWU6IFwiXCIgfSk7XG4gICAgcmV0dXJuIHRva2Vucztcbn1cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2Uoc3RyLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICB2YXIgdG9rZW5zID0gbGV4ZXIoc3RyKTtcbiAgICB2YXIgX2EgPSBvcHRpb25zLnByZWZpeGVzLCBwcmVmaXhlcyA9IF9hID09PSB2b2lkIDAgPyBcIi4vXCIgOiBfYTtcbiAgICB2YXIgZGVmYXVsdFBhdHRlcm4gPSBcIlteXCIuY29uY2F0KGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCBcIi8jP1wiKSwgXCJdKz9cIik7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHZhciBrZXkgPSAwO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcGF0aCA9IFwiXCI7XG4gICAgdmFyIHRyeUNvbnN1bWUgPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICBpZiAoaSA8IHRva2Vucy5sZW5ndGggJiYgdG9rZW5zW2ldLnR5cGUgPT09IHR5cGUpXG4gICAgICAgICAgICByZXR1cm4gdG9rZW5zW2krK10udmFsdWU7XG4gICAgfTtcbiAgICB2YXIgbXVzdENvbnN1bWUgPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICB2YXIgdmFsdWUgPSB0cnlDb25zdW1lKHR5cGUpO1xuICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgdmFyIF9hID0gdG9rZW5zW2ldLCBuZXh0VHlwZSA9IF9hLnR5cGUsIGluZGV4ID0gX2EuaW5kZXg7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmV4cGVjdGVkIFwiLmNvbmNhdChuZXh0VHlwZSwgXCIgYXQgXCIpLmNvbmNhdChpbmRleCwgXCIsIGV4cGVjdGVkIFwiKS5jb25jYXQodHlwZSkpO1xuICAgIH07XG4gICAgdmFyIGNvbnN1bWVUZXh0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gXCJcIjtcbiAgICAgICAgdmFyIHZhbHVlO1xuICAgICAgICB3aGlsZSAoKHZhbHVlID0gdHJ5Q29uc3VtZShcIkNIQVJcIikgfHwgdHJ5Q29uc3VtZShcIkVTQ0FQRURfQ0hBUlwiKSkpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgd2hpbGUgKGkgPCB0b2tlbnMubGVuZ3RoKSB7XG4gICAgICAgIHZhciBjaGFyID0gdHJ5Q29uc3VtZShcIkNIQVJcIik7XG4gICAgICAgIHZhciBuYW1lID0gdHJ5Q29uc3VtZShcIk5BTUVcIik7XG4gICAgICAgIHZhciBwYXR0ZXJuID0gdHJ5Q29uc3VtZShcIlBBVFRFUk5cIik7XG4gICAgICAgIGlmIChuYW1lIHx8IHBhdHRlcm4pIHtcbiAgICAgICAgICAgIHZhciBwcmVmaXggPSBjaGFyIHx8IFwiXCI7XG4gICAgICAgICAgICBpZiAocHJlZml4ZXMuaW5kZXhPZihwcmVmaXgpID09PSAtMSkge1xuICAgICAgICAgICAgICAgIHBhdGggKz0gcHJlZml4O1xuICAgICAgICAgICAgICAgIHByZWZpeCA9IFwiXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocGF0aCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHBhdGgpO1xuICAgICAgICAgICAgICAgIHBhdGggPSBcIlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzdWx0LnB1c2goe1xuICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICAgICAgICAgICAgcHJlZml4OiBwcmVmaXgsXG4gICAgICAgICAgICAgICAgc3VmZml4OiBcIlwiLFxuICAgICAgICAgICAgICAgIHBhdHRlcm46IHBhdHRlcm4gfHwgZGVmYXVsdFBhdHRlcm4sXG4gICAgICAgICAgICAgICAgbW9kaWZpZXI6IHRyeUNvbnN1bWUoXCJNT0RJRklFUlwiKSB8fCBcIlwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdmFsdWUgPSBjaGFyIHx8IHRyeUNvbnN1bWUoXCJFU0NBUEVEX0NIQVJcIik7XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgcGF0aCArPSB2YWx1ZTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXRoKSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChwYXRoKTtcbiAgICAgICAgICAgIHBhdGggPSBcIlwiO1xuICAgICAgICB9XG4gICAgICAgIHZhciBvcGVuID0gdHJ5Q29uc3VtZShcIk9QRU5cIik7XG4gICAgICAgIGlmIChvcGVuKSB7XG4gICAgICAgICAgICB2YXIgcHJlZml4ID0gY29uc3VtZVRleHQoKTtcbiAgICAgICAgICAgIHZhciBuYW1lXzEgPSB0cnlDb25zdW1lKFwiTkFNRVwiKSB8fCBcIlwiO1xuICAgICAgICAgICAgdmFyIHBhdHRlcm5fMSA9IHRyeUNvbnN1bWUoXCJQQVRURVJOXCIpIHx8IFwiXCI7XG4gICAgICAgICAgICB2YXIgc3VmZml4ID0gY29uc3VtZVRleHQoKTtcbiAgICAgICAgICAgIG11c3RDb25zdW1lKFwiQ0xPU0VcIik7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh7XG4gICAgICAgICAgICAgICAgbmFtZTogbmFtZV8xIHx8IChwYXR0ZXJuXzEgPyBrZXkrKyA6IFwiXCIpLFxuICAgICAgICAgICAgICAgIHBhdHRlcm46IG5hbWVfMSAmJiAhcGF0dGVybl8xID8gZGVmYXVsdFBhdHRlcm4gOiBwYXR0ZXJuXzEsXG4gICAgICAgICAgICAgICAgcHJlZml4OiBwcmVmaXgsXG4gICAgICAgICAgICAgICAgc3VmZml4OiBzdWZmaXgsXG4gICAgICAgICAgICAgICAgbW9kaWZpZXI6IHRyeUNvbnN1bWUoXCJNT0RJRklFUlwiKSB8fCBcIlwiLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBtdXN0Q29uc3VtZShcIkVORFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXBpbGUoc3RyLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSwgb3B0aW9ucyk7XG59XG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbih0b2tlbnMsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciByZUZsYWdzID0gZmxhZ3Mob3B0aW9ucyk7XG4gICAgdmFyIF9hID0gb3B0aW9ucy5lbmNvZGUsIGVuY29kZSA9IF9hID09PSB2b2lkIDAgPyBmdW5jdGlvbiAoeCkgeyByZXR1cm4geDsgfSA6IF9hLCBfYiA9IG9wdGlvbnMudmFsaWRhdGUsIHZhbGlkYXRlID0gX2IgPT09IHZvaWQgMCA/IHRydWUgOiBfYjtcbiAgICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgICB2YXIgbWF0Y2hlcyA9IHRva2Vucy5tYXAoZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKFwiXig/OlwiLmNvbmNhdCh0b2tlbi5wYXR0ZXJuLCBcIikkXCIpLCByZUZsYWdzKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICB2YXIgcGF0aCA9IFwiXCI7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRva2VuID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgcGF0aCArPSB0b2tlbjtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGRhdGEgPyBkYXRhW3Rva2VuLm5hbWVdIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgdmFyIG9wdGlvbmFsID0gdG9rZW4ubW9kaWZpZXIgPT09IFwiP1wiIHx8IHRva2VuLm1vZGlmaWVyID09PSBcIipcIjtcbiAgICAgICAgICAgIHZhciByZXBlYXQgPSB0b2tlbi5tb2RpZmllciA9PT0gXCIqXCIgfHwgdG9rZW4ubW9kaWZpZXIgPT09IFwiK1wiO1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFyZXBlYXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIFxcXCJcIi5jb25jYXQodG9rZW4ubmFtZSwgXCJcXFwiIHRvIG5vdCByZXBlYXQsIGJ1dCBnb3QgYW4gYXJyYXlcIikpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHRpb25hbClcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRXhwZWN0ZWQgXFxcIlwiLmNvbmNhdCh0b2tlbi5uYW1lLCBcIlxcXCIgdG8gbm90IGJlIGVtcHR5XCIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSwgdG9rZW4pO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsaWRhdGUgJiYgIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIGFsbCBcXFwiXCIuY29uY2F0KHRva2VuLm5hbWUsIFwiXFxcIiB0byBtYXRjaCBcXFwiXCIpLmNvbmNhdCh0b2tlbi5wYXR0ZXJuLCBcIlxcXCIsIGJ1dCBnb3QgXFxcIlwiKS5jb25jYXQoc2VnbWVudCwgXCJcXFwiXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnQgKyB0b2tlbi5zdWZmaXg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiB8fCB0eXBlb2YgdmFsdWUgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgICAgICB2YXIgc2VnbWVudCA9IGVuY29kZShTdHJpbmcodmFsdWUpLCB0b2tlbik7XG4gICAgICAgICAgICAgICAgaWYgKHZhbGlkYXRlICYmICFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIFxcXCJcIi5jb25jYXQodG9rZW4ubmFtZSwgXCJcXFwiIHRvIG1hdGNoIFxcXCJcIikuY29uY2F0KHRva2VuLnBhdHRlcm4sIFwiXFxcIiwgYnV0IGdvdCBcXFwiXCIpLmNvbmNhdChzZWdtZW50LCBcIlxcXCJcIikpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnQgKyB0b2tlbi5zdWZmaXg7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob3B0aW9uYWwpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB2YXIgdHlwZU9mTWVzc2FnZSA9IHJlcGVhdCA/IFwiYW4gYXJyYXlcIiA6IFwiYSBzdHJpbmdcIjtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJFeHBlY3RlZCBcXFwiXCIuY29uY2F0KHRva2VuLm5hbWUsIFwiXFxcIiB0byBiZSBcIikuY29uY2F0KHR5cGVPZk1lc3NhZ2UpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9O1xufVxuLyoqXG4gKiBDcmVhdGUgcGF0aCBtYXRjaCBmdW5jdGlvbiBmcm9tIGBwYXRoLXRvLXJlZ2V4cGAgc3BlYy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hdGNoKHN0ciwgb3B0aW9ucykge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgdmFyIHJlID0gcGF0aFRvUmVnZXhwKHN0ciwga2V5cywgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHJlZ2V4cFRvRnVuY3Rpb24ocmUsIGtleXMsIG9wdGlvbnMpO1xufVxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIG1hdGNoIGZ1bmN0aW9uIGZyb20gYHBhdGgtdG8tcmVnZXhwYCBvdXRwdXQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWdleHBUb0Z1bmN0aW9uKHJlLCBrZXlzLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICB2YXIgX2EgPSBvcHRpb25zLmRlY29kZSwgZGVjb2RlID0gX2EgPT09IHZvaWQgMCA/IGZ1bmN0aW9uICh4KSB7IHJldHVybiB4OyB9IDogX2E7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChwYXRobmFtZSkge1xuICAgICAgICB2YXIgbSA9IHJlLmV4ZWMocGF0aG5hbWUpO1xuICAgICAgICBpZiAoIW0pXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciBwYXRoID0gbVswXSwgaW5kZXggPSBtLmluZGV4O1xuICAgICAgICB2YXIgcGFyYW1zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgdmFyIF9sb29wXzEgPSBmdW5jdGlvbiAoaSkge1xuICAgICAgICAgICAgaWYgKG1baV0gPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJjb250aW51ZVwiO1xuICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaSAtIDFdO1xuICAgICAgICAgICAgaWYgKGtleS5tb2RpZmllciA9PT0gXCIqXCIgfHwga2V5Lm1vZGlmaWVyID09PSBcIitcIikge1xuICAgICAgICAgICAgICAgIHBhcmFtc1trZXkubmFtZV0gPSBtW2ldLnNwbGl0KGtleS5wcmVmaXggKyBrZXkuc3VmZml4KS5tYXAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkZWNvZGUodmFsdWUsIGtleSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBwYXJhbXNba2V5Lm5hbWVdID0gZGVjb2RlKG1baV0sIGtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgbS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgX2xvb3BfMShpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBwYXRoOiBwYXRoLCBpbmRleDogaW5kZXgsIHBhcmFtczogcGFyYW1zIH07XG4gICAgfTtcbn1cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nKHN0cikge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xufVxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICovXG5mdW5jdGlvbiBmbGFncyhvcHRpb25zKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMgJiYgb3B0aW9ucy5zZW5zaXRpdmUgPyBcIlwiIDogXCJpXCI7XG59XG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAocGF0aCwga2V5cykge1xuICAgIGlmICgha2V5cylcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgdmFyIGdyb3Vwc1JlZ2V4ID0gL1xcKCg/OlxcPzwoLio/KT4pPyg/IVxcPykvZztcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBleGVjUmVzdWx0ID0gZ3JvdXBzUmVnZXguZXhlYyhwYXRoLnNvdXJjZSk7XG4gICAgd2hpbGUgKGV4ZWNSZXN1bHQpIHtcbiAgICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgICAgIC8vIFVzZSBwYXJlbnRoZXNpemVkIHN1YnN0cmluZyBtYXRjaCBpZiBhdmFpbGFibGUsIGluZGV4IG90aGVyd2lzZVxuICAgICAgICAgICAgbmFtZTogZXhlY1Jlc3VsdFsxXSB8fCBpbmRleCsrLFxuICAgICAgICAgICAgcHJlZml4OiBcIlwiLFxuICAgICAgICAgICAgc3VmZml4OiBcIlwiLFxuICAgICAgICAgICAgbW9kaWZpZXI6IFwiXCIsXG4gICAgICAgICAgICBwYXR0ZXJuOiBcIlwiLFxuICAgICAgICB9KTtcbiAgICAgICAgZXhlY1Jlc3VsdCA9IGdyb3Vwc1JlZ2V4LmV4ZWMocGF0aC5zb3VyY2UpO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aDtcbn1cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAocGF0aHMsIGtleXMsIG9wdGlvbnMpIHtcbiAgICB2YXIgcGFydHMgPSBwYXRocy5tYXAoZnVuY3Rpb24gKHBhdGgpIHsgcmV0dXJuIHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKS5zb3VyY2U7IH0pO1xuICAgIHJldHVybiBuZXcgUmVnRXhwKFwiKD86XCIuY29uY2F0KHBhcnRzLmpvaW4oXCJ8XCIpLCBcIilcIiksIGZsYWdzKG9wdGlvbnMpKTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdG9rZW5zVG9SZWdleHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpO1xufVxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9rZW5zVG9SZWdleHAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICB2YXIgX2EgPSBvcHRpb25zLnN0cmljdCwgc3RyaWN0ID0gX2EgPT09IHZvaWQgMCA/IGZhbHNlIDogX2EsIF9iID0gb3B0aW9ucy5zdGFydCwgc3RhcnQgPSBfYiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9iLCBfYyA9IG9wdGlvbnMuZW5kLCBlbmQgPSBfYyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9jLCBfZCA9IG9wdGlvbnMuZW5jb2RlLCBlbmNvZGUgPSBfZCA9PT0gdm9pZCAwID8gZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHg7IH0gOiBfZCwgX2UgPSBvcHRpb25zLmRlbGltaXRlciwgZGVsaW1pdGVyID0gX2UgPT09IHZvaWQgMCA/IFwiLyM/XCIgOiBfZSwgX2YgPSBvcHRpb25zLmVuZHNXaXRoLCBlbmRzV2l0aCA9IF9mID09PSB2b2lkIDAgPyBcIlwiIDogX2Y7XG4gICAgdmFyIGVuZHNXaXRoUmUgPSBcIltcIi5jb25jYXQoZXNjYXBlU3RyaW5nKGVuZHNXaXRoKSwgXCJdfCRcIik7XG4gICAgdmFyIGRlbGltaXRlclJlID0gXCJbXCIuY29uY2F0KGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpLCBcIl1cIik7XG4gICAgdmFyIHJvdXRlID0gc3RhcnQgPyBcIl5cIiA6IFwiXCI7XG4gICAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgICBmb3IgKHZhciBfaSA9IDAsIHRva2Vuc18xID0gdG9rZW5zOyBfaSA8IHRva2Vuc18xLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIgdG9rZW4gPSB0b2tlbnNfMVtfaV07XG4gICAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyhlbmNvZGUodG9rZW4pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcoZW5jb2RlKHRva2VuLnByZWZpeCkpO1xuICAgICAgICAgICAgdmFyIHN1ZmZpeCA9IGVzY2FwZVN0cmluZyhlbmNvZGUodG9rZW4uc3VmZml4KSk7XG4gICAgICAgICAgICBpZiAodG9rZW4ucGF0dGVybikge1xuICAgICAgICAgICAgICAgIGlmIChrZXlzKVxuICAgICAgICAgICAgICAgICAgICBrZXlzLnB1c2godG9rZW4pO1xuICAgICAgICAgICAgICAgIGlmIChwcmVmaXggfHwgc3VmZml4KSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0b2tlbi5tb2RpZmllciA9PT0gXCIrXCIgfHwgdG9rZW4ubW9kaWZpZXIgPT09IFwiKlwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbW9kID0gdG9rZW4ubW9kaWZpZXIgPT09IFwiKlwiID8gXCI/XCIgOiBcIlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm91dGUgKz0gXCIoPzpcIi5jb25jYXQocHJlZml4LCBcIigoPzpcIikuY29uY2F0KHRva2VuLnBhdHRlcm4sIFwiKSg/OlwiKS5jb25jYXQoc3VmZml4KS5jb25jYXQocHJlZml4LCBcIig/OlwiKS5jb25jYXQodG9rZW4ucGF0dGVybiwgXCIpKSopXCIpLmNvbmNhdChzdWZmaXgsIFwiKVwiKS5jb25jYXQobW9kKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlICs9IFwiKD86XCIuY29uY2F0KHByZWZpeCwgXCIoXCIpLmNvbmNhdCh0b2tlbi5wYXR0ZXJuLCBcIilcIikuY29uY2F0KHN1ZmZpeCwgXCIpXCIpLmNvbmNhdCh0b2tlbi5tb2RpZmllcik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0b2tlbi5tb2RpZmllciA9PT0gXCIrXCIgfHwgdG9rZW4ubW9kaWZpZXIgPT09IFwiKlwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3V0ZSArPSBcIigoPzpcIi5jb25jYXQodG9rZW4ucGF0dGVybiwgXCIpXCIpLmNvbmNhdCh0b2tlbi5tb2RpZmllciwgXCIpXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcm91dGUgKz0gXCIoXCIuY29uY2F0KHRva2VuLnBhdHRlcm4sIFwiKVwiKS5jb25jYXQodG9rZW4ubW9kaWZpZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcm91dGUgKz0gXCIoPzpcIi5jb25jYXQocHJlZml4KS5jb25jYXQoc3VmZml4LCBcIilcIikuY29uY2F0KHRva2VuLm1vZGlmaWVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZW5kKSB7XG4gICAgICAgIGlmICghc3RyaWN0KVxuICAgICAgICAgICAgcm91dGUgKz0gXCJcIi5jb25jYXQoZGVsaW1pdGVyUmUsIFwiP1wiKTtcbiAgICAgICAgcm91dGUgKz0gIW9wdGlvbnMuZW5kc1dpdGggPyBcIiRcIiA6IFwiKD89XCIuY29uY2F0KGVuZHNXaXRoUmUsIFwiKVwiKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHZhciBlbmRUb2tlbiA9IHRva2Vuc1t0b2tlbnMubGVuZ3RoIC0gMV07XG4gICAgICAgIHZhciBpc0VuZERlbGltaXRlZCA9IHR5cGVvZiBlbmRUb2tlbiA9PT0gXCJzdHJpbmdcIlxuICAgICAgICAgICAgPyBkZWxpbWl0ZXJSZS5pbmRleE9mKGVuZFRva2VuW2VuZFRva2VuLmxlbmd0aCAtIDFdKSA+IC0xXG4gICAgICAgICAgICA6IGVuZFRva2VuID09PSB1bmRlZmluZWQ7XG4gICAgICAgIGlmICghc3RyaWN0KSB7XG4gICAgICAgICAgICByb3V0ZSArPSBcIig/OlwiLmNvbmNhdChkZWxpbWl0ZXJSZSwgXCIoPz1cIikuY29uY2F0KGVuZHNXaXRoUmUsIFwiKSk/XCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNFbmREZWxpbWl0ZWQpIHtcbiAgICAgICAgICAgIHJvdXRlICs9IFwiKD89XCIuY29uY2F0KGRlbGltaXRlclJlLCBcInxcIikuY29uY2F0KGVuZHNXaXRoUmUsIFwiKVwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3IFJlZ0V4cChyb3V0ZSwgZmxhZ3Mob3B0aW9ucykpO1xufVxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cClcbiAgICAgICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIGtleXMpO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHBhdGgpKVxuICAgICAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgICByZXR1cm4gc3RyaW5nVG9SZWdleHAocGF0aCwga2V5cywgb3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsibGV4ZXIiLCJzdHIiLCJ0b2tlbnMiLCJpIiwibGVuZ3RoIiwiY2hhciIsInB1c2giLCJ0eXBlIiwiaW5kZXgiLCJ2YWx1ZSIsIm5hbWUiLCJqIiwiY29kZSIsImNoYXJDb2RlQXQiLCJUeXBlRXJyb3IiLCJjb25jYXQiLCJjb3VudCIsInBhdHRlcm4iLCJwYXJzZSIsIm9wdGlvbnMiLCJfYSIsInByZWZpeGVzIiwiZGVmYXVsdFBhdHRlcm4iLCJlc2NhcGVTdHJpbmciLCJkZWxpbWl0ZXIiLCJyZXN1bHQiLCJrZXkiLCJwYXRoIiwidHJ5Q29uc3VtZSIsIm11c3RDb25zdW1lIiwidW5kZWZpbmVkIiwibmV4dFR5cGUiLCJjb25zdW1lVGV4dCIsInByZWZpeCIsImluZGV4T2YiLCJzdWZmaXgiLCJtb2RpZmllciIsIm9wZW4iLCJuYW1lXzEiLCJwYXR0ZXJuXzEiLCJjb21waWxlIiwidG9rZW5zVG9GdW5jdGlvbiIsInJlRmxhZ3MiLCJmbGFncyIsImVuY29kZSIsIngiLCJfYiIsInZhbGlkYXRlIiwibWF0Y2hlcyIsIm1hcCIsInRva2VuIiwiUmVnRXhwIiwiZGF0YSIsIm9wdGlvbmFsIiwicmVwZWF0IiwiQXJyYXkiLCJpc0FycmF5Iiwic2VnbWVudCIsInRlc3QiLCJTdHJpbmciLCJ0eXBlT2ZNZXNzYWdlIiwibWF0Y2giLCJrZXlzIiwicmUiLCJwYXRoVG9SZWdleHAiLCJyZWdleHBUb0Z1bmN0aW9uIiwiZGVjb2RlIiwicGF0aG5hbWUiLCJtIiwiZXhlYyIsInBhcmFtcyIsIk9iamVjdCIsImNyZWF0ZSIsIl9sb29wXzEiLCJzcGxpdCIsInJlcGxhY2UiLCJzZW5zaXRpdmUiLCJyZWdleHBUb1JlZ2V4cCIsImdyb3Vwc1JlZ2V4IiwiZXhlY1Jlc3VsdCIsInNvdXJjZSIsImFycmF5VG9SZWdleHAiLCJwYXRocyIsInBhcnRzIiwiam9pbiIsInN0cmluZ1RvUmVnZXhwIiwidG9rZW5zVG9SZWdleHAiLCJzdHJpY3QiLCJzdGFydCIsIl9jIiwiZW5kIiwiX2QiLCJfZSIsIl9mIiwiZW5kc1dpdGgiLCJlbmRzV2l0aFJlIiwiZGVsaW1pdGVyUmUiLCJyb3V0ZSIsIl9pIiwidG9rZW5zXzEiLCJtb2QiLCJlbmRUb2tlbiIsImlzRW5kRGVsaW1pdGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/path-to-regexp/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/react/cjs/react.development.js":
/*!*********************************************************!*\
  !*** ../../node_modules/react/cjs/react.development.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n        }\n        var ReactVersion = \"18.2.0\";\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        /**\n * Keeps track of the current dispatcher.\n */ var ReactCurrentDispatcher = {\n            /**\n   * @internal\n   * @type {ReactComponent}\n   */ current: null\n        };\n        /**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */ var ReactCurrentBatchConfig = {\n            transition: null\n        };\n        var ReactCurrentActQueue = {\n            current: null,\n            // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n            isBatchingLegacy: false,\n            didScheduleLegacyUpdate: false\n        };\n        /**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */ var ReactCurrentOwner = {\n            /**\n   * @internal\n   * @type {ReactComponent}\n   */ current: null\n        };\n        var ReactDebugCurrentFrame = {};\n        var currentExtraStackFrame = null;\n        function setExtraStackFrame(stack) {\n            {\n                currentExtraStackFrame = stack;\n            }\n        }\n        {\n            ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {\n                {\n                    currentExtraStackFrame = stack;\n                }\n            }; // Stack implementation injected by the current renderer.\n            ReactDebugCurrentFrame.getCurrentStack = null;\n            ReactDebugCurrentFrame.getStackAddendum = function() {\n                var stack = \"\"; // Add an extra top frame while an element is being validated\n                if (currentExtraStackFrame) {\n                    stack += currentExtraStackFrame;\n                } // Delegate to the injected renderer-specific implementation\n                var impl = ReactDebugCurrentFrame.getCurrentStack;\n                if (impl) {\n                    stack += impl() || \"\";\n                }\n                return stack;\n            };\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n        var ReactSharedInternals = {\n            ReactCurrentDispatcher: ReactCurrentDispatcher,\n            ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n            ReactCurrentOwner: ReactCurrentOwner\n        };\n        {\n            ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n            ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n        }\n        // by calls to these methods by a Babel plugin.\n        //\n        // In PROD (or in packages without access to React internals),\n        // they are left as they are instead.\n        function warn(format) {\n            {\n                {\n                    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                        args[_key - 1] = arguments[_key];\n                    }\n                    printWarning(\"warn\", format, args);\n                }\n            }\n        }\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        var didWarnStateUpdateForUnmountedComponent = {};\n        function warnNoop(publicInstance, callerName) {\n            {\n                var _constructor = publicInstance.constructor;\n                var componentName = _constructor && (_constructor.displayName || _constructor.name) || \"ReactClass\";\n                var warningKey = componentName + \".\" + callerName;\n                if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n                    return;\n                }\n                error(\"Can't call %s on a component that is not yet mounted. \" + \"This is a no-op, but it might indicate a bug in your application. \" + \"Instead, assign to `this.state` directly or define a `state = {};` \" + \"class property with the desired state in the %s component.\", callerName, componentName);\n                didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n            }\n        }\n        /**\n * This is the abstract API for an update queue.\n */ var ReactNoopUpdateQueue = {\n            /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */ isMounted: function(publicInstance) {\n                return false;\n            },\n            /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {\n                warnNoop(publicInstance, \"forceUpdate\");\n            },\n            /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {\n                warnNoop(publicInstance, \"replaceState\");\n            },\n            /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {\n                warnNoop(publicInstance, \"setState\");\n            }\n        };\n        var assign = Object.assign;\n        var emptyObject = {};\n        {\n            Object.freeze(emptyObject);\n        }\n        /**\n * Base class helpers for the updating state of a component.\n */ function Component(props, context, updater) {\n            this.props = props;\n            this.context = context; // If a component has string refs, we will assign a different object later.\n            this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n            // renderer.\n            this.updater = updater || ReactNoopUpdateQueue;\n        }\n        Component.prototype.isReactComponent = {};\n        /**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */ Component.prototype.setState = function(partialState, callback) {\n            if (typeof partialState !== \"object\" && typeof partialState !== \"function\" && partialState != null) {\n                throw new Error(\"setState(...): takes an object of state variables to update or a \" + \"function which returns an object of state variables.\");\n            }\n            this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n        };\n        /**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */ Component.prototype.forceUpdate = function(callback) {\n            this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n        };\n        /**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */ {\n            var deprecatedAPIs = {\n                isMounted: [\n                    \"isMounted\",\n                    \"Instead, make sure to clean up subscriptions and pending requests in \" + \"componentWillUnmount to prevent memory leaks.\"\n                ],\n                replaceState: [\n                    \"replaceState\",\n                    \"Refactor your code to use setState instead (see \" + \"https://github.com/facebook/react/issues/3236).\"\n                ]\n            };\n            var defineDeprecationWarning = function(methodName, info) {\n                Object.defineProperty(Component.prototype, methodName, {\n                    get: function() {\n                        warn(\"%s(...) is deprecated in plain JavaScript React classes. %s\", info[0], info[1]);\n                        return undefined;\n                    }\n                });\n            };\n            for(var fnName in deprecatedAPIs){\n                if (deprecatedAPIs.hasOwnProperty(fnName)) {\n                    defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n                }\n            }\n        }\n        function ComponentDummy() {}\n        ComponentDummy.prototype = Component.prototype;\n        /**\n * Convenience component with default shallow equality check for sCU.\n */ function PureComponent(props, context, updater) {\n            this.props = props;\n            this.context = context; // If a component has string refs, we will assign a different object later.\n            this.refs = emptyObject;\n            this.updater = updater || ReactNoopUpdateQueue;\n        }\n        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n        pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n        assign(pureComponentPrototype, Component.prototype);\n        pureComponentPrototype.isPureReactComponent = true;\n        // an immutable object with a single mutable value\n        function createRef() {\n            var refObject = {\n                current: null\n            };\n            {\n                Object.seal(refObject);\n            }\n            return refObject;\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n                return type;\n            }\n        } // $FlowFixMe only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            {\n                if (typeof type.tag === \"number\") {\n                    error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                }\n            }\n            if (typeof type === \"function\") {\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            var warnAboutAccessingKey = function() {\n                {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                }\n            };\n            warnAboutAccessingKey.isReactWarning = true;\n            Object.defineProperty(props, \"key\", {\n                get: warnAboutAccessingKey,\n                configurable: true\n            });\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            var warnAboutAccessingRef = function() {\n                {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                }\n            };\n            warnAboutAccessingRef.isReactWarning = true;\n            Object.defineProperty(props, \"ref\", {\n                get: warnAboutAccessingRef,\n                configurable: true\n            });\n        }\n        function warnIfStringRefCannotBeAutoConverted(config) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", componentName, config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ var ReactElement = function(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        };\n        /**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */ function createElement(type, config, children) {\n            var propName; // Reserved names are extracted\n            var props = {};\n            var key = null;\n            var ref = null;\n            var self = null;\n            var source = null;\n            if (config != null) {\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    {\n                        warnIfStringRefCannotBeAutoConverted(config);\n                    }\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                self = config.__self === undefined ? null : config.__self;\n                source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                }\n            } // Children can be more than one argument, and those are transferred onto\n            // the newly allocated props object.\n            var childrenLength = arguments.length - 2;\n            if (childrenLength === 1) {\n                props.children = children;\n            } else if (childrenLength > 1) {\n                var childArray = Array(childrenLength);\n                for(var i = 0; i < childrenLength; i++){\n                    childArray[i] = arguments[i + 2];\n                }\n                {\n                    if (Object.freeze) {\n                        Object.freeze(childArray);\n                    }\n                }\n                props.children = childArray;\n            } // Resolve default props\n            if (type && type.defaultProps) {\n                var defaultProps = type.defaultProps;\n                for(propName in defaultProps){\n                    if (props[propName] === undefined) {\n                        props[propName] = defaultProps[propName];\n                    }\n                }\n            }\n            {\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n            }\n            return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n        }\n        function cloneAndReplaceKey(oldElement, newKey) {\n            var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n            return newElement;\n        }\n        /**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */ function cloneElement(element, config, children) {\n            if (element === null || element === undefined) {\n                throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n            }\n            var propName; // Original props are copied\n            var props = assign({}, element.props); // Reserved names are extracted\n            var key = element.key;\n            var ref = element.ref; // Self is preserved since the owner is preserved.\n            var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n            // transpiler, and the original source is probably a better indicator of the\n            // true owner.\n            var source = element._source; // Owner will be preserved, unless ref is overridden\n            var owner = element._owner;\n            if (config != null) {\n                if (hasValidRef(config)) {\n                    // Silently steal the ref from the parent.\n                    ref = config.ref;\n                    owner = ReactCurrentOwner.current;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                } // Remaining properties override existing props\n                var defaultProps;\n                if (element.type && element.type.defaultProps) {\n                    defaultProps = element.type.defaultProps;\n                }\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        if (config[propName] === undefined && defaultProps !== undefined) {\n                            // Resolve default props\n                            props[propName] = defaultProps[propName];\n                        } else {\n                            props[propName] = config[propName];\n                        }\n                    }\n                }\n            } // Children can be more than one argument, and those are transferred onto\n            // the newly allocated props object.\n            var childrenLength = arguments.length - 2;\n            if (childrenLength === 1) {\n                props.children = children;\n            } else if (childrenLength > 1) {\n                var childArray = Array(childrenLength);\n                for(var i = 0; i < childrenLength; i++){\n                    childArray[i] = arguments[i + 2];\n                }\n                props.children = childArray;\n            }\n            return ReactElement(element.type, key, ref, self, source, owner, props);\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        var SEPARATOR = \".\";\n        var SUBSEPARATOR = \":\";\n        /**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */ function escape(key) {\n            var escapeRegex = /[=:]/g;\n            var escaperLookup = {\n                \"=\": \"=0\",\n                \":\": \"=2\"\n            };\n            var escapedString = key.replace(escapeRegex, function(match) {\n                return escaperLookup[match];\n            });\n            return \"$\" + escapedString;\n        }\n        /**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */ var didWarnAboutMaps = false;\n        var userProvidedKeyEscapeRegex = /\\/+/g;\n        function escapeUserProvidedKey(text) {\n            return text.replace(userProvidedKeyEscapeRegex, \"$&/\");\n        }\n        /**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */ function getElementKey(element, index) {\n            // Do some typechecking here since we call this blindly. We want to ensure\n            // that we don't block potential future ES APIs.\n            if (typeof element === \"object\" && element !== null && element.key != null) {\n                // Explicit key\n                {\n                    checkKeyStringCoercion(element.key);\n                }\n                return escape(\"\" + element.key);\n            } // Implicit key determined by the index in the set\n            return index.toString(36);\n        }\n        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n            var type = typeof children;\n            if (type === \"undefined\" || type === \"boolean\") {\n                // All of the above are perceived as null.\n                children = null;\n            }\n            var invokeCallback = false;\n            if (children === null) {\n                invokeCallback = true;\n            } else {\n                switch(type){\n                    case \"string\":\n                    case \"number\":\n                        invokeCallback = true;\n                        break;\n                    case \"object\":\n                        switch(children.$$typeof){\n                            case REACT_ELEMENT_TYPE:\n                            case REACT_PORTAL_TYPE:\n                                invokeCallback = true;\n                        }\n                }\n            }\n            if (invokeCallback) {\n                var _child = children;\n                var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n                // so that it's consistent if the number of children grows:\n                var childKey = nameSoFar === \"\" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n                if (isArray(mappedChild)) {\n                    var escapedChildKey = \"\";\n                    if (childKey != null) {\n                        escapedChildKey = escapeUserProvidedKey(childKey) + \"/\";\n                    }\n                    mapIntoArray(mappedChild, array, escapedChildKey, \"\", function(c) {\n                        return c;\n                    });\n                } else if (mappedChild != null) {\n                    if (isValidElement(mappedChild)) {\n                        {\n                            // The `if` statement here prevents auto-disabling of the safe\n                            // coercion ESLint rule, so we must manually disable it below.\n                            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n                            if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n                                checkKeyStringCoercion(mappedChild.key);\n                            }\n                        }\n                        mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children\n                        escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // eslint-disable-next-line react-internal/safe-string-coercion\n                        escapeUserProvidedKey(\"\" + mappedChild.key) + \"/\" : \"\") + childKey);\n                    }\n                    array.push(mappedChild);\n                }\n                return 1;\n            }\n            var child;\n            var nextName;\n            var subtreeCount = 0; // Count of children found in the current subtree.\n            var nextNamePrefix = nameSoFar === \"\" ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n            if (isArray(children)) {\n                for(var i = 0; i < children.length; i++){\n                    child = children[i];\n                    nextName = nextNamePrefix + getElementKey(child, i);\n                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n                }\n            } else {\n                var iteratorFn = getIteratorFn(children);\n                if (typeof iteratorFn === \"function\") {\n                    var iterableChildren = children;\n                    {\n                        // Warn about using Maps as children\n                        if (iteratorFn === iterableChildren.entries) {\n                            if (!didWarnAboutMaps) {\n                                warn(\"Using Maps as children is not supported. \" + \"Use an array of keyed ReactElements instead.\");\n                            }\n                            didWarnAboutMaps = true;\n                        }\n                    }\n                    var iterator = iteratorFn.call(iterableChildren);\n                    var step;\n                    var ii = 0;\n                    while(!(step = iterator.next()).done){\n                        child = step.value;\n                        nextName = nextNamePrefix + getElementKey(child, ii++);\n                        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n                    }\n                } else if (type === \"object\") {\n                    // eslint-disable-next-line react-internal/safe-string-coercion\n                    var childrenString = String(children);\n                    throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === \"[object Object]\" ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\" : childrenString) + \"). \" + \"If you meant to render a collection of children, use an array \" + \"instead.\");\n                }\n            }\n            return subtreeCount;\n        }\n        /**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */ function mapChildren(children, func, context) {\n            if (children == null) {\n                return children;\n            }\n            var result = [];\n            var count = 0;\n            mapIntoArray(children, result, \"\", \"\", function(child) {\n                return func.call(context, child, count++);\n            });\n            return result;\n        }\n        /**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */ function countChildren(children) {\n            var n = 0;\n            mapChildren(children, function() {\n                n++; // Don't return anything\n            });\n            return n;\n        }\n        /**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */ function forEachChildren(children, forEachFunc, forEachContext) {\n            mapChildren(children, function() {\n                forEachFunc.apply(this, arguments); // Don't return anything.\n            }, forEachContext);\n        }\n        /**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */ function toArray(children) {\n            return mapChildren(children, function(child) {\n                return child;\n            }) || [];\n        }\n        /**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */ function onlyChild(children) {\n            if (!isValidElement(children)) {\n                throw new Error(\"React.Children.only expected to receive a single React element child.\");\n            }\n            return children;\n        }\n        function createContext(defaultValue) {\n            // TODO: Second argument used to be an optional `calculateChangedBits`\n            // function. Warn to reserve for future use?\n            var context = {\n                $$typeof: REACT_CONTEXT_TYPE,\n                // As a workaround to support multiple concurrent renderers, we categorize\n                // some renderers as primary and others as secondary. We only expect\n                // there to be two concurrent renderers at most: React Native (primary) and\n                // Fabric (secondary); React DOM (primary) and React ART (secondary).\n                // Secondary renderers store their context values on separate fields.\n                _currentValue: defaultValue,\n                _currentValue2: defaultValue,\n                // Used to track how many concurrent renderers this context currently\n                // supports within in a single renderer. Such as parallel server rendering.\n                _threadCount: 0,\n                // These are circular\n                Provider: null,\n                Consumer: null,\n                // Add these to use same hidden class in VM as ServerContext\n                _defaultValue: null,\n                _globalName: null\n            };\n            context.Provider = {\n                $$typeof: REACT_PROVIDER_TYPE,\n                _context: context\n            };\n            var hasWarnedAboutUsingNestedContextConsumers = false;\n            var hasWarnedAboutUsingConsumerProvider = false;\n            var hasWarnedAboutDisplayNameOnConsumer = false;\n            {\n                // A separate object, but proxies back to the original context object for\n                // backwards compatibility. It has a different $$typeof, so we can properly\n                // warn for the incorrect usage of Context as a Consumer.\n                var Consumer = {\n                    $$typeof: REACT_CONTEXT_TYPE,\n                    _context: context\n                }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n                Object.defineProperties(Consumer, {\n                    Provider: {\n                        get: function() {\n                            if (!hasWarnedAboutUsingConsumerProvider) {\n                                hasWarnedAboutUsingConsumerProvider = true;\n                                error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Provider> instead?\");\n                            }\n                            return context.Provider;\n                        },\n                        set: function(_Provider) {\n                            context.Provider = _Provider;\n                        }\n                    },\n                    _currentValue: {\n                        get: function() {\n                            return context._currentValue;\n                        },\n                        set: function(_currentValue) {\n                            context._currentValue = _currentValue;\n                        }\n                    },\n                    _currentValue2: {\n                        get: function() {\n                            return context._currentValue2;\n                        },\n                        set: function(_currentValue2) {\n                            context._currentValue2 = _currentValue2;\n                        }\n                    },\n                    _threadCount: {\n                        get: function() {\n                            return context._threadCount;\n                        },\n                        set: function(_threadCount) {\n                            context._threadCount = _threadCount;\n                        }\n                    },\n                    Consumer: {\n                        get: function() {\n                            if (!hasWarnedAboutUsingNestedContextConsumers) {\n                                hasWarnedAboutUsingNestedContextConsumers = true;\n                                error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Consumer> instead?\");\n                            }\n                            return context.Consumer;\n                        }\n                    },\n                    displayName: {\n                        get: function() {\n                            return context.displayName;\n                        },\n                        set: function(displayName) {\n                            if (!hasWarnedAboutDisplayNameOnConsumer) {\n                                warn(\"Setting `displayName` on Context.Consumer has no effect. \" + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n                                hasWarnedAboutDisplayNameOnConsumer = true;\n                            }\n                        }\n                    }\n                }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n                context.Consumer = Consumer;\n            }\n            {\n                context._currentRenderer = null;\n                context._currentRenderer2 = null;\n            }\n            return context;\n        }\n        var Uninitialized = -1;\n        var Pending = 0;\n        var Resolved = 1;\n        var Rejected = 2;\n        function lazyInitializer(payload) {\n            if (payload._status === Uninitialized) {\n                var ctor = payload._result;\n                var thenable = ctor(); // Transition to the next state.\n                // This might throw either because it's missing or throws. If so, we treat it\n                // as still uninitialized and try again next time. Which is the same as what\n                // happens if the ctor or any wrappers processing the ctor throws. This might\n                // end up fixing it if the resolution was a concurrency bug.\n                thenable.then(function(moduleObject) {\n                    if (payload._status === Pending || payload._status === Uninitialized) {\n                        // Transition to the next state.\n                        var resolved = payload;\n                        resolved._status = Resolved;\n                        resolved._result = moduleObject;\n                    }\n                }, function(error) {\n                    if (payload._status === Pending || payload._status === Uninitialized) {\n                        // Transition to the next state.\n                        var rejected = payload;\n                        rejected._status = Rejected;\n                        rejected._result = error;\n                    }\n                });\n                if (payload._status === Uninitialized) {\n                    // In case, we're still uninitialized, then we're waiting for the thenable\n                    // to resolve. Set it as pending in the meantime.\n                    var pending = payload;\n                    pending._status = Pending;\n                    pending._result = thenable;\n                }\n            }\n            if (payload._status === Resolved) {\n                var moduleObject = payload._result;\n                {\n                    if (moduleObject === undefined) {\n                        error(\"lazy: Expected the result of a dynamic imp\" + \"ort() call. \" + \"Instead received: %s\\n\\nYour code should look like: \\n  \" + // Break up imports to avoid accidentally parsing them as dependencies.\n                        \"const MyComponent = lazy(() => imp\" + \"ort('./MyComponent'))\\n\\n\" + \"Did you accidentally put curly braces around the import?\", moduleObject);\n                    }\n                }\n                {\n                    if (!(\"default\" in moduleObject)) {\n                        error(\"lazy: Expected the result of a dynamic imp\" + \"ort() call. \" + \"Instead received: %s\\n\\nYour code should look like: \\n  \" + // Break up imports to avoid accidentally parsing them as dependencies.\n                        \"const MyComponent = lazy(() => imp\" + \"ort('./MyComponent'))\", moduleObject);\n                    }\n                }\n                return moduleObject.default;\n            } else {\n                throw payload._result;\n            }\n        }\n        function lazy(ctor) {\n            var payload = {\n                // We use these fields to store the result.\n                _status: Uninitialized,\n                _result: ctor\n            };\n            var lazyType = {\n                $$typeof: REACT_LAZY_TYPE,\n                _payload: payload,\n                _init: lazyInitializer\n            };\n            {\n                // In production, this would just set it on the object.\n                var defaultProps;\n                var propTypes; // $FlowFixMe\n                Object.defineProperties(lazyType, {\n                    defaultProps: {\n                        configurable: true,\n                        get: function() {\n                            return defaultProps;\n                        },\n                        set: function(newDefaultProps) {\n                            error(\"React.lazy(...): It is not supported to assign `defaultProps` to \" + \"a lazy component import. Either specify them where the component \" + \"is defined, or create a wrapping component around it.\");\n                            defaultProps = newDefaultProps; // Match production behavior more closely:\n                            // $FlowFixMe\n                            Object.defineProperty(lazyType, \"defaultProps\", {\n                                enumerable: true\n                            });\n                        }\n                    },\n                    propTypes: {\n                        configurable: true,\n                        get: function() {\n                            return propTypes;\n                        },\n                        set: function(newPropTypes) {\n                            error(\"React.lazy(...): It is not supported to assign `propTypes` to \" + \"a lazy component import. Either specify them where the component \" + \"is defined, or create a wrapping component around it.\");\n                            propTypes = newPropTypes; // Match production behavior more closely:\n                            // $FlowFixMe\n                            Object.defineProperty(lazyType, \"propTypes\", {\n                                enumerable: true\n                            });\n                        }\n                    }\n                });\n            }\n            return lazyType;\n        }\n        function forwardRef(render) {\n            {\n                if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n                    error(\"forwardRef requires a render function but received a `memo` \" + \"component. Instead of forwardRef(memo(...)), use \" + \"memo(forwardRef(...)).\");\n                } else if (typeof render !== \"function\") {\n                    error(\"forwardRef requires a render function but was given %s.\", render === null ? \"null\" : typeof render);\n                } else {\n                    if (render.length !== 0 && render.length !== 2) {\n                        error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\");\n                    }\n                }\n                if (render != null) {\n                    if (render.defaultProps != null || render.propTypes != null) {\n                        error(\"forwardRef render functions do not support propTypes or defaultProps. \" + \"Did you accidentally pass a React component?\");\n                    }\n                }\n            }\n            var elementType = {\n                $$typeof: REACT_FORWARD_REF_TYPE,\n                render: render\n            };\n            {\n                var ownName;\n                Object.defineProperty(elementType, \"displayName\", {\n                    enumerable: false,\n                    configurable: true,\n                    get: function() {\n                        return ownName;\n                    },\n                    set: function(name) {\n                        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n                        // because the component may be used elsewhere.\n                        // But it's nice for anonymous functions to inherit the name,\n                        // so that our component-stack generation logic will display their frames.\n                        // An anonymous function generally suggests a pattern like:\n                        //   React.forwardRef((props, ref) => {...});\n                        // This kind of inner function is not used elsewhere so the side effect is okay.\n                        if (!render.name && !render.displayName) {\n                            render.displayName = name;\n                        }\n                    }\n                });\n            }\n            return elementType;\n        }\n        var REACT_MODULE_REFERENCE;\n        {\n            REACT_MODULE_REFERENCE = Symbol.for(\"react.module.reference\");\n        }\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function memo(type, compare) {\n            {\n                if (!isValidElementType(type)) {\n                    error(\"memo: The first argument must be a component. Instead \" + \"received: %s\", type === null ? \"null\" : typeof type);\n                }\n            }\n            var elementType = {\n                $$typeof: REACT_MEMO_TYPE,\n                type: type,\n                compare: compare === undefined ? null : compare\n            };\n            {\n                var ownName;\n                Object.defineProperty(elementType, \"displayName\", {\n                    enumerable: false,\n                    configurable: true,\n                    get: function() {\n                        return ownName;\n                    },\n                    set: function(name) {\n                        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n                        // because the component may be used elsewhere.\n                        // But it's nice for anonymous functions to inherit the name,\n                        // so that our component-stack generation logic will display their frames.\n                        // An anonymous function generally suggests a pattern like:\n                        //   React.memo((props) => {...});\n                        // This kind of inner function is not used elsewhere so the side effect is okay.\n                        if (!type.name && !type.displayName) {\n                            type.displayName = name;\n                        }\n                    }\n                });\n            }\n            return elementType;\n        }\n        function resolveDispatcher() {\n            var dispatcher = ReactCurrentDispatcher.current;\n            {\n                if (dispatcher === null) {\n                    error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" + \" one of the following reasons:\\n\" + \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" + \"2. You might be breaking the Rules of Hooks\\n\" + \"3. You might have more than one copy of React in the same app\\n\" + \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n                }\n            }\n            // intentionally don't throw our own error because this is in a hot path.\n            // Also helps ensure this is inlined.\n            return dispatcher;\n        }\n        function useContext(Context) {\n            var dispatcher = resolveDispatcher();\n            {\n                // TODO: add a more generic warning for invalid values.\n                if (Context._context !== undefined) {\n                    var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n                    // and nobody should be using this in existing code.\n                    if (realContext.Consumer === Context) {\n                        error(\"Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be \" + \"removed in a future major release. Did you mean to call useContext(Context) instead?\");\n                    } else if (realContext.Provider === Context) {\n                        error(\"Calling useContext(Context.Provider) is not supported. \" + \"Did you mean to call useContext(Context) instead?\");\n                    }\n                }\n            }\n            return dispatcher.useContext(Context);\n        }\n        function useState(initialState) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useState(initialState);\n        }\n        function useReducer(reducer, initialArg, init) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useReducer(reducer, initialArg, init);\n        }\n        function useRef(initialValue) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useRef(initialValue);\n        }\n        function useEffect(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useEffect(create, deps);\n        }\n        function useInsertionEffect(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useInsertionEffect(create, deps);\n        }\n        function useLayoutEffect(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useLayoutEffect(create, deps);\n        }\n        function useCallback(callback, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useCallback(callback, deps);\n        }\n        function useMemo(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useMemo(create, deps);\n        }\n        function useImperativeHandle(ref, create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useImperativeHandle(ref, create, deps);\n        }\n        function useDebugValue(value, formatterFn) {\n            {\n                var dispatcher = resolveDispatcher();\n                return dispatcher.useDebugValue(value, formatterFn);\n            }\n        }\n        function useTransition() {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useTransition();\n        }\n        function useDeferredValue(value) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useDeferredValue(value);\n        }\n        function useId() {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useId();\n        }\n        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n        }\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            var control;\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher$1.current = null;\n                disableLogs();\n            }\n            try {\n                // This should throw.\n                if (construct) {\n                    // Something should be setting the props in the constructor.\n                    var Fake = function() {\n                        throw Error();\n                    }; // $FlowFixMe\n                    Object.defineProperty(Fake.prototype, \"props\", {\n                        set: function() {\n                            // We use a throwing setter instead of frozen or non-writable props\n                            // because that won't throw in a non-strict mode function.\n                            throw Error();\n                        }\n                    });\n                    if (typeof Reflect === \"object\" && Reflect.construct) {\n                        // We construct a different control for this case to include any extra\n                        // frames added by the construct call.\n                        try {\n                            Reflect.construct(Fake, []);\n                        } catch (x) {\n                            control = x;\n                        }\n                        Reflect.construct(fn, [], Fake);\n                    } else {\n                        try {\n                            Fake.call();\n                        } catch (x) {\n                            control = x;\n                        }\n                        fn.call(Fake.prototype);\n                    }\n                } else {\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        control = x;\n                    }\n                    fn();\n                }\n            } catch (sample) {\n                // This is inlined manually because closure doesn't do it for us.\n                if (sample && control && typeof sample.stack === \"string\") {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sample.stack.split(\"\\n\");\n                    var controlLines = control.stack.split(\"\\n\");\n                    var s = sampleLines.length - 1;\n                    var c = controlLines.length - 1;\n                    while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                        // We expect at least one stack frame to be shared.\n                        // Typically this will be the root most one. However, stack frames may be\n                        // cut off due to maximum stack limits. In this case, one maybe cut off\n                        // earlier than the other. We assume that the sample is longer or the same\n                        // and there for cut off earlier. So we should find the root most frame in\n                        // the sample somewhere in the control.\n                        c--;\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        }\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher$1.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement(null);\n                        }\n                    }\n                }\n            }\n        }\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    setExtraStackFrame(stack);\n                } else {\n                    setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        function getDeclarationErrorAddendum() {\n            if (ReactCurrentOwner.current) {\n                var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                if (name) {\n                    return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                }\n            }\n            return \"\";\n        }\n        function getSourceInfoErrorAddendum(source) {\n            if (source !== undefined) {\n                var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                var lineNumber = source.lineNumber;\n                return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n            }\n            return \"\";\n        }\n        function getSourceInfoErrorAddendumForProps(elementProps) {\n            if (elementProps !== null && elementProps !== undefined) {\n                return getSourceInfoErrorAddendum(elementProps.__source);\n            }\n            return \"\";\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            var info = getDeclarationErrorAddendum();\n            if (!info) {\n                var parentName = typeof parentType === \"string\" ? parentType : parentType.displayName || parentType.name;\n                if (parentName) {\n                    info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                }\n            }\n            return info;\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            if (!element._store || element._store.validated || element.key != null) {\n                return;\n            }\n            element._store.validated = true;\n            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                return;\n            }\n            ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n            // property, it may be the creator of the child that's responsible for\n            // assigning it a key.\n            var childOwner = \"\";\n            if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                // Give the component that originally created this child.\n                childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n            }\n            {\n                setCurrentlyValidatingElement$1(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement$1(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            if (typeof node !== \"object\") {\n                return;\n            }\n            if (isArray(node)) {\n                for(var i = 0; i < node.length; i++){\n                    var child = node[i];\n                    if (isValidElement(child)) {\n                        validateExplicitKey(child, parentType);\n                    }\n                }\n            } else if (isValidElement(node)) {\n                // This element was passed in a valid location.\n                if (node._store) {\n                    node._store.validated = true;\n                }\n            } else if (node) {\n                var iteratorFn = getIteratorFn(node);\n                if (typeof iteratorFn === \"function\") {\n                    // Entry iterators used to provide implicit keys,\n                    // but now we print a separate warning for them later.\n                    if (iteratorFn !== node.entries) {\n                        var iterator = iteratorFn.call(node);\n                        var step;\n                        while(!(step = iterator.next()).done){\n                            if (isValidElement(step.value)) {\n                                validateExplicitKey(step.value, parentType);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement$1(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement$1(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement$1(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement$1(null);\n                }\n            }\n        }\n        function createElementWithValidation(type, props, children) {\n            var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n            // succeed and there will likely be errors in render.\n            if (!validType) {\n                var info = \"\";\n                if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                    info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                }\n                var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n                if (sourceInfo) {\n                    info += sourceInfo;\n                } else {\n                    info += getDeclarationErrorAddendum();\n                }\n                var typeString;\n                if (type === null) {\n                    typeString = \"null\";\n                } else if (isArray(type)) {\n                    typeString = \"array\";\n                } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                    typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                    info = \" Did you accidentally export a JSX literal instead of a component?\";\n                } else {\n                    typeString = typeof type;\n                }\n                {\n                    error(\"React.createElement: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n            }\n            var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n            // TODO: Drop this when these are no longer allowed as the type argument.\n            if (element == null) {\n                return element;\n            } // Skip key warning if the type isn't valid since our key validation logic\n            // doesn't expect a non-string/function type and can throw confusing errors.\n            // We don't want exception behavior to differ between dev and prod.\n            // (Rendering will throw with a helpful message and as soon as the type is\n            // fixed, the key warnings will appear.)\n            if (validType) {\n                for(var i = 2; i < arguments.length; i++){\n                    validateChildKeys(arguments[i], type);\n                }\n            }\n            if (type === REACT_FRAGMENT_TYPE) {\n                validateFragmentProps(element);\n            } else {\n                validatePropTypes(element);\n            }\n            return element;\n        }\n        var didWarnAboutDeprecatedCreateFactory = false;\n        function createFactoryWithValidation(type) {\n            var validatedFactory = createElementWithValidation.bind(null, type);\n            validatedFactory.type = type;\n            {\n                if (!didWarnAboutDeprecatedCreateFactory) {\n                    didWarnAboutDeprecatedCreateFactory = true;\n                    warn(\"React.createFactory() is deprecated and will be removed in \" + \"a future major release. Consider using JSX \" + \"or use React.createElement() directly instead.\");\n                } // Legacy hook: remove it\n                Object.defineProperty(validatedFactory, \"type\", {\n                    enumerable: false,\n                    get: function() {\n                        warn(\"Factory.type is deprecated. Access the class directly \" + \"before passing it to createFactory.\");\n                        Object.defineProperty(this, \"type\", {\n                            value: type\n                        });\n                        return type;\n                    }\n                });\n            }\n            return validatedFactory;\n        }\n        function cloneElementWithValidation(element, props, children) {\n            var newElement = cloneElement.apply(this, arguments);\n            for(var i = 2; i < arguments.length; i++){\n                validateChildKeys(arguments[i], newElement.type);\n            }\n            validatePropTypes(newElement);\n            return newElement;\n        }\n        function startTransition(scope, options) {\n            var prevTransition = ReactCurrentBatchConfig.transition;\n            ReactCurrentBatchConfig.transition = {};\n            var currentTransition = ReactCurrentBatchConfig.transition;\n            {\n                ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n            }\n            try {\n                scope();\n            } finally{\n                ReactCurrentBatchConfig.transition = prevTransition;\n                {\n                    if (prevTransition === null && currentTransition._updatedFibers) {\n                        var updatedFibersCount = currentTransition._updatedFibers.size;\n                        if (updatedFibersCount > 10) {\n                            warn(\"Detected a large number of updates inside startTransition. \" + \"If this is due to a subscription please re-write it to use React provided hooks. \" + \"Otherwise concurrent mode guarantees are off the table.\");\n                        }\n                        currentTransition._updatedFibers.clear();\n                    }\n                }\n            }\n        }\n        var didWarnAboutMessageChannel = false;\n        var enqueueTaskImpl = null;\n        function enqueueTask(task) {\n            if (enqueueTaskImpl === null) {\n                try {\n                    // read require off the module object to get around the bundlers.\n                    // we don't want them to detect a require and bundle a Node polyfill.\n                    var requireString = (\"require\" + Math.random()).slice(0, 7);\n                    var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n                    // version of setImmediate, bypassing fake timers if any.\n                    enqueueTaskImpl = nodeRequire.call(module, \"timers\").setImmediate;\n                } catch (_err) {\n                    // we're in a browser\n                    // we can't use regular timers because they may still be faked\n                    // so we try MessageChannel+postMessage instead\n                    enqueueTaskImpl = function(callback) {\n                        {\n                            if (didWarnAboutMessageChannel === false) {\n                                didWarnAboutMessageChannel = true;\n                                if (typeof MessageChannel === \"undefined\") {\n                                    error(\"This browser does not have a MessageChannel implementation, \" + \"so enqueuing tasks via await act(async () => ...) will fail. \" + \"Please file an issue at https://github.com/facebook/react/issues \" + \"if you encounter this warning.\");\n                                }\n                            }\n                        }\n                        var channel = new MessageChannel();\n                        channel.port1.onmessage = callback;\n                        channel.port2.postMessage(undefined);\n                    };\n                }\n            }\n            return enqueueTaskImpl(task);\n        }\n        var actScopeDepth = 0;\n        var didWarnNoAwaitAct = false;\n        function act(callback) {\n            {\n                // `act` calls can be nested, so we track the depth. This represents the\n                // number of `act` scopes on the stack.\n                var prevActScopeDepth = actScopeDepth;\n                actScopeDepth++;\n                if (ReactCurrentActQueue.current === null) {\n                    // This is the outermost `act` scope. Initialize the queue. The reconciler\n                    // will detect the queue and use it instead of Scheduler.\n                    ReactCurrentActQueue.current = [];\n                }\n                var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n                var result;\n                try {\n                    // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n                    // set to `true` while the given callback is executed, not for updates\n                    // triggered during an async event, because this is how the legacy\n                    // implementation of `act` behaved.\n                    ReactCurrentActQueue.isBatchingLegacy = true;\n                    result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n                    // which flushed updates immediately after the scope function exits, even\n                    // if it's an async function.\n                    if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n                        var queue = ReactCurrentActQueue.current;\n                        if (queue !== null) {\n                            ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n                            flushActQueue(queue);\n                        }\n                    }\n                } catch (error) {\n                    popActScope(prevActScopeDepth);\n                    throw error;\n                } finally{\n                    ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n                }\n                if (result !== null && typeof result === \"object\" && typeof result.then === \"function\") {\n                    var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n                    // for it to resolve before exiting the current scope.\n                    var wasAwaited = false;\n                    var thenable = {\n                        then: function(resolve, reject) {\n                            wasAwaited = true;\n                            thenableResult.then(function(returnValue) {\n                                popActScope(prevActScopeDepth);\n                                if (actScopeDepth === 0) {\n                                    // We've exited the outermost act scope. Recursively flush the\n                                    // queue until there's no remaining work.\n                                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                                } else {\n                                    resolve(returnValue);\n                                }\n                            }, function(error) {\n                                // The callback threw an error.\n                                popActScope(prevActScopeDepth);\n                                reject(error);\n                            });\n                        }\n                    };\n                    {\n                        if (!didWarnNoAwaitAct && typeof Promise !== \"undefined\") {\n                            // eslint-disable-next-line no-undef\n                            Promise.resolve().then(function() {}).then(function() {\n                                if (!wasAwaited) {\n                                    didWarnNoAwaitAct = true;\n                                    error(\"You called act(async () => ...) without await. \" + \"This could lead to unexpected testing behaviour, \" + \"interleaving multiple act calls and mixing their \" + \"scopes. \" + \"You should - await act(async () => ...);\");\n                                }\n                            });\n                        }\n                    }\n                    return thenable;\n                } else {\n                    var returnValue = result; // The callback is not an async function. Exit the current scope\n                    // immediately, without awaiting.\n                    popActScope(prevActScopeDepth);\n                    if (actScopeDepth === 0) {\n                        // Exiting the outermost act scope. Flush the queue.\n                        var _queue = ReactCurrentActQueue.current;\n                        if (_queue !== null) {\n                            flushActQueue(_queue);\n                            ReactCurrentActQueue.current = null;\n                        } // Return a thenable. If the user awaits it, we'll flush again in\n                        // case additional work was scheduled by a microtask.\n                        var _thenable = {\n                            then: function(resolve, reject) {\n                                // Confirm we haven't re-entered another `act` scope, in case\n                                // the user does something weird like await the thenable\n                                // multiple times.\n                                if (ReactCurrentActQueue.current === null) {\n                                    // Recursively flush the queue until there's no remaining work.\n                                    ReactCurrentActQueue.current = [];\n                                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                                } else {\n                                    resolve(returnValue);\n                                }\n                            }\n                        };\n                        return _thenable;\n                    } else {\n                        // Since we're inside a nested `act` scope, the returned thenable\n                        // immediately resolves. The outer scope will flush the queue.\n                        var _thenable2 = {\n                            then: function(resolve, reject) {\n                                resolve(returnValue);\n                            }\n                        };\n                        return _thenable2;\n                    }\n                }\n            }\n        }\n        function popActScope(prevActScopeDepth) {\n            {\n                if (prevActScopeDepth !== actScopeDepth - 1) {\n                    error(\"You seem to have overlapping act() calls, this is not supported. \" + \"Be sure to await previous act() calls before making a new one. \");\n                }\n                actScopeDepth = prevActScopeDepth;\n            }\n        }\n        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n            {\n                var queue = ReactCurrentActQueue.current;\n                if (queue !== null) {\n                    try {\n                        flushActQueue(queue);\n                        enqueueTask(function() {\n                            if (queue.length === 0) {\n                                // No additional work was scheduled. Finish.\n                                ReactCurrentActQueue.current = null;\n                                resolve(returnValue);\n                            } else {\n                                // Keep flushing work until there's none left.\n                                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                            }\n                        });\n                    } catch (error) {\n                        reject(error);\n                    }\n                } else {\n                    resolve(returnValue);\n                }\n            }\n        }\n        var isFlushing = false;\n        function flushActQueue(queue) {\n            {\n                if (!isFlushing) {\n                    // Prevent re-entrance.\n                    isFlushing = true;\n                    var i = 0;\n                    try {\n                        for(; i < queue.length; i++){\n                            var callback = queue[i];\n                            do {\n                                callback = callback(true);\n                            }while (callback !== null);\n                        }\n                        queue.length = 0;\n                    } catch (error) {\n                        // If something throws, leave the remaining callbacks on the queue.\n                        queue = queue.slice(i + 1);\n                        throw error;\n                    } finally{\n                        isFlushing = false;\n                    }\n                }\n            }\n        }\n        var createElement$1 = createElementWithValidation;\n        var cloneElement$1 = cloneElementWithValidation;\n        var createFactory = createFactoryWithValidation;\n        var Children = {\n            map: mapChildren,\n            forEach: forEachChildren,\n            count: countChildren,\n            toArray: toArray,\n            only: onlyChild\n        };\n        exports.Children = Children;\n        exports.Component = Component;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.Profiler = REACT_PROFILER_TYPE;\n        exports.PureComponent = PureComponent;\n        exports.StrictMode = REACT_STRICT_MODE_TYPE;\n        exports.Suspense = REACT_SUSPENSE_TYPE;\n        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\n        exports.cloneElement = cloneElement$1;\n        exports.createContext = createContext;\n        exports.createElement = createElement$1;\n        exports.createFactory = createFactory;\n        exports.createRef = createRef;\n        exports.forwardRef = forwardRef;\n        exports.isValidElement = isValidElement;\n        exports.lazy = lazy;\n        exports.memo = memo;\n        exports.startTransition = startTransition;\n        exports.unstable_act = act;\n        exports.useCallback = useCallback;\n        exports.useContext = useContext;\n        exports.useDebugValue = useDebugValue;\n        exports.useDeferredValue = useDeferredValue;\n        exports.useEffect = useEffect;\n        exports.useId = useId;\n        exports.useImperativeHandle = useImperativeHandle;\n        exports.useInsertionEffect = useInsertionEffect;\n        exports.useLayoutEffect = useLayoutEffect;\n        exports.useMemo = useMemo;\n        exports.useReducer = useReducer;\n        exports.useRef = useRef;\n        exports.useState = useState;\n        exports.useSyncExternalStore = useSyncExternalStore;\n        exports.useTransition = useTransition;\n        exports.version = ReactVersion;\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n        }\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/react/index.js":
/*!*****************************************!*\
  !*** ../../node_modules/react/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"(middleware)/../../node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLElBQUlBLEtBQXlCLEVBQWMsRUFFMUMsTUFBTTtJQUNMQyx3SUFBeUI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcz9mMjNhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/react/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/snake-case/dist.es2015/index.js":
/*!**********************************************************!*\
  !*** ../../node_modules/snake-case/dist.es2015/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   snakeCase: () => (/* binding */ snakeCase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(middleware)/../../node_modules/snake-case/node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var dot_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dot-case */ \"(middleware)/../../node_modules/dot-case/dist.es2015/index.js\");\n\n\nfunction snakeCase(input, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    return (0,dot_case__WEBPACK_IMPORTED_MODULE_0__.dotCase)(input, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({\n        delimiter: \"_\"\n    }, options));\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9zbmFrZS1jYXNlL2Rpc3QuZXMyMDE1L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpQztBQUNFO0FBQzVCLFNBQVNFLFVBQVVDLEtBQUssRUFBRUMsT0FBTztJQUNwQyxJQUFJQSxZQUFZLEtBQUssR0FBRztRQUFFQSxVQUFVLENBQUM7SUFBRztJQUN4QyxPQUFPSCxpREFBT0EsQ0FBQ0UsT0FBT0gsK0NBQVFBLENBQUM7UUFBRUssV0FBVztJQUFJLEdBQUdEO0FBQ3ZELEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvc25ha2UtY2FzZS9kaXN0LmVzMjAxNS9pbmRleC5qcz83ZDYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBkb3RDYXNlIH0gZnJvbSBcImRvdC1jYXNlXCI7XG5leHBvcnQgZnVuY3Rpb24gc25ha2VDYXNlKGlucHV0LCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICByZXR1cm4gZG90Q2FzZShpbnB1dCwgX19hc3NpZ24oeyBkZWxpbWl0ZXI6IFwiX1wiIH0sIG9wdGlvbnMpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsImRvdENhc2UiLCJzbmFrZUNhc2UiLCJpbnB1dCIsIm9wdGlvbnMiLCJkZWxpbWl0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/snake-case/dist.es2015/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/snakecase-keys/index.js":
/*!**************************************************!*\
  !*** ../../node_modules/snakecase-keys/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst map = __webpack_require__(/*! map-obj */ \"(middleware)/../../node_modules/map-obj/index.js\");\nconst { snakeCase } = __webpack_require__(/*! snake-case */ \"(middleware)/../../node_modules/snake-case/dist.es2015/index.js\");\nmodule.exports = function(obj, options) {\n    options = Object.assign({\n        deep: true,\n        exclude: [],\n        parsingOptions: {}\n    }, options);\n    return map(obj, function(key, val) {\n        return [\n            matches(options.exclude, key) ? key : snakeCase(key, options.parsingOptions),\n            val\n        ];\n    }, options);\n};\nfunction matches(patterns, value) {\n    return patterns.some(function(pattern) {\n        return typeof pattern === \"string\" ? pattern === value : pattern.test(value);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9zbmFrZWNhc2Uta2V5cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLE1BQU1DLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUdELG1CQUFPQSxDQUFDO0FBRTlCRSxPQUFPQyxPQUFPLEdBQUcsU0FBVUMsR0FBRyxFQUFFQyxPQUFPO0lBQ3JDQSxVQUFVQyxPQUFPQyxNQUFNLENBQUM7UUFBRUMsTUFBTTtRQUFNQyxTQUFTLEVBQUU7UUFBRUMsZ0JBQWdCLENBQUM7SUFBRSxHQUFHTDtJQUV6RSxPQUFPTixJQUFJSyxLQUFLLFNBQVVPLEdBQUcsRUFBRUMsR0FBRztRQUNoQyxPQUFPO1lBQ0xDLFFBQVFSLFFBQVFJLE9BQU8sRUFBRUUsT0FBT0EsTUFBTVYsVUFBVVUsS0FBS04sUUFBUUssY0FBYztZQUMzRUU7U0FDRDtJQUNILEdBQUdQO0FBQ0w7QUFFQSxTQUFTUSxRQUFTQyxRQUFRLEVBQUVDLEtBQUs7SUFDL0IsT0FBT0QsU0FBU0UsSUFBSSxDQUFDLFNBQVVDLE9BQU87UUFDcEMsT0FBTyxPQUFPQSxZQUFZLFdBQ3RCQSxZQUFZRixRQUNaRSxRQUFRQyxJQUFJLENBQUNIO0lBQ25CO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9zbmFrZWNhc2Uta2V5cy9pbmRleC5qcz8yMGQ4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBtYXAgPSByZXF1aXJlKCdtYXAtb2JqJylcbmNvbnN0IHsgc25ha2VDYXNlIH0gPSByZXF1aXJlKCdzbmFrZS1jYXNlJylcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHsgZGVlcDogdHJ1ZSwgZXhjbHVkZTogW10sIHBhcnNpbmdPcHRpb25zOiB7fSB9LCBvcHRpb25zKVxuXG4gIHJldHVybiBtYXAob2JqLCBmdW5jdGlvbiAoa2V5LCB2YWwpIHtcbiAgICByZXR1cm4gW1xuICAgICAgbWF0Y2hlcyhvcHRpb25zLmV4Y2x1ZGUsIGtleSkgPyBrZXkgOiBzbmFrZUNhc2Uoa2V5LCBvcHRpb25zLnBhcnNpbmdPcHRpb25zKSxcbiAgICAgIHZhbFxuICAgIF1cbiAgfSwgb3B0aW9ucylcbn1cblxuZnVuY3Rpb24gbWF0Y2hlcyAocGF0dGVybnMsIHZhbHVlKSB7XG4gIHJldHVybiBwYXR0ZXJucy5zb21lKGZ1bmN0aW9uIChwYXR0ZXJuKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBwYXR0ZXJuID09PSAnc3RyaW5nJ1xuICAgICAgPyBwYXR0ZXJuID09PSB2YWx1ZVxuICAgICAgOiBwYXR0ZXJuLnRlc3QodmFsdWUpXG4gIH0pXG59XG4iXSwibmFtZXMiOlsibWFwIiwicmVxdWlyZSIsInNuYWtlQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJvYmoiLCJvcHRpb25zIiwiT2JqZWN0IiwiYXNzaWduIiwiZGVlcCIsImV4Y2x1ZGUiLCJwYXJzaW5nT3B0aW9ucyIsImtleSIsInZhbCIsIm1hdGNoZXMiLCJwYXR0ZXJucyIsInZhbHVlIiwic29tZSIsInBhdHRlcm4iLCJ0ZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/snakecase-keys/index.js\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs":
/*!*************************************************************************!*\
  !*** ../../node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (crypto);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvYmFja2VuZC9kaXN0L3J1bnRpbWUvYnJvd3Nlci9jcnlwdG8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZUEsTUFBTUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9iYWNrZW5kL2Rpc3QvcnVudGltZS9icm93c2VyL2NyeXB0by5tanM/NTZjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjcnlwdG87XG4iXSwibmFtZXMiOlsiY3J5cHRvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/backend/dist/runtime/browser/crypto.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/backend/dist/runtime/browser/fetch.mjs":
/*!************************************************************************!*\
  !*** ../../node_modules/@clerk/backend/dist/runtime/browser/fetch.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RuntimeAbortController: () => (/* binding */ RuntimeAbortController),\n/* harmony export */   RuntimeBlob: () => (/* binding */ RuntimeBlob),\n/* harmony export */   RuntimeFetch: () => (/* binding */ RuntimeFetch),\n/* harmony export */   RuntimeFormData: () => (/* binding */ RuntimeFormData),\n/* harmony export */   RuntimeHeaders: () => (/* binding */ RuntimeHeaders),\n/* harmony export */   RuntimeRequest: () => (/* binding */ RuntimeRequest),\n/* harmony export */   RuntimeResponse: () => (/* binding */ RuntimeResponse),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\nconst RuntimeBlob = Blob;\nconst RuntimeFormData = FormData;\nconst RuntimeHeaders = Headers;\nconst RuntimeRequest = Request;\nconst RuntimeResponse = Response;\nconst RuntimeAbortController = AbortController;\nconst RuntimeFetch = fetch;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvYmFja2VuZC9kaXN0L3J1bnRpbWUvYnJvd3Nlci9mZXRjaC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxpRUFBZUEsS0FBS0EsRUFBQztBQUNkLE1BQU1DLGNBQWNDLEtBQUs7QUFDekIsTUFBTUMsa0JBQWtCQyxTQUFTO0FBQ2pDLE1BQU1DLGlCQUFpQkMsUUFBUTtBQUMvQixNQUFNQyxpQkFBaUJDLFFBQVE7QUFDL0IsTUFBTUMsa0JBQWtCQyxTQUFTO0FBQ2pDLE1BQU1DLHlCQUF5QkMsZ0JBQWdCO0FBQy9DLE1BQU1DLGVBQWViLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvYmFja2VuZC9kaXN0L3J1bnRpbWUvYnJvd3Nlci9mZXRjaC5tanM/MTZhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmZXRjaDtcbmV4cG9ydCBjb25zdCBSdW50aW1lQmxvYiA9IEJsb2I7XG5leHBvcnQgY29uc3QgUnVudGltZUZvcm1EYXRhID0gRm9ybURhdGE7XG5leHBvcnQgY29uc3QgUnVudGltZUhlYWRlcnMgPSBIZWFkZXJzO1xuZXhwb3J0IGNvbnN0IFJ1bnRpbWVSZXF1ZXN0ID0gUmVxdWVzdDtcbmV4cG9ydCBjb25zdCBSdW50aW1lUmVzcG9uc2UgPSBSZXNwb25zZTtcbmV4cG9ydCBjb25zdCBSdW50aW1lQWJvcnRDb250cm9sbGVyID0gQWJvcnRDb250cm9sbGVyO1xuZXhwb3J0IGNvbnN0IFJ1bnRpbWVGZXRjaCA9IGZldGNoO1xuIl0sIm5hbWVzIjpbImZldGNoIiwiUnVudGltZUJsb2IiLCJCbG9iIiwiUnVudGltZUZvcm1EYXRhIiwiRm9ybURhdGEiLCJSdW50aW1lSGVhZGVycyIsIkhlYWRlcnMiLCJSdW50aW1lUmVxdWVzdCIsIlJlcXVlc3QiLCJSdW50aW1lUmVzcG9uc2UiLCJSZXNwb25zZSIsIlJ1bnRpbWVBYm9ydENvbnRyb2xsZXIiLCJBYm9ydENvbnRyb2xsZXIiLCJSdW50aW1lRmV0Y2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/backend/dist/runtime/browser/fetch.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/callWithRetry.mjs":
/*!***************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/callWithRetry.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: () => (/* reexport safe */ _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_0__.callWithRetry)\n/* harmony export */ });\n/* harmony import */ var _chunk_4PW5MDZA_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-4PW5MDZA.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\");\n/* harmony import */ var _chunk_NDCDZYN6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-NDCDZYN6.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\");\n\n\n //# sourceMappingURL=callWithRetry.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2FsbFdpdGhSZXRyeS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRThCO0FBQ0E7QUFHNUIsQ0FDRiwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2FsbFdpdGhSZXRyeS5tanM/ZGIwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBjYWxsV2l0aFJldHJ5XG59IGZyb20gXCIuL2NodW5rLTRQVzVNRFpBLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1ORENEWllONi5tanNcIjtcbmV4cG9ydCB7XG4gIGNhbGxXaXRoUmV0cnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxsV2l0aFJldHJ5Lm1qcy5tYXAiXSwibmFtZXMiOlsiY2FsbFdpdGhSZXRyeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/callWithRetry.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-3S7ZLCXD.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-3S7ZLCXD.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEV_BROWSER_JWT_MARKER: () => (/* binding */ DEV_BROWSER_JWT_MARKER),\n/* harmony export */   DEV_BROWSER_SSO_JWT_PARAMETER: () => (/* binding */ DEV_BROWSER_SSO_JWT_PARAMETER),\n/* harmony export */   extractDevBrowserJWTFromURLHash: () => (/* binding */ extractDevBrowserJWTFromURLHash),\n/* harmony export */   extractDevBrowserJWTFromURLSearchParams: () => (/* binding */ extractDevBrowserJWTFromURLSearchParams),\n/* harmony export */   setDevBrowserJWTInURL: () => (/* binding */ setDevBrowserJWTInURL)\n/* harmony export */ });\n// src/devBrowser.ts\nvar DEV_BROWSER_SSO_JWT_PARAMETER = \"__dev_session\";\nvar DEV_BROWSER_JWT_MARKER = \"__clerk_db_jwt\";\nvar DEV_BROWSER_JWT_MARKER_REGEXP = /__clerk_db_jwt\\[(.*)\\]/;\nfunction setDevBrowserJWTInURL(url, jwt, asQueryParam) {\n    const resultURL = new URL(url);\n    const jwtFromHash = extractDevBrowserJWTFromURLHash(resultURL);\n    const jwtFromSearch = extractDevBrowserJWTFromURLSearchParams(resultURL);\n    const jwtToSet = jwtFromHash || jwtFromSearch || jwt;\n    if (jwtToSet) {\n        if (asQueryParam) {\n            resultURL.searchParams.append(DEV_BROWSER_SSO_JWT_PARAMETER, jwtToSet);\n            resultURL.searchParams.append(DEV_BROWSER_JWT_MARKER, jwtToSet);\n        } else {\n            resultURL.hash = resultURL.hash + `${DEV_BROWSER_JWT_MARKER}[${jwtToSet}]`;\n        }\n    }\n    return resultURL;\n}\nfunction extractDevBrowserJWTFromHash(hash) {\n    const matches = hash.match(DEV_BROWSER_JWT_MARKER_REGEXP);\n    return matches ? matches[1] : \"\";\n}\nfunction extractDevBrowserJWTFromURLHash(url) {\n    const jwt = extractDevBrowserJWTFromHash(url.hash);\n    url.hash = url.hash.replace(DEV_BROWSER_JWT_MARKER_REGEXP, \"\");\n    if (url.href.endsWith(\"#\")) {\n        url.hash = \"\";\n    }\n    return jwt;\n}\nfunction extractDevBrowserJWTFromURLSearchParams(url) {\n    const jwtFromDevSession = url.searchParams.get(DEV_BROWSER_SSO_JWT_PARAMETER);\n    url.searchParams.delete(DEV_BROWSER_SSO_JWT_PARAMETER);\n    const jwtFromClerkDbJwt = url.searchParams.get(DEV_BROWSER_JWT_MARKER);\n    url.searchParams.delete(DEV_BROWSER_JWT_MARKER);\n    return jwtFromDevSession || jwtFromClerkDbJwt || \"\";\n}\n //# sourceMappingURL=chunk-3S7ZLCXD.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstM1M3WkxDWEQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLElBQUlBLGdDQUFnQztBQUNwQyxJQUFJQyx5QkFBeUI7QUFDN0IsSUFBSUMsZ0NBQWdDO0FBQ3BDLFNBQVNDLHNCQUFzQkMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLFlBQVk7SUFDbkQsTUFBTUMsWUFBWSxJQUFJQyxJQUFJSjtJQUMxQixNQUFNSyxjQUFjQyxnQ0FBZ0NIO0lBQ3BELE1BQU1JLGdCQUFnQkMsd0NBQXdDTDtJQUM5RCxNQUFNTSxXQUFXSixlQUFlRSxpQkFBaUJOO0lBQ2pELElBQUlRLFVBQVU7UUFDWixJQUFJUCxjQUFjO1lBQ2hCQyxVQUFVTyxZQUFZLENBQUNDLE1BQU0sQ0FBQ2YsK0JBQStCYTtZQUM3RE4sVUFBVU8sWUFBWSxDQUFDQyxNQUFNLENBQUNkLHdCQUF3Qlk7UUFDeEQsT0FBTztZQUNMTixVQUFVUyxJQUFJLEdBQUdULFVBQVVTLElBQUksR0FBRyxDQUFDLEVBQUVmLHVCQUF1QixDQUFDLEVBQUVZLFNBQVMsQ0FBQyxDQUFDO1FBQzVFO0lBQ0Y7SUFDQSxPQUFPTjtBQUNUO0FBQ0EsU0FBU1UsNkJBQTZCRCxJQUFJO0lBQ3hDLE1BQU1FLFVBQVVGLEtBQUtHLEtBQUssQ0FBQ2pCO0lBQzNCLE9BQU9nQixVQUFVQSxPQUFPLENBQUMsRUFBRSxHQUFHO0FBQ2hDO0FBQ0EsU0FBU1IsZ0NBQWdDTixHQUFHO0lBQzFDLE1BQU1DLE1BQU1ZLDZCQUE2QmIsSUFBSVksSUFBSTtJQUNqRFosSUFBSVksSUFBSSxHQUFHWixJQUFJWSxJQUFJLENBQUNJLE9BQU8sQ0FBQ2xCLCtCQUErQjtJQUMzRCxJQUFJRSxJQUFJaUIsSUFBSSxDQUFDQyxRQUFRLENBQUMsTUFBTTtRQUMxQmxCLElBQUlZLElBQUksR0FBRztJQUNiO0lBQ0EsT0FBT1g7QUFDVDtBQUNBLFNBQVNPLHdDQUF3Q1IsR0FBRztJQUNsRCxNQUFNbUIsb0JBQW9CbkIsSUFBSVUsWUFBWSxDQUFDVSxHQUFHLENBQUN4QjtJQUMvQ0ksSUFBSVUsWUFBWSxDQUFDVyxNQUFNLENBQUN6QjtJQUN4QixNQUFNMEIsb0JBQW9CdEIsSUFBSVUsWUFBWSxDQUFDVSxHQUFHLENBQUN2QjtJQUMvQ0csSUFBSVUsWUFBWSxDQUFDVyxNQUFNLENBQUN4QjtJQUN4QixPQUFPc0IscUJBQXFCRyxxQkFBcUI7QUFDbkQ7QUFRRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay0zUzdaTENYRC5tanM/ZDhkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZGV2QnJvd3Nlci50c1xudmFyIERFVl9CUk9XU0VSX1NTT19KV1RfUEFSQU1FVEVSID0gXCJfX2Rldl9zZXNzaW9uXCI7XG52YXIgREVWX0JST1dTRVJfSldUX01BUktFUiA9IFwiX19jbGVya19kYl9qd3RcIjtcbnZhciBERVZfQlJPV1NFUl9KV1RfTUFSS0VSX1JFR0VYUCA9IC9fX2NsZXJrX2RiX2p3dFxcWyguKilcXF0vO1xuZnVuY3Rpb24gc2V0RGV2QnJvd3NlckpXVEluVVJMKHVybCwgand0LCBhc1F1ZXJ5UGFyYW0pIHtcbiAgY29uc3QgcmVzdWx0VVJMID0gbmV3IFVSTCh1cmwpO1xuICBjb25zdCBqd3RGcm9tSGFzaCA9IGV4dHJhY3REZXZCcm93c2VySldURnJvbVVSTEhhc2gocmVzdWx0VVJMKTtcbiAgY29uc3Qgand0RnJvbVNlYXJjaCA9IGV4dHJhY3REZXZCcm93c2VySldURnJvbVVSTFNlYXJjaFBhcmFtcyhyZXN1bHRVUkwpO1xuICBjb25zdCBqd3RUb1NldCA9IGp3dEZyb21IYXNoIHx8IGp3dEZyb21TZWFyY2ggfHwgand0O1xuICBpZiAoand0VG9TZXQpIHtcbiAgICBpZiAoYXNRdWVyeVBhcmFtKSB7XG4gICAgICByZXN1bHRVUkwuc2VhcmNoUGFyYW1zLmFwcGVuZChERVZfQlJPV1NFUl9TU09fSldUX1BBUkFNRVRFUiwgand0VG9TZXQpO1xuICAgICAgcmVzdWx0VVJMLnNlYXJjaFBhcmFtcy5hcHBlbmQoREVWX0JST1dTRVJfSldUX01BUktFUiwgand0VG9TZXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHRVUkwuaGFzaCA9IHJlc3VsdFVSTC5oYXNoICsgYCR7REVWX0JST1dTRVJfSldUX01BUktFUn1bJHtqd3RUb1NldH1dYDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdFVSTDtcbn1cbmZ1bmN0aW9uIGV4dHJhY3REZXZCcm93c2VySldURnJvbUhhc2goaGFzaCkge1xuICBjb25zdCBtYXRjaGVzID0gaGFzaC5tYXRjaChERVZfQlJPV1NFUl9KV1RfTUFSS0VSX1JFR0VYUCk7XG4gIHJldHVybiBtYXRjaGVzID8gbWF0Y2hlc1sxXSA6IFwiXCI7XG59XG5mdW5jdGlvbiBleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkxIYXNoKHVybCkge1xuICBjb25zdCBqd3QgPSBleHRyYWN0RGV2QnJvd3NlckpXVEZyb21IYXNoKHVybC5oYXNoKTtcbiAgdXJsLmhhc2ggPSB1cmwuaGFzaC5yZXBsYWNlKERFVl9CUk9XU0VSX0pXVF9NQVJLRVJfUkVHRVhQLCBcIlwiKTtcbiAgaWYgKHVybC5ocmVmLmVuZHNXaXRoKFwiI1wiKSkge1xuICAgIHVybC5oYXNoID0gXCJcIjtcbiAgfVxuICByZXR1cm4gand0O1xufVxuZnVuY3Rpb24gZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMU2VhcmNoUGFyYW1zKHVybCkge1xuICBjb25zdCBqd3RGcm9tRGV2U2Vzc2lvbiA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KERFVl9CUk9XU0VSX1NTT19KV1RfUEFSQU1FVEVSKTtcbiAgdXJsLnNlYXJjaFBhcmFtcy5kZWxldGUoREVWX0JST1dTRVJfU1NPX0pXVF9QQVJBTUVURVIpO1xuICBjb25zdCBqd3RGcm9tQ2xlcmtEYkp3dCA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KERFVl9CUk9XU0VSX0pXVF9NQVJLRVIpO1xuICB1cmwuc2VhcmNoUGFyYW1zLmRlbGV0ZShERVZfQlJPV1NFUl9KV1RfTUFSS0VSKTtcbiAgcmV0dXJuIGp3dEZyb21EZXZTZXNzaW9uIHx8IGp3dEZyb21DbGVya0RiSnd0IHx8IFwiXCI7XG59XG5cbmV4cG9ydCB7XG4gIERFVl9CUk9XU0VSX1NTT19KV1RfUEFSQU1FVEVSLFxuICBERVZfQlJPV1NFUl9KV1RfTUFSS0VSLFxuICBzZXREZXZCcm93c2VySldUSW5VUkwsXG4gIGV4dHJhY3REZXZCcm93c2VySldURnJvbVVSTEhhc2gsXG4gIGV4dHJhY3REZXZCcm93c2VySldURnJvbVVSTFNlYXJjaFBhcmFtc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTNTN1pMQ1hELm1qcy5tYXAiXSwibmFtZXMiOlsiREVWX0JST1dTRVJfU1NPX0pXVF9QQVJBTUVURVIiLCJERVZfQlJPV1NFUl9KV1RfTUFSS0VSIiwiREVWX0JST1dTRVJfSldUX01BUktFUl9SRUdFWFAiLCJzZXREZXZCcm93c2VySldUSW5VUkwiLCJ1cmwiLCJqd3QiLCJhc1F1ZXJ5UGFyYW0iLCJyZXN1bHRVUkwiLCJVUkwiLCJqd3RGcm9tSGFzaCIsImV4dHJhY3REZXZCcm93c2VySldURnJvbVVSTEhhc2giLCJqd3RGcm9tU2VhcmNoIiwiZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMU2VhcmNoUGFyYW1zIiwiand0VG9TZXQiLCJzZWFyY2hQYXJhbXMiLCJhcHBlbmQiLCJoYXNoIiwiZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tSGFzaCIsIm1hdGNoZXMiLCJtYXRjaCIsInJlcGxhY2UiLCJocmVmIiwiZW5kc1dpdGgiLCJqd3RGcm9tRGV2U2Vzc2lvbiIsImdldCIsImRlbGV0ZSIsImp3dEZyb21DbGVya0RiSnd0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-3S7ZLCXD.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callWithRetry: () => (/* binding */ callWithRetry)\n/* harmony export */ });\n// src/callWithRetry.ts\nfunction wait(ms) {\n    return new Promise((res)=>setTimeout(res, ms));\n}\nvar MAX_NUMBER_OF_RETRIES = 5;\nasync function callWithRetry(fn, attempt = 1, maxAttempts = MAX_NUMBER_OF_RETRIES) {\n    try {\n        return await fn();\n    } catch (e) {\n        if (attempt >= maxAttempts) {\n            throw e;\n        }\n        await wait(2 ** attempt * 100);\n        return callWithRetry(fn, attempt + 1, maxAttempts);\n    }\n}\n //# sourceMappingURL=chunk-4PW5MDZA.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNFBXNU1EWkEubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSx1QkFBdUI7QUFDdkIsU0FBU0EsS0FBS0MsRUFBRTtJQUNkLE9BQU8sSUFBSUMsUUFBUSxDQUFDQyxNQUFRQyxXQUFXRCxLQUFLRjtBQUM5QztBQUNBLElBQUlJLHdCQUF3QjtBQUM1QixlQUFlQyxjQUFjQyxFQUFFLEVBQUVDLFVBQVUsQ0FBQyxFQUFFQyxjQUFjSixxQkFBcUI7SUFDL0UsSUFBSTtRQUNGLE9BQU8sTUFBTUU7SUFDZixFQUFFLE9BQU9HLEdBQUc7UUFDVixJQUFJRixXQUFXQyxhQUFhO1lBQzFCLE1BQU1DO1FBQ1I7UUFDQSxNQUFNVixLQUFLLEtBQUtRLFVBQVU7UUFDMUIsT0FBT0YsY0FBY0MsSUFBSUMsVUFBVSxHQUFHQztJQUN4QztBQUNGO0FBSUUsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNFBXNU1EWkEubWpzP2UxODgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NhbGxXaXRoUmV0cnkudHNcbmZ1bmN0aW9uIHdhaXQobXMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXMpID0+IHNldFRpbWVvdXQocmVzLCBtcykpO1xufVxudmFyIE1BWF9OVU1CRVJfT0ZfUkVUUklFUyA9IDU7XG5hc3luYyBmdW5jdGlvbiBjYWxsV2l0aFJldHJ5KGZuLCBhdHRlbXB0ID0gMSwgbWF4QXR0ZW1wdHMgPSBNQVhfTlVNQkVSX09GX1JFVFJJRVMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gYXdhaXQgZm4oKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChhdHRlbXB0ID49IG1heEF0dGVtcHRzKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICBhd2FpdCB3YWl0KDIgKiogYXR0ZW1wdCAqIDEwMCk7XG4gICAgcmV0dXJuIGNhbGxXaXRoUmV0cnkoZm4sIGF0dGVtcHQgKyAxLCBtYXhBdHRlbXB0cyk7XG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgY2FsbFdpdGhSZXRyeVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTRQVzVNRFpBLm1qcy5tYXAiXSwibmFtZXMiOlsid2FpdCIsIm1zIiwiUHJvbWlzZSIsInJlcyIsInNldFRpbWVvdXQiLCJNQVhfTlVNQkVSX09GX1JFVFJJRVMiLCJjYWxsV2l0aFJldHJ5IiwiZm4iLCJhdHRlbXB0IiwibWF4QXR0ZW1wdHMiLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-4PW5MDZA.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-5DRMPUGE.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-5DRMPUGE.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: () => (/* binding */ ClerkAPIResponseError),\n/* harmony export */   ClerkRuntimeError: () => (/* binding */ ClerkRuntimeError),\n/* harmony export */   EmailLinkError: () => (/* binding */ EmailLinkError),\n/* harmony export */   EmailLinkErrorCode: () => (/* binding */ EmailLinkErrorCode),\n/* harmony export */   MagicLinkError: () => (/* binding */ MagicLinkError),\n/* harmony export */   MagicLinkErrorCode: () => (/* binding */ MagicLinkErrorCode),\n/* harmony export */   buildErrorThrower: () => (/* binding */ buildErrorThrower),\n/* harmony export */   is4xxError: () => (/* binding */ is4xxError),\n/* harmony export */   isClerkAPIResponseError: () => (/* binding */ isClerkAPIResponseError),\n/* harmony export */   isClerkRuntimeError: () => (/* binding */ isClerkRuntimeError),\n/* harmony export */   isEmailLinkError: () => (/* binding */ isEmailLinkError),\n/* harmony export */   isKnownError: () => (/* binding */ isKnownError),\n/* harmony export */   isMagicLinkError: () => (/* binding */ isMagicLinkError),\n/* harmony export */   isMetamaskError: () => (/* binding */ isMetamaskError),\n/* harmony export */   isNetworkError: () => (/* binding */ isNetworkError),\n/* harmony export */   isUnauthorizedError: () => (/* binding */ isUnauthorizedError),\n/* harmony export */   isUserLockedError: () => (/* binding */ isUserLockedError),\n/* harmony export */   parseError: () => (/* binding */ parseError),\n/* harmony export */   parseErrors: () => (/* binding */ parseErrors)\n/* harmony export */ });\n/* harmony import */ var _chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-KJVJ4CFF.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-KJVJ4CFF.mjs\");\n\n// src/error.ts\nfunction isUnauthorizedError(e) {\n    const status = e?.status;\n    const code = e?.errors?.[0]?.code;\n    return code === \"authentication_invalid\" && status === 401;\n}\nfunction is4xxError(e) {\n    const status = e?.status;\n    return !!status && status >= 400 && status < 500;\n}\nfunction isNetworkError(e) {\n    const message = (`${e.message}${e.name}` || \"\").toLowerCase().replace(/\\s+/g, \"\");\n    return message.includes(\"networkerror\");\n}\nfunction isKnownError(error) {\n    return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\nfunction isClerkAPIResponseError(err) {\n    return \"clerkError\" in err;\n}\nfunction isClerkRuntimeError(err) {\n    return \"clerkRuntimeError\" in err;\n}\nfunction isMetamaskError(err) {\n    return \"code\" in err && [\n        4001,\n        32602,\n        32603\n    ].includes(err.code) && \"message\" in err;\n}\nfunction isUserLockedError(err) {\n    return isClerkAPIResponseError(err) && err.errors?.[0]?.code === \"user_locked\";\n}\nfunction parseErrors(data = []) {\n    return data.length > 0 ? data.map(parseError) : [];\n}\nfunction parseError(error) {\n    return {\n        code: error.code,\n        message: error.message,\n        longMessage: error.long_message,\n        meta: {\n            paramName: error?.meta?.param_name,\n            sessionId: error?.meta?.session_id,\n            emailAddresses: error?.meta?.email_addresses,\n            identifiers: error?.meta?.identifiers,\n            zxcvbn: error?.meta?.zxcvbn\n        }\n    };\n}\nvar ClerkAPIResponseError = class _ClerkAPIResponseError extends Error {\n    constructor(message, { data, status, clerkTraceId }){\n        super(message);\n        this.toString = ()=>{\n            let message = `[${this.name}]\nMessage:${this.message}\nStatus:${this.status}\nSerialized errors: ${this.errors.map((e)=>JSON.stringify(e))}`;\n            if (this.clerkTraceId) {\n                message += `\nClerk Trace ID: ${this.clerkTraceId}`;\n            }\n            return message;\n        };\n        Object.setPrototypeOf(this, _ClerkAPIResponseError.prototype);\n        this.status = status;\n        this.message = message;\n        this.clerkTraceId = clerkTraceId;\n        this.clerkError = true;\n        this.errors = parseErrors(data);\n    }\n};\nvar ClerkRuntimeError = class _ClerkRuntimeError extends Error {\n    constructor(message, { code }){\n        super(message);\n        /**\n     * Returns a string representation of the error.\n     *\n     * @returns {string} A formatted string with the error name and message.\n     * @memberof ClerkRuntimeError\n     */ this.toString = ()=>{\n            return `[${this.name}]\nMessage:${this.message}`;\n        };\n        Object.setPrototypeOf(this, _ClerkRuntimeError.prototype);\n        this.code = code;\n        this.message = message;\n        this.clerkRuntimeError = true;\n    }\n};\nvar MagicLinkError = class _MagicLinkError extends Error {\n    constructor(code){\n        super(code);\n        this.code = code;\n        Object.setPrototypeOf(this, _MagicLinkError.prototype);\n        (0,_chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"MagicLinkError\", \"Use `EmailLinkError` instead.\");\n    }\n};\nvar EmailLinkError = class _EmailLinkError extends Error {\n    constructor(code){\n        super(code);\n        this.code = code;\n        Object.setPrototypeOf(this, _EmailLinkError.prototype);\n    }\n};\nfunction isMagicLinkError(err) {\n    (0,_chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"isMagicLinkError\", \"Use `isEmailLinkError` instead.\");\n    return err instanceof MagicLinkError;\n}\nfunction isEmailLinkError(err) {\n    return err instanceof EmailLinkError;\n}\nvar _MagicLinkErrorCode = {\n    Expired: \"expired\",\n    Failed: \"failed\"\n};\nvar MagicLinkErrorCode = new Proxy(_MagicLinkErrorCode, {\n    get (target, prop, receiver) {\n        (0,_chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"MagicLinkErrorCode\", \"Use `EmailLinkErrorCode` instead.\");\n        return Reflect.get(target, prop, receiver);\n    }\n});\nvar EmailLinkErrorCode = {\n    Expired: \"expired\",\n    Failed: \"failed\"\n};\nvar DefaultMessages = Object.freeze({\n    InvalidFrontendApiErrorMessage: `The frontendApi passed to Clerk is invalid. You can get your Frontend API key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n    InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n    InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n    MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`\n});\nfunction buildErrorThrower({ packageName, customMessages }) {\n    let pkg = packageName;\n    const messages = {\n        ...DefaultMessages,\n        ...customMessages\n    };\n    function buildMessage(rawMessage, replacements) {\n        if (!replacements) {\n            return `${pkg}: ${rawMessage}`;\n        }\n        let msg = rawMessage;\n        const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n        for (const match of matches){\n            const replacement = (replacements[match[1]] || \"\").toString();\n            msg = msg.replace(`{{${match[1]}}}`, replacement);\n        }\n        return `${pkg}: ${msg}`;\n    }\n    return {\n        setPackageName ({ packageName: packageName2 }) {\n            if (typeof packageName2 === \"string\") {\n                pkg = packageName2;\n            }\n            return this;\n        },\n        setMessages ({ customMessages: customMessages2 }) {\n            Object.assign(messages, customMessages2 || {});\n            return this;\n        },\n        throwInvalidPublishableKeyError (params) {\n            throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n        },\n        throwInvalidFrontendApiError (params) {\n            throw new Error(buildMessage(messages.InvalidFrontendApiErrorMessage, params));\n        },\n        throwInvalidProxyUrl (params) {\n            throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n        },\n        throwMissingPublishableKeyError () {\n            throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n        }\n    };\n}\n //# sourceMappingURL=chunk-5DRMPUGE.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNURSTVBVR0UubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRThCO0FBRTlCLGVBQWU7QUFDZixTQUFTQyxvQkFBb0JDLENBQUM7SUFDNUIsTUFBTUMsU0FBU0QsR0FBR0M7SUFDbEIsTUFBTUMsT0FBT0YsR0FBR0csUUFBUSxDQUFDLEVBQUUsRUFBRUQ7SUFDN0IsT0FBT0EsU0FBUyw0QkFBNEJELFdBQVc7QUFDekQ7QUFDQSxTQUFTRyxXQUFXSixDQUFDO0lBQ25CLE1BQU1DLFNBQVNELEdBQUdDO0lBQ2xCLE9BQU8sQ0FBQyxDQUFDQSxVQUFVQSxVQUFVLE9BQU9BLFNBQVM7QUFDL0M7QUFDQSxTQUFTSSxlQUFlTCxDQUFDO0lBQ3ZCLE1BQU1NLFVBQVUsQ0FBQyxDQUFDLEVBQUVOLEVBQUVNLE9BQU8sQ0FBQyxFQUFFTixFQUFFTyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUMsRUFBR0MsV0FBVyxHQUFHQyxPQUFPLENBQUMsUUFBUTtJQUM5RSxPQUFPSCxRQUFRSSxRQUFRLENBQUM7QUFDMUI7QUFDQSxTQUFTQyxhQUFhQyxLQUFLO0lBQ3pCLE9BQU9DLHdCQUF3QkQsVUFBVUUsZ0JBQWdCRixVQUFVRyxvQkFBb0JIO0FBQ3pGO0FBQ0EsU0FBU0Msd0JBQXdCRyxHQUFHO0lBQ2xDLE9BQU8sZ0JBQWdCQTtBQUN6QjtBQUNBLFNBQVNELG9CQUFvQkMsR0FBRztJQUM5QixPQUFPLHVCQUF1QkE7QUFDaEM7QUFDQSxTQUFTRixnQkFBZ0JFLEdBQUc7SUFDMUIsT0FBTyxVQUFVQSxPQUFPO1FBQUM7UUFBTTtRQUFPO0tBQU0sQ0FBQ04sUUFBUSxDQUFDTSxJQUFJZCxJQUFJLEtBQUssYUFBYWM7QUFDbEY7QUFDQSxTQUFTQyxrQkFBa0JELEdBQUc7SUFDNUIsT0FBT0gsd0JBQXdCRyxRQUFRQSxJQUFJYixNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUVELFNBQVM7QUFDbkU7QUFDQSxTQUFTZ0IsWUFBWUMsT0FBTyxFQUFFO0lBQzVCLE9BQU9BLEtBQUtDLE1BQU0sR0FBRyxJQUFJRCxLQUFLRSxHQUFHLENBQUNDLGNBQWMsRUFBRTtBQUNwRDtBQUNBLFNBQVNBLFdBQVdWLEtBQUs7SUFDdkIsT0FBTztRQUNMVixNQUFNVSxNQUFNVixJQUFJO1FBQ2hCSSxTQUFTTSxNQUFNTixPQUFPO1FBQ3RCaUIsYUFBYVgsTUFBTVksWUFBWTtRQUMvQkMsTUFBTTtZQUNKQyxXQUFXZCxPQUFPYSxNQUFNRTtZQUN4QkMsV0FBV2hCLE9BQU9hLE1BQU1JO1lBQ3hCQyxnQkFBZ0JsQixPQUFPYSxNQUFNTTtZQUM3QkMsYUFBYXBCLE9BQU9hLE1BQU1PO1lBQzFCQyxRQUFRckIsT0FBT2EsTUFBTVE7UUFDdkI7SUFDRjtBQUNGO0FBQ0EsSUFBSUMsd0JBQXdCLE1BQU1DLCtCQUErQkM7SUFDL0RDLFlBQVkvQixPQUFPLEVBQUUsRUFBRWEsSUFBSSxFQUFFbEIsTUFBTSxFQUFFcUMsWUFBWSxFQUFFLENBQUU7UUFDbkQsS0FBSyxDQUFDaEM7UUFDTixJQUFJLENBQUNpQyxRQUFRLEdBQUc7WUFDZCxJQUFJakMsVUFBVSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNDLElBQUksQ0FBQztRQUMxQixFQUFFLElBQUksQ0FBQ0QsT0FBTyxDQUFDO09BQ2hCLEVBQUUsSUFBSSxDQUFDTCxNQUFNLENBQUM7bUJBQ0YsRUFBRSxJQUFJLENBQUNFLE1BQU0sQ0FBQ2tCLEdBQUcsQ0FDNUIsQ0FBQ3JCLElBQU13QyxLQUFLQyxTQUFTLENBQUN6QyxJQUN0QixDQUFDO1lBQ0gsSUFBSSxJQUFJLENBQUNzQyxZQUFZLEVBQUU7Z0JBQ3JCaEMsV0FBVyxDQUFDO2dCQUNKLEVBQUUsSUFBSSxDQUFDZ0MsWUFBWSxDQUFDLENBQUM7WUFDL0I7WUFDQSxPQUFPaEM7UUFDVDtRQUNBb0MsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRVIsdUJBQXVCUyxTQUFTO1FBQzVELElBQUksQ0FBQzNDLE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNLLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNnQyxZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQ08sVUFBVSxHQUFHO1FBQ2xCLElBQUksQ0FBQzFDLE1BQU0sR0FBR2UsWUFBWUM7SUFDNUI7QUFDRjtBQUNBLElBQUkyQixvQkFBb0IsTUFBTUMsMkJBQTJCWDtJQUN2REMsWUFBWS9CLE9BQU8sRUFBRSxFQUFFSixJQUFJLEVBQUUsQ0FBRTtRQUM3QixLQUFLLENBQUNJO1FBQ047Ozs7O0tBS0MsR0FDRCxJQUFJLENBQUNpQyxRQUFRLEdBQUc7WUFDZCxPQUFPLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQ2hDLElBQUksQ0FBQztRQUNuQixFQUFFLElBQUksQ0FBQ0QsT0FBTyxDQUFDLENBQUM7UUFDcEI7UUFDQW9DLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUVJLG1CQUFtQkgsU0FBUztRQUN4RCxJQUFJLENBQUMxQyxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDSSxPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDMEMsaUJBQWlCLEdBQUc7SUFDM0I7QUFDRjtBQUNBLElBQUlDLGlCQUFpQixNQUFNQyx3QkFBd0JkO0lBQ2pEQyxZQUFZbkMsSUFBSSxDQUFFO1FBQ2hCLEtBQUssQ0FBQ0E7UUFDTixJQUFJLENBQUNBLElBQUksR0FBR0E7UUFDWndDLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUVPLGdCQUFnQk4sU0FBUztRQUNyRDlDLCtEQUFVQSxDQUFDLGtCQUFrQjtJQUMvQjtBQUNGO0FBQ0EsSUFBSXFELGlCQUFpQixNQUFNQyx3QkFBd0JoQjtJQUNqREMsWUFBWW5DLElBQUksQ0FBRTtRQUNoQixLQUFLLENBQUNBO1FBQ04sSUFBSSxDQUFDQSxJQUFJLEdBQUdBO1FBQ1p3QyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFUyxnQkFBZ0JSLFNBQVM7SUFDdkQ7QUFDRjtBQUNBLFNBQVNTLGlCQUFpQnJDLEdBQUc7SUFDM0JsQiwrREFBVUEsQ0FBQyxvQkFBb0I7SUFDL0IsT0FBT2tCLGVBQWVpQztBQUN4QjtBQUNBLFNBQVNLLGlCQUFpQnRDLEdBQUc7SUFDM0IsT0FBT0EsZUFBZW1DO0FBQ3hCO0FBQ0EsSUFBSUksc0JBQXNCO0lBQ3hCQyxTQUFTO0lBQ1RDLFFBQVE7QUFDVjtBQUNBLElBQUlDLHFCQUFxQixJQUFJQyxNQUFNSixxQkFBcUI7SUFDdERLLEtBQUlDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxRQUFRO1FBQ3hCakUsK0RBQVVBLENBQUMsc0JBQXNCO1FBQ2pDLE9BQU9rRSxRQUFRSixHQUFHLENBQUNDLFFBQVFDLE1BQU1DO0lBQ25DO0FBQ0Y7QUFDQSxJQUFJRSxxQkFBcUI7SUFDdkJULFNBQVM7SUFDVEMsUUFBUTtBQUNWO0FBQ0EsSUFBSVMsa0JBQWtCeEIsT0FBT3lCLE1BQU0sQ0FBQztJQUNsQ0MsZ0NBQWdDLENBQUMscUpBQXFKLENBQUM7SUFDdkxDLDZCQUE2QixDQUFDLGdKQUFnSixDQUFDO0lBQy9LQyxtQ0FBbUMsQ0FBQyx1SkFBdUosQ0FBQztJQUM1TEMsbUNBQW1DLENBQUMsc0dBQXNHLENBQUM7QUFDN0k7QUFDQSxTQUFTQyxrQkFBa0IsRUFBRUMsV0FBVyxFQUFFQyxjQUFjLEVBQUU7SUFDeEQsSUFBSUMsTUFBTUY7SUFDVixNQUFNRyxXQUFXO1FBQ2YsR0FBR1YsZUFBZTtRQUNsQixHQUFHUSxjQUFjO0lBQ25CO0lBQ0EsU0FBU0csYUFBYUMsVUFBVSxFQUFFQyxZQUFZO1FBQzVDLElBQUksQ0FBQ0EsY0FBYztZQUNqQixPQUFPLENBQUMsRUFBRUosSUFBSSxFQUFFLEVBQUVHLFdBQVcsQ0FBQztRQUNoQztRQUNBLElBQUlFLE1BQU1GO1FBQ1YsTUFBTUcsVUFBVUgsV0FBV0ksUUFBUSxDQUFDO1FBQ3BDLEtBQUssTUFBTUMsU0FBU0YsUUFBUztZQUMzQixNQUFNRyxjQUFjLENBQUNMLFlBQVksQ0FBQ0ksS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUMsRUFBRzVDLFFBQVE7WUFDM0R5QyxNQUFNQSxJQUFJdkUsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFMEUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRUM7UUFDdkM7UUFDQSxPQUFPLENBQUMsRUFBRVQsSUFBSSxFQUFFLEVBQUVLLElBQUksQ0FBQztJQUN6QjtJQUNBLE9BQU87UUFDTEssZ0JBQWUsRUFBRVosYUFBYWEsWUFBWSxFQUFFO1lBQzFDLElBQUksT0FBT0EsaUJBQWlCLFVBQVU7Z0JBQ3BDWCxNQUFNVztZQUNSO1lBQ0EsT0FBTyxJQUFJO1FBQ2I7UUFDQUMsYUFBWSxFQUFFYixnQkFBZ0JjLGVBQWUsRUFBRTtZQUM3QzlDLE9BQU8rQyxNQUFNLENBQUNiLFVBQVVZLG1CQUFtQixDQUFDO1lBQzVDLE9BQU8sSUFBSTtRQUNiO1FBQ0FFLGlDQUFnQ0MsTUFBTTtZQUNwQyxNQUFNLElBQUl2RCxNQUFNeUMsYUFBYUQsU0FBU04saUNBQWlDLEVBQUVxQjtRQUMzRTtRQUNBQyw4QkFBNkJELE1BQU07WUFDakMsTUFBTSxJQUFJdkQsTUFBTXlDLGFBQWFELFNBQVNSLDhCQUE4QixFQUFFdUI7UUFDeEU7UUFDQUUsc0JBQXFCRixNQUFNO1lBQ3pCLE1BQU0sSUFBSXZELE1BQU15QyxhQUFhRCxTQUFTUCwyQkFBMkIsRUFBRXNCO1FBQ3JFO1FBQ0FHO1lBQ0UsTUFBTSxJQUFJMUQsTUFBTXlDLGFBQWFELFNBQVNMLGlDQUFpQztRQUN6RTtJQUNGO0FBQ0Y7QUFzQkUsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNURSTVBVR0UubWpzP2EwMDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgZGVwcmVjYXRlZFxufSBmcm9tIFwiLi9jaHVuay1LSlZKNENGRi5tanNcIjtcblxuLy8gc3JjL2Vycm9yLnRzXG5mdW5jdGlvbiBpc1VuYXV0aG9yaXplZEVycm9yKGUpIHtcbiAgY29uc3Qgc3RhdHVzID0gZT8uc3RhdHVzO1xuICBjb25zdCBjb2RlID0gZT8uZXJyb3JzPy5bMF0/LmNvZGU7XG4gIHJldHVybiBjb2RlID09PSBcImF1dGhlbnRpY2F0aW9uX2ludmFsaWRcIiAmJiBzdGF0dXMgPT09IDQwMTtcbn1cbmZ1bmN0aW9uIGlzNHh4RXJyb3IoZSkge1xuICBjb25zdCBzdGF0dXMgPSBlPy5zdGF0dXM7XG4gIHJldHVybiAhIXN0YXR1cyAmJiBzdGF0dXMgPj0gNDAwICYmIHN0YXR1cyA8IDUwMDtcbn1cbmZ1bmN0aW9uIGlzTmV0d29ya0Vycm9yKGUpIHtcbiAgY29uc3QgbWVzc2FnZSA9IChgJHtlLm1lc3NhZ2V9JHtlLm5hbWV9YCB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xccysvZywgXCJcIik7XG4gIHJldHVybiBtZXNzYWdlLmluY2x1ZGVzKFwibmV0d29ya2Vycm9yXCIpO1xufVxuZnVuY3Rpb24gaXNLbm93bkVycm9yKGVycm9yKSB7XG4gIHJldHVybiBpc0NsZXJrQVBJUmVzcG9uc2VFcnJvcihlcnJvcikgfHwgaXNNZXRhbWFza0Vycm9yKGVycm9yKSB8fCBpc0NsZXJrUnVudGltZUVycm9yKGVycm9yKTtcbn1cbmZ1bmN0aW9uIGlzQ2xlcmtBUElSZXNwb25zZUVycm9yKGVycikge1xuICByZXR1cm4gXCJjbGVya0Vycm9yXCIgaW4gZXJyO1xufVxuZnVuY3Rpb24gaXNDbGVya1J1bnRpbWVFcnJvcihlcnIpIHtcbiAgcmV0dXJuIFwiY2xlcmtSdW50aW1lRXJyb3JcIiBpbiBlcnI7XG59XG5mdW5jdGlvbiBpc01ldGFtYXNrRXJyb3IoZXJyKSB7XG4gIHJldHVybiBcImNvZGVcIiBpbiBlcnIgJiYgWzQwMDEsIDMyNjAyLCAzMjYwM10uaW5jbHVkZXMoZXJyLmNvZGUpICYmIFwibWVzc2FnZVwiIGluIGVycjtcbn1cbmZ1bmN0aW9uIGlzVXNlckxvY2tlZEVycm9yKGVycikge1xuICByZXR1cm4gaXNDbGVya0FQSVJlc3BvbnNlRXJyb3IoZXJyKSAmJiBlcnIuZXJyb3JzPy5bMF0/LmNvZGUgPT09IFwidXNlcl9sb2NrZWRcIjtcbn1cbmZ1bmN0aW9uIHBhcnNlRXJyb3JzKGRhdGEgPSBbXSkge1xuICByZXR1cm4gZGF0YS5sZW5ndGggPiAwID8gZGF0YS5tYXAocGFyc2VFcnJvcikgOiBbXTtcbn1cbmZ1bmN0aW9uIHBhcnNlRXJyb3IoZXJyb3IpIHtcbiAgcmV0dXJuIHtcbiAgICBjb2RlOiBlcnJvci5jb2RlLFxuICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgbG9uZ01lc3NhZ2U6IGVycm9yLmxvbmdfbWVzc2FnZSxcbiAgICBtZXRhOiB7XG4gICAgICBwYXJhbU5hbWU6IGVycm9yPy5tZXRhPy5wYXJhbV9uYW1lLFxuICAgICAgc2Vzc2lvbklkOiBlcnJvcj8ubWV0YT8uc2Vzc2lvbl9pZCxcbiAgICAgIGVtYWlsQWRkcmVzc2VzOiBlcnJvcj8ubWV0YT8uZW1haWxfYWRkcmVzc2VzLFxuICAgICAgaWRlbnRpZmllcnM6IGVycm9yPy5tZXRhPy5pZGVudGlmaWVycyxcbiAgICAgIHp4Y3ZibjogZXJyb3I/Lm1ldGE/Lnp4Y3ZiblxuICAgIH1cbiAgfTtcbn1cbnZhciBDbGVya0FQSVJlc3BvbnNlRXJyb3IgPSBjbGFzcyBfQ2xlcmtBUElSZXNwb25zZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB7IGRhdGEsIHN0YXR1cywgY2xlcmtUcmFjZUlkIH0pIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLnRvU3RyaW5nID0gKCkgPT4ge1xuICAgICAgbGV0IG1lc3NhZ2UgPSBgWyR7dGhpcy5uYW1lfV1cbk1lc3NhZ2U6JHt0aGlzLm1lc3NhZ2V9XG5TdGF0dXM6JHt0aGlzLnN0YXR1c31cblNlcmlhbGl6ZWQgZXJyb3JzOiAke3RoaXMuZXJyb3JzLm1hcChcbiAgICAgICAgKGUpID0+IEpTT04uc3RyaW5naWZ5KGUpXG4gICAgICApfWA7XG4gICAgICBpZiAodGhpcy5jbGVya1RyYWNlSWQpIHtcbiAgICAgICAgbWVzc2FnZSArPSBgXG5DbGVyayBUcmFjZSBJRDogJHt0aGlzLmNsZXJrVHJhY2VJZH1gO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgX0NsZXJrQVBJUmVzcG9uc2VFcnJvci5wcm90b3R5cGUpO1xuICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5jbGVya1RyYWNlSWQgPSBjbGVya1RyYWNlSWQ7XG4gICAgdGhpcy5jbGVya0Vycm9yID0gdHJ1ZTtcbiAgICB0aGlzLmVycm9ycyA9IHBhcnNlRXJyb3JzKGRhdGEpO1xuICB9XG59O1xudmFyIENsZXJrUnVudGltZUVycm9yID0gY2xhc3MgX0NsZXJrUnVudGltZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB7IGNvZGUgfSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGVycm9yLlxuICAgICAqXG4gICAgICogQHJldHVybnMge3N0cmluZ30gQSBmb3JtYXR0ZWQgc3RyaW5nIHdpdGggdGhlIGVycm9yIG5hbWUgYW5kIG1lc3NhZ2UuXG4gICAgICogQG1lbWJlcm9mIENsZXJrUnVudGltZUVycm9yXG4gICAgICovXG4gICAgdGhpcy50b1N0cmluZyA9ICgpID0+IHtcbiAgICAgIHJldHVybiBgWyR7dGhpcy5uYW1lfV1cbk1lc3NhZ2U6JHt0aGlzLm1lc3NhZ2V9YDtcbiAgICB9O1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBfQ2xlcmtSdW50aW1lRXJyb3IucHJvdG90eXBlKTtcbiAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5jbGVya1J1bnRpbWVFcnJvciA9IHRydWU7XG4gIH1cbn07XG52YXIgTWFnaWNMaW5rRXJyb3IgPSBjbGFzcyBfTWFnaWNMaW5rRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKGNvZGUpIHtcbiAgICBzdXBlcihjb2RlKTtcbiAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBfTWFnaWNMaW5rRXJyb3IucHJvdG90eXBlKTtcbiAgICBkZXByZWNhdGVkKFwiTWFnaWNMaW5rRXJyb3JcIiwgXCJVc2UgYEVtYWlsTGlua0Vycm9yYCBpbnN0ZWFkLlwiKTtcbiAgfVxufTtcbnZhciBFbWFpbExpbmtFcnJvciA9IGNsYXNzIF9FbWFpbExpbmtFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IoY29kZSkge1xuICAgIHN1cGVyKGNvZGUpO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIF9FbWFpbExpbmtFcnJvci5wcm90b3R5cGUpO1xuICB9XG59O1xuZnVuY3Rpb24gaXNNYWdpY0xpbmtFcnJvcihlcnIpIHtcbiAgZGVwcmVjYXRlZChcImlzTWFnaWNMaW5rRXJyb3JcIiwgXCJVc2UgYGlzRW1haWxMaW5rRXJyb3JgIGluc3RlYWQuXCIpO1xuICByZXR1cm4gZXJyIGluc3RhbmNlb2YgTWFnaWNMaW5rRXJyb3I7XG59XG5mdW5jdGlvbiBpc0VtYWlsTGlua0Vycm9yKGVycikge1xuICByZXR1cm4gZXJyIGluc3RhbmNlb2YgRW1haWxMaW5rRXJyb3I7XG59XG52YXIgX01hZ2ljTGlua0Vycm9yQ29kZSA9IHtcbiAgRXhwaXJlZDogXCJleHBpcmVkXCIsXG4gIEZhaWxlZDogXCJmYWlsZWRcIlxufTtcbnZhciBNYWdpY0xpbmtFcnJvckNvZGUgPSBuZXcgUHJveHkoX01hZ2ljTGlua0Vycm9yQ29kZSwge1xuICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgIGRlcHJlY2F0ZWQoXCJNYWdpY0xpbmtFcnJvckNvZGVcIiwgXCJVc2UgYEVtYWlsTGlua0Vycm9yQ29kZWAgaW5zdGVhZC5cIik7XG4gICAgcmV0dXJuIFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICB9XG59KTtcbnZhciBFbWFpbExpbmtFcnJvckNvZGUgPSB7XG4gIEV4cGlyZWQ6IFwiZXhwaXJlZFwiLFxuICBGYWlsZWQ6IFwiZmFpbGVkXCJcbn07XG52YXIgRGVmYXVsdE1lc3NhZ2VzID0gT2JqZWN0LmZyZWV6ZSh7XG4gIEludmFsaWRGcm9udGVuZEFwaUVycm9yTWVzc2FnZTogYFRoZSBmcm9udGVuZEFwaSBwYXNzZWQgdG8gQ2xlcmsgaXMgaW52YWxpZC4gWW91IGNhbiBnZXQgeW91ciBGcm9udGVuZCBBUEkga2V5IGF0IGh0dHBzOi8vZGFzaGJvYXJkLmNsZXJrLmNvbS9sYXN0LWFjdGl2ZT9wYXRoPWFwaS1rZXlzLiAoa2V5PXt7a2V5fX0pYCxcbiAgSW52YWxpZFByb3h5VXJsRXJyb3JNZXNzYWdlOiBgVGhlIHByb3h5VXJsIHBhc3NlZCB0byBDbGVyayBpcyBpbnZhbGlkLiBUaGUgZXhwZWN0ZWQgdmFsdWUgZm9yIHByb3h5VXJsIGlzIGFuIGFic29sdXRlIFVSTCBvciBhIHJlbGF0aXZlIHBhdGggd2l0aCBhIGxlYWRpbmcgJy8nLiAoa2V5PXt7dXJsfX0pYCxcbiAgSW52YWxpZFB1Ymxpc2hhYmxlS2V5RXJyb3JNZXNzYWdlOiBgVGhlIHB1Ymxpc2hhYmxlS2V5IHBhc3NlZCB0byBDbGVyayBpcyBpbnZhbGlkLiBZb3UgY2FuIGdldCB5b3VyIFB1Ymxpc2hhYmxlIGtleSBhdCBodHRwczovL2Rhc2hib2FyZC5jbGVyay5jb20vbGFzdC1hY3RpdmU/cGF0aD1hcGkta2V5cy4gKGtleT17e2tleX19KWAsXG4gIE1pc3NpbmdQdWJsaXNoYWJsZUtleUVycm9yTWVzc2FnZTogYE1pc3NpbmcgcHVibGlzaGFibGVLZXkuIFlvdSBjYW4gZ2V0IHlvdXIga2V5IGF0IGh0dHBzOi8vZGFzaGJvYXJkLmNsZXJrLmNvbS9sYXN0LWFjdGl2ZT9wYXRoPWFwaS1rZXlzLmBcbn0pO1xuZnVuY3Rpb24gYnVpbGRFcnJvclRocm93ZXIoeyBwYWNrYWdlTmFtZSwgY3VzdG9tTWVzc2FnZXMgfSkge1xuICBsZXQgcGtnID0gcGFja2FnZU5hbWU7XG4gIGNvbnN0IG1lc3NhZ2VzID0ge1xuICAgIC4uLkRlZmF1bHRNZXNzYWdlcyxcbiAgICAuLi5jdXN0b21NZXNzYWdlc1xuICB9O1xuICBmdW5jdGlvbiBidWlsZE1lc3NhZ2UocmF3TWVzc2FnZSwgcmVwbGFjZW1lbnRzKSB7XG4gICAgaWYgKCFyZXBsYWNlbWVudHMpIHtcbiAgICAgIHJldHVybiBgJHtwa2d9OiAke3Jhd01lc3NhZ2V9YDtcbiAgICB9XG4gICAgbGV0IG1zZyA9IHJhd01lc3NhZ2U7XG4gICAgY29uc3QgbWF0Y2hlcyA9IHJhd01lc3NhZ2UubWF0Y2hBbGwoL3t7KFthLXpBLVowLTktX10rKX19L2cpO1xuICAgIGZvciAoY29uc3QgbWF0Y2ggb2YgbWF0Y2hlcykge1xuICAgICAgY29uc3QgcmVwbGFjZW1lbnQgPSAocmVwbGFjZW1lbnRzW21hdGNoWzFdXSB8fCBcIlwiKS50b1N0cmluZygpO1xuICAgICAgbXNnID0gbXNnLnJlcGxhY2UoYHt7JHttYXRjaFsxXX19fWAsIHJlcGxhY2VtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIGAke3BrZ306ICR7bXNnfWA7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBzZXRQYWNrYWdlTmFtZSh7IHBhY2thZ2VOYW1lOiBwYWNrYWdlTmFtZTIgfSkge1xuICAgICAgaWYgKHR5cGVvZiBwYWNrYWdlTmFtZTIgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcGtnID0gcGFja2FnZU5hbWUyO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBzZXRNZXNzYWdlcyh7IGN1c3RvbU1lc3NhZ2VzOiBjdXN0b21NZXNzYWdlczIgfSkge1xuICAgICAgT2JqZWN0LmFzc2lnbihtZXNzYWdlcywgY3VzdG9tTWVzc2FnZXMyIHx8IHt9KTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgdGhyb3dJbnZhbGlkUHVibGlzaGFibGVLZXlFcnJvcihwYXJhbXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihidWlsZE1lc3NhZ2UobWVzc2FnZXMuSW52YWxpZFB1Ymxpc2hhYmxlS2V5RXJyb3JNZXNzYWdlLCBwYXJhbXMpKTtcbiAgICB9LFxuICAgIHRocm93SW52YWxpZEZyb250ZW5kQXBpRXJyb3IocGFyYW1zKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYnVpbGRNZXNzYWdlKG1lc3NhZ2VzLkludmFsaWRGcm9udGVuZEFwaUVycm9yTWVzc2FnZSwgcGFyYW1zKSk7XG4gICAgfSxcbiAgICB0aHJvd0ludmFsaWRQcm94eVVybChwYXJhbXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihidWlsZE1lc3NhZ2UobWVzc2FnZXMuSW52YWxpZFByb3h5VXJsRXJyb3JNZXNzYWdlLCBwYXJhbXMpKTtcbiAgICB9LFxuICAgIHRocm93TWlzc2luZ1B1Ymxpc2hhYmxlS2V5RXJyb3IoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYnVpbGRNZXNzYWdlKG1lc3NhZ2VzLk1pc3NpbmdQdWJsaXNoYWJsZUtleUVycm9yTWVzc2FnZSkpO1xuICAgIH1cbiAgfTtcbn1cblxuZXhwb3J0IHtcbiAgaXNVbmF1dGhvcml6ZWRFcnJvcixcbiAgaXM0eHhFcnJvcixcbiAgaXNOZXR3b3JrRXJyb3IsXG4gIGlzS25vd25FcnJvcixcbiAgaXNDbGVya0FQSVJlc3BvbnNlRXJyb3IsXG4gIGlzQ2xlcmtSdW50aW1lRXJyb3IsXG4gIGlzTWV0YW1hc2tFcnJvcixcbiAgaXNVc2VyTG9ja2VkRXJyb3IsXG4gIHBhcnNlRXJyb3JzLFxuICBwYXJzZUVycm9yLFxuICBDbGVya0FQSVJlc3BvbnNlRXJyb3IsXG4gIENsZXJrUnVudGltZUVycm9yLFxuICBNYWdpY0xpbmtFcnJvcixcbiAgRW1haWxMaW5rRXJyb3IsXG4gIGlzTWFnaWNMaW5rRXJyb3IsXG4gIGlzRW1haWxMaW5rRXJyb3IsXG4gIE1hZ2ljTGlua0Vycm9yQ29kZSxcbiAgRW1haWxMaW5rRXJyb3JDb2RlLFxuICBidWlsZEVycm9yVGhyb3dlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTVEUk1QVUdFLm1qcy5tYXAiXSwibmFtZXMiOlsiZGVwcmVjYXRlZCIsImlzVW5hdXRob3JpemVkRXJyb3IiLCJlIiwic3RhdHVzIiwiY29kZSIsImVycm9ycyIsImlzNHh4RXJyb3IiLCJpc05ldHdvcmtFcnJvciIsIm1lc3NhZ2UiLCJuYW1lIiwidG9Mb3dlckNhc2UiLCJyZXBsYWNlIiwiaW5jbHVkZXMiLCJpc0tub3duRXJyb3IiLCJlcnJvciIsImlzQ2xlcmtBUElSZXNwb25zZUVycm9yIiwiaXNNZXRhbWFza0Vycm9yIiwiaXNDbGVya1J1bnRpbWVFcnJvciIsImVyciIsImlzVXNlckxvY2tlZEVycm9yIiwicGFyc2VFcnJvcnMiLCJkYXRhIiwibGVuZ3RoIiwibWFwIiwicGFyc2VFcnJvciIsImxvbmdNZXNzYWdlIiwibG9uZ19tZXNzYWdlIiwibWV0YSIsInBhcmFtTmFtZSIsInBhcmFtX25hbWUiLCJzZXNzaW9uSWQiLCJzZXNzaW9uX2lkIiwiZW1haWxBZGRyZXNzZXMiLCJlbWFpbF9hZGRyZXNzZXMiLCJpZGVudGlmaWVycyIsInp4Y3ZibiIsIkNsZXJrQVBJUmVzcG9uc2VFcnJvciIsIl9DbGVya0FQSVJlc3BvbnNlRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiY2xlcmtUcmFjZUlkIiwidG9TdHJpbmciLCJKU09OIiwic3RyaW5naWZ5IiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJjbGVya0Vycm9yIiwiQ2xlcmtSdW50aW1lRXJyb3IiLCJfQ2xlcmtSdW50aW1lRXJyb3IiLCJjbGVya1J1bnRpbWVFcnJvciIsIk1hZ2ljTGlua0Vycm9yIiwiX01hZ2ljTGlua0Vycm9yIiwiRW1haWxMaW5rRXJyb3IiLCJfRW1haWxMaW5rRXJyb3IiLCJpc01hZ2ljTGlua0Vycm9yIiwiaXNFbWFpbExpbmtFcnJvciIsIl9NYWdpY0xpbmtFcnJvckNvZGUiLCJFeHBpcmVkIiwiRmFpbGVkIiwiTWFnaWNMaW5rRXJyb3JDb2RlIiwiUHJveHkiLCJnZXQiLCJ0YXJnZXQiLCJwcm9wIiwicmVjZWl2ZXIiLCJSZWZsZWN0IiwiRW1haWxMaW5rRXJyb3JDb2RlIiwiRGVmYXVsdE1lc3NhZ2VzIiwiZnJlZXplIiwiSW52YWxpZEZyb250ZW5kQXBpRXJyb3JNZXNzYWdlIiwiSW52YWxpZFByb3h5VXJsRXJyb3JNZXNzYWdlIiwiSW52YWxpZFB1Ymxpc2hhYmxlS2V5RXJyb3JNZXNzYWdlIiwiTWlzc2luZ1B1Ymxpc2hhYmxlS2V5RXJyb3JNZXNzYWdlIiwiYnVpbGRFcnJvclRocm93ZXIiLCJwYWNrYWdlTmFtZSIsImN1c3RvbU1lc3NhZ2VzIiwicGtnIiwibWVzc2FnZXMiLCJidWlsZE1lc3NhZ2UiLCJyYXdNZXNzYWdlIiwicmVwbGFjZW1lbnRzIiwibXNnIiwibWF0Y2hlcyIsIm1hdGNoQWxsIiwibWF0Y2giLCJyZXBsYWNlbWVudCIsInNldFBhY2thZ2VOYW1lIiwicGFja2FnZU5hbWUyIiwic2V0TWVzc2FnZXMiLCJjdXN0b21NZXNzYWdlczIiLCJhc3NpZ24iLCJ0aHJvd0ludmFsaWRQdWJsaXNoYWJsZUtleUVycm9yIiwicGFyYW1zIiwidGhyb3dJbnZhbGlkRnJvbnRlbmRBcGlFcnJvciIsInRocm93SW52YWxpZFByb3h5VXJsIiwidGhyb3dNaXNzaW5nUHVibGlzaGFibGVLZXlFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-5DRMPUGE.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-5E5NNJ3O.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-5E5NNJ3O.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: () => (/* binding */ addClerkPrefix),\n/* harmony export */   getClerkJsMajorVersionOrTag: () => (/* binding */ getClerkJsMajorVersionOrTag),\n/* harmony export */   getScriptUrl: () => (/* binding */ getScriptUrl),\n/* harmony export */   isStaging: () => (/* binding */ isStaging),\n/* harmony export */   parseSearchParams: () => (/* binding */ parseSearchParams),\n/* harmony export */   stripScheme: () => (/* binding */ stripScheme)\n/* harmony export */ });\n// src/utils/instance.ts\nfunction isStaging(frontendApi) {\n    return frontendApi.endsWith(\".lclstage.dev\") || frontendApi.endsWith(\".stgstage.dev\") || frontendApi.endsWith(\".clerkstage.dev\") || frontendApi.endsWith(\".accountsstage.dev\");\n}\n// src/url.ts\nfunction parseSearchParams(queryString = \"\") {\n    if (queryString.startsWith(\"?\")) {\n        queryString = queryString.slice(1);\n    }\n    return new URLSearchParams(queryString);\n}\nfunction stripScheme(url = \"\") {\n    return (url || \"\").replace(/^.+:\\/\\//, \"\");\n}\nfunction addClerkPrefix(str) {\n    if (!str) {\n        return \"\";\n    }\n    let regex;\n    if (str.match(/^(clerk\\.)+\\w*$/)) {\n        regex = /(clerk\\.)*(?=clerk\\.)/;\n    } else if (str.match(/\\.clerk.accounts/)) {\n        return str;\n    } else {\n        regex = /^(clerk\\.)*/gi;\n    }\n    const stripped = str.replace(regex, \"\");\n    return `clerk.${stripped}`;\n}\nvar getClerkJsMajorVersionOrTag = (frontendApi, pkgVersion)=>{\n    if (!pkgVersion && isStaging(frontendApi)) {\n        return \"canary\";\n    }\n    if (!pkgVersion) {\n        return \"latest\";\n    }\n    return pkgVersion.split(\".\")[0] || \"latest\";\n};\nvar getScriptUrl = (frontendApi, { pkgVersion = \"4.68.2\", clerkJSVersion })=>{\n    const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, \"\");\n    const major = getClerkJsMajorVersionOrTag(frontendApi, pkgVersion);\n    return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\n //# sourceMappingURL=chunk-5E5NNJ3O.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNUU1Tk5KM08ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLHdCQUF3QjtBQUN4QixTQUFTQSxVQUFVQyxXQUFXO0lBQzVCLE9BQU9BLFlBQVlDLFFBQVEsQ0FBQyxvQkFBb0JELFlBQVlDLFFBQVEsQ0FBQyxvQkFBb0JELFlBQVlDLFFBQVEsQ0FBQyxzQkFBc0JELFlBQVlDLFFBQVEsQ0FBQztBQUMzSjtBQUVBLGFBQWE7QUFDYixTQUFTQyxrQkFBa0JDLGNBQWMsRUFBRTtJQUN6QyxJQUFJQSxZQUFZQyxVQUFVLENBQUMsTUFBTTtRQUMvQkQsY0FBY0EsWUFBWUUsS0FBSyxDQUFDO0lBQ2xDO0lBQ0EsT0FBTyxJQUFJQyxnQkFBZ0JIO0FBQzdCO0FBQ0EsU0FBU0ksWUFBWUMsTUFBTSxFQUFFO0lBQzNCLE9BQU8sQ0FBQ0EsT0FBTyxFQUFDLEVBQUdDLE9BQU8sQ0FBQyxZQUFZO0FBQ3pDO0FBQ0EsU0FBU0MsZUFBZUMsR0FBRztJQUN6QixJQUFJLENBQUNBLEtBQUs7UUFDUixPQUFPO0lBQ1Q7SUFDQSxJQUFJQztJQUNKLElBQUlELElBQUlFLEtBQUssQ0FBQyxvQkFBb0I7UUFDaENELFFBQVE7SUFDVixPQUFPLElBQUlELElBQUlFLEtBQUssQ0FBQyxxQkFBcUI7UUFDeEMsT0FBT0Y7SUFDVCxPQUFPO1FBQ0xDLFFBQVE7SUFDVjtJQUNBLE1BQU1FLFdBQVdILElBQUlGLE9BQU8sQ0FBQ0csT0FBTztJQUNwQyxPQUFPLENBQUMsTUFBTSxFQUFFRSxTQUFTLENBQUM7QUFDNUI7QUFDQSxJQUFJQyw4QkFBOEIsQ0FBQ2YsYUFBYWdCO0lBQzlDLElBQUksQ0FBQ0EsY0FBY2pCLFVBQVVDLGNBQWM7UUFDekMsT0FBTztJQUNUO0lBQ0EsSUFBSSxDQUFDZ0IsWUFBWTtRQUNmLE9BQU87SUFDVDtJQUNBLE9BQU9BLFdBQVdDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJO0FBQ3JDO0FBQ0EsSUFBSUMsZUFBZSxDQUFDbEIsYUFBYSxFQUFFZ0IsYUFBYSxRQUFRLEVBQUVHLGNBQWMsRUFBRTtJQUN4RSxNQUFNQyxzQkFBc0JwQixZQUFZUyxPQUFPLENBQUMsaUJBQWlCO0lBQ2pFLE1BQU1ZLFFBQVFOLDRCQUE0QmYsYUFBYWdCO0lBQ3ZELE9BQU8sQ0FBQyxRQUFRLEVBQUVJLG9CQUFvQixxQkFBcUIsRUFBRUQsa0JBQWtCRSxNQUFNLHNCQUFzQixDQUFDO0FBQzlHO0FBU0UsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstNUU1Tk5KM08ubWpzP2IyNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2luc3RhbmNlLnRzXG5mdW5jdGlvbiBpc1N0YWdpbmcoZnJvbnRlbmRBcGkpIHtcbiAgcmV0dXJuIGZyb250ZW5kQXBpLmVuZHNXaXRoKFwiLmxjbHN0YWdlLmRldlwiKSB8fCBmcm9udGVuZEFwaS5lbmRzV2l0aChcIi5zdGdzdGFnZS5kZXZcIikgfHwgZnJvbnRlbmRBcGkuZW5kc1dpdGgoXCIuY2xlcmtzdGFnZS5kZXZcIikgfHwgZnJvbnRlbmRBcGkuZW5kc1dpdGgoXCIuYWNjb3VudHNzdGFnZS5kZXZcIik7XG59XG5cbi8vIHNyYy91cmwudHNcbmZ1bmN0aW9uIHBhcnNlU2VhcmNoUGFyYW1zKHF1ZXJ5U3RyaW5nID0gXCJcIikge1xuICBpZiAocXVlcnlTdHJpbmcuc3RhcnRzV2l0aChcIj9cIikpIHtcbiAgICBxdWVyeVN0cmluZyA9IHF1ZXJ5U3RyaW5nLnNsaWNlKDEpO1xuICB9XG4gIHJldHVybiBuZXcgVVJMU2VhcmNoUGFyYW1zKHF1ZXJ5U3RyaW5nKTtcbn1cbmZ1bmN0aW9uIHN0cmlwU2NoZW1lKHVybCA9IFwiXCIpIHtcbiAgcmV0dXJuICh1cmwgfHwgXCJcIikucmVwbGFjZSgvXi4rOlxcL1xcLy8sIFwiXCIpO1xufVxuZnVuY3Rpb24gYWRkQ2xlcmtQcmVmaXgoc3RyKSB7XG4gIGlmICghc3RyKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbiAgbGV0IHJlZ2V4O1xuICBpZiAoc3RyLm1hdGNoKC9eKGNsZXJrXFwuKStcXHcqJC8pKSB7XG4gICAgcmVnZXggPSAvKGNsZXJrXFwuKSooPz1jbGVya1xcLikvO1xuICB9IGVsc2UgaWYgKHN0ci5tYXRjaCgvXFwuY2xlcmsuYWNjb3VudHMvKSkge1xuICAgIHJldHVybiBzdHI7XG4gIH0gZWxzZSB7XG4gICAgcmVnZXggPSAvXihjbGVya1xcLikqL2dpO1xuICB9XG4gIGNvbnN0IHN0cmlwcGVkID0gc3RyLnJlcGxhY2UocmVnZXgsIFwiXCIpO1xuICByZXR1cm4gYGNsZXJrLiR7c3RyaXBwZWR9YDtcbn1cbnZhciBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcgPSAoZnJvbnRlbmRBcGksIHBrZ1ZlcnNpb24pID0+IHtcbiAgaWYgKCFwa2dWZXJzaW9uICYmIGlzU3RhZ2luZyhmcm9udGVuZEFwaSkpIHtcbiAgICByZXR1cm4gXCJjYW5hcnlcIjtcbiAgfVxuICBpZiAoIXBrZ1ZlcnNpb24pIHtcbiAgICByZXR1cm4gXCJsYXRlc3RcIjtcbiAgfVxuICByZXR1cm4gcGtnVmVyc2lvbi5zcGxpdChcIi5cIilbMF0gfHwgXCJsYXRlc3RcIjtcbn07XG52YXIgZ2V0U2NyaXB0VXJsID0gKGZyb250ZW5kQXBpLCB7IHBrZ1ZlcnNpb24gPSBcIjQuNjguMlwiLCBjbGVya0pTVmVyc2lvbiB9KSA9PiB7XG4gIGNvbnN0IG5vU2NoZW1lRnJvbnRlbmRBcGkgPSBmcm9udGVuZEFwaS5yZXBsYWNlKC9odHRwKHMpPzpcXC9cXC8vLCBcIlwiKTtcbiAgY29uc3QgbWFqb3IgPSBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcoZnJvbnRlbmRBcGksIHBrZ1ZlcnNpb24pO1xuICByZXR1cm4gYGh0dHBzOi8vJHtub1NjaGVtZUZyb250ZW5kQXBpfS9ucG0vQGNsZXJrL2NsZXJrLWpzQCR7Y2xlcmtKU1ZlcnNpb24gfHwgbWFqb3J9L2Rpc3QvY2xlcmsuYnJvd3Nlci5qc2A7XG59O1xuXG5leHBvcnQge1xuICBpc1N0YWdpbmcsXG4gIHBhcnNlU2VhcmNoUGFyYW1zLFxuICBzdHJpcFNjaGVtZSxcbiAgYWRkQ2xlcmtQcmVmaXgsXG4gIGdldENsZXJrSnNNYWpvclZlcnNpb25PclRhZyxcbiAgZ2V0U2NyaXB0VXJsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstNUU1Tk5KM08ubWpzLm1hcCJdLCJuYW1lcyI6WyJpc1N0YWdpbmciLCJmcm9udGVuZEFwaSIsImVuZHNXaXRoIiwicGFyc2VTZWFyY2hQYXJhbXMiLCJxdWVyeVN0cmluZyIsInN0YXJ0c1dpdGgiLCJzbGljZSIsIlVSTFNlYXJjaFBhcmFtcyIsInN0cmlwU2NoZW1lIiwidXJsIiwicmVwbGFjZSIsImFkZENsZXJrUHJlZml4Iiwic3RyIiwicmVnZXgiLCJtYXRjaCIsInN0cmlwcGVkIiwiZ2V0Q2xlcmtKc01ham9yVmVyc2lvbk9yVGFnIiwicGtnVmVyc2lvbiIsInNwbGl0IiwiZ2V0U2NyaXB0VXJsIiwiY2xlcmtKU1ZlcnNpb24iLCJub1NjaGVtZUZyb250ZW5kQXBpIiwibWFqb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-5E5NNJ3O.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-GVKVD773.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-GVKVD773.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRequestUrl: () => (/* binding */ getRequestUrl),\n/* harmony export */   isHttpOrHttps: () => (/* binding */ isHttpOrHttps),\n/* harmony export */   isProxyUrlRelative: () => (/* binding */ isProxyUrlRelative),\n/* harmony export */   isValidProxyUrl: () => (/* binding */ isValidProxyUrl),\n/* harmony export */   proxyUrlToAbsoluteURL: () => (/* binding */ proxyUrlToAbsoluteURL)\n/* harmony export */ });\n/* harmony import */ var _chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-KJVJ4CFF.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-KJVJ4CFF.mjs\");\n\n// src/proxy.ts\nfunction isValidProxyUrl(key) {\n    if (!key) {\n        return true;\n    }\n    return isHttpOrHttps(key) || isProxyUrlRelative(key);\n}\nfunction isHttpOrHttps(key) {\n    return /^http(s)?:\\/\\//.test(key || \"\");\n}\nfunction isProxyUrlRelative(key) {\n    return key.startsWith(\"/\");\n}\nfunction proxyUrlToAbsoluteURL(url) {\n    if (!url) {\n        return \"\";\n    }\n    return isProxyUrlRelative(url) ? new URL(url, window.location.origin).toString() : url;\n}\nfunction getRequestUrl({ request, relativePath }) {\n    (0,_chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecated)(\"getRequestUrl\", \"Use `buildRequestUrl` from @clerk/backend instead.\");\n    const { headers, url: initialUrl } = request;\n    const url = new URL(initialUrl);\n    const host = headers.get(\"X-Forwarded-Host\") ?? headers.get(\"host\") ?? headers[\"host\"] ?? url.host;\n    let protocol = (headers.get(\"X-Forwarded-Proto\") ?? headers[\"X-Forwarded-Proto\"])?.split(\",\")[0] ?? url.protocol;\n    protocol = protocol.replace(/[:/]/, \"\");\n    return new URL(relativePath || url.pathname, `${protocol}://${host}`);\n}\n //# sourceMappingURL=chunk-GVKVD773.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstR1ZLVkQ3NzMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUU4QjtBQUU5QixlQUFlO0FBQ2YsU0FBU0MsZ0JBQWdCQyxHQUFHO0lBQzFCLElBQUksQ0FBQ0EsS0FBSztRQUNSLE9BQU87SUFDVDtJQUNBLE9BQU9DLGNBQWNELFFBQVFFLG1CQUFtQkY7QUFDbEQ7QUFDQSxTQUFTQyxjQUFjRCxHQUFHO0lBQ3hCLE9BQU8saUJBQWlCRyxJQUFJLENBQUNILE9BQU87QUFDdEM7QUFDQSxTQUFTRSxtQkFBbUJGLEdBQUc7SUFDN0IsT0FBT0EsSUFBSUksVUFBVSxDQUFDO0FBQ3hCO0FBQ0EsU0FBU0Msc0JBQXNCQyxHQUFHO0lBQ2hDLElBQUksQ0FBQ0EsS0FBSztRQUNSLE9BQU87SUFDVDtJQUNBLE9BQU9KLG1CQUFtQkksT0FBTyxJQUFJQyxJQUFJRCxLQUFLRSxPQUFPQyxRQUFRLENBQUNDLE1BQU0sRUFBRUMsUUFBUSxLQUFLTDtBQUNyRjtBQUNBLFNBQVNNLGNBQWMsRUFBRUMsT0FBTyxFQUFFQyxZQUFZLEVBQUU7SUFDOUNoQiwrREFBVUEsQ0FBQyxpQkFBaUI7SUFDNUIsTUFBTSxFQUFFaUIsT0FBTyxFQUFFVCxLQUFLVSxVQUFVLEVBQUUsR0FBR0g7SUFDckMsTUFBTVAsTUFBTSxJQUFJQyxJQUFJUztJQUNwQixNQUFNQyxPQUFPRixRQUFRRyxHQUFHLENBQUMsdUJBQXVCSCxRQUFRRyxHQUFHLENBQUMsV0FBV0gsT0FBTyxDQUFDLE9BQU8sSUFBSVQsSUFBSVcsSUFBSTtJQUNsRyxJQUFJRSxXQUFXLENBQUNKLFFBQVFHLEdBQUcsQ0FBQyx3QkFBd0JILE9BQU8sQ0FBQyxvQkFBb0IsR0FBR0ssTUFBTSxJQUFJLENBQUMsRUFBRSxJQUFJZCxJQUFJYSxRQUFRO0lBQ2hIQSxXQUFXQSxTQUFTRSxPQUFPLENBQUMsUUFBUTtJQUNwQyxPQUFPLElBQUlkLElBQUlPLGdCQUFnQlIsSUFBSWdCLFFBQVEsRUFBRSxDQUFDLEVBQUVILFNBQVMsR0FBRyxFQUFFRixLQUFLLENBQUM7QUFDdEU7QUFRRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1HVktWRDc3My5tanM/Mzg0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBkZXByZWNhdGVkXG59IGZyb20gXCIuL2NodW5rLUtKVko0Q0ZGLm1qc1wiO1xuXG4vLyBzcmMvcHJveHkudHNcbmZ1bmN0aW9uIGlzVmFsaWRQcm94eVVybChrZXkpIHtcbiAgaWYgKCFrZXkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gaXNIdHRwT3JIdHRwcyhrZXkpIHx8IGlzUHJveHlVcmxSZWxhdGl2ZShrZXkpO1xufVxuZnVuY3Rpb24gaXNIdHRwT3JIdHRwcyhrZXkpIHtcbiAgcmV0dXJuIC9eaHR0cChzKT86XFwvXFwvLy50ZXN0KGtleSB8fCBcIlwiKTtcbn1cbmZ1bmN0aW9uIGlzUHJveHlVcmxSZWxhdGl2ZShrZXkpIHtcbiAgcmV0dXJuIGtleS5zdGFydHNXaXRoKFwiL1wiKTtcbn1cbmZ1bmN0aW9uIHByb3h5VXJsVG9BYnNvbHV0ZVVSTCh1cmwpIHtcbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICByZXR1cm4gaXNQcm94eVVybFJlbGF0aXZlKHVybCkgPyBuZXcgVVJMKHVybCwgd2luZG93LmxvY2F0aW9uLm9yaWdpbikudG9TdHJpbmcoKSA6IHVybDtcbn1cbmZ1bmN0aW9uIGdldFJlcXVlc3RVcmwoeyByZXF1ZXN0LCByZWxhdGl2ZVBhdGggfSkge1xuICBkZXByZWNhdGVkKFwiZ2V0UmVxdWVzdFVybFwiLCBcIlVzZSBgYnVpbGRSZXF1ZXN0VXJsYCBmcm9tIEBjbGVyay9iYWNrZW5kIGluc3RlYWQuXCIpO1xuICBjb25zdCB7IGhlYWRlcnMsIHVybDogaW5pdGlhbFVybCB9ID0gcmVxdWVzdDtcbiAgY29uc3QgdXJsID0gbmV3IFVSTChpbml0aWFsVXJsKTtcbiAgY29uc3QgaG9zdCA9IGhlYWRlcnMuZ2V0KFwiWC1Gb3J3YXJkZWQtSG9zdFwiKSA/PyBoZWFkZXJzLmdldChcImhvc3RcIikgPz8gaGVhZGVyc1tcImhvc3RcIl0gPz8gdXJsLmhvc3Q7XG4gIGxldCBwcm90b2NvbCA9IChoZWFkZXJzLmdldChcIlgtRm9yd2FyZGVkLVByb3RvXCIpID8/IGhlYWRlcnNbXCJYLUZvcndhcmRlZC1Qcm90b1wiXSk/LnNwbGl0KFwiLFwiKVswXSA/PyB1cmwucHJvdG9jb2w7XG4gIHByb3RvY29sID0gcHJvdG9jb2wucmVwbGFjZSgvWzovXS8sIFwiXCIpO1xuICByZXR1cm4gbmV3IFVSTChyZWxhdGl2ZVBhdGggfHwgdXJsLnBhdGhuYW1lLCBgJHtwcm90b2NvbH06Ly8ke2hvc3R9YCk7XG59XG5cbmV4cG9ydCB7XG4gIGlzVmFsaWRQcm94eVVybCxcbiAgaXNIdHRwT3JIdHRwcyxcbiAgaXNQcm94eVVybFJlbGF0aXZlLFxuICBwcm94eVVybFRvQWJzb2x1dGVVUkwsXG4gIGdldFJlcXVlc3RVcmxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1HVktWRDc3My5tanMubWFwIl0sIm5hbWVzIjpbImRlcHJlY2F0ZWQiLCJpc1ZhbGlkUHJveHlVcmwiLCJrZXkiLCJpc0h0dHBPckh0dHBzIiwiaXNQcm94eVVybFJlbGF0aXZlIiwidGVzdCIsInN0YXJ0c1dpdGgiLCJwcm94eVVybFRvQWJzb2x1dGVVUkwiLCJ1cmwiLCJVUkwiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsInRvU3RyaW5nIiwiZ2V0UmVxdWVzdFVybCIsInJlcXVlc3QiLCJyZWxhdGl2ZVBhdGgiLCJoZWFkZXJzIiwiaW5pdGlhbFVybCIsImhvc3QiLCJnZXQiLCJwcm90b2NvbCIsInNwbGl0IiwicmVwbGFjZSIsInBhdGhuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-GVKVD773.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-IAZRYRAH.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-IAZRYRAH.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: () => (/* binding */ buildPublishableKey),\n/* harmony export */   createDevOrStagingUrlCache: () => (/* binding */ createDevOrStagingUrlCache),\n/* harmony export */   isDevelopmentFromApiKey: () => (/* binding */ isDevelopmentFromApiKey),\n/* harmony export */   isLegacyFrontendApiKey: () => (/* binding */ isLegacyFrontendApiKey),\n/* harmony export */   isProductionFromApiKey: () => (/* binding */ isProductionFromApiKey),\n/* harmony export */   isPublishableKey: () => (/* binding */ isPublishableKey),\n/* harmony export */   parsePublishableKey: () => (/* binding */ parsePublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n\n// src/keys.ts\nvar PUBLISHABLE_KEY_LIVE_PREFIX = \"pk_live_\";\nvar PUBLISHABLE_KEY_TEST_PREFIX = \"pk_test_\";\nvar PUBLISHABLE_FRONTEND_API_DEV_REGEX = /^(([a-z]+)-){2}([0-9]{1,2})\\.clerk\\.accounts([a-z.]*)(dev|com)$/i;\nfunction buildPublishableKey(frontendApi) {\n    const keyPrefix = PUBLISHABLE_FRONTEND_API_DEV_REGEX.test(frontendApi) ? PUBLISHABLE_KEY_TEST_PREFIX : PUBLISHABLE_KEY_LIVE_PREFIX;\n    return `${keyPrefix}${btoa(`${frontendApi}$`)}`;\n}\nfunction parsePublishableKey(key) {\n    key = key || \"\";\n    if (!isPublishableKey(key)) {\n        return null;\n    }\n    const instanceType = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) ? \"production\" : \"development\";\n    let frontendApi = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2]);\n    if (!frontendApi.endsWith(\"$\")) {\n        return null;\n    }\n    frontendApi = frontendApi.slice(0, -1);\n    return {\n        instanceType,\n        frontendApi\n    };\n}\nfunction isPublishableKey(key) {\n    key = key || \"\";\n    const hasValidPrefix = key.startsWith(PUBLISHABLE_KEY_LIVE_PREFIX) || key.startsWith(PUBLISHABLE_KEY_TEST_PREFIX);\n    const hasValidFrontendApiPostfix = (0,_chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)(key.split(\"_\")[2] || \"\").endsWith(\"$\");\n    return hasValidPrefix && hasValidFrontendApiPostfix;\n}\nfunction isLegacyFrontendApiKey(key) {\n    key = key || \"\";\n    return key.startsWith(\"clerk.\");\n}\nfunction createDevOrStagingUrlCache() {\n    const DEV_OR_STAGING_SUFFIXES = [\n        \".lcl.dev\",\n        \".stg.dev\",\n        \".lclstage.dev\",\n        \".stgstage.dev\",\n        \".dev.lclclerk.com\",\n        \".stg.lclclerk.com\",\n        \".accounts.lclclerk.com\",\n        \"accountsstage.dev\",\n        \"accounts.dev\"\n    ];\n    const devOrStagingUrlCache = /* @__PURE__ */ new Map();\n    return {\n        isDevOrStagingUrl: (url)=>{\n            if (!url) {\n                return false;\n            }\n            const hostname = typeof url === \"string\" ? url : url.hostname;\n            let res = devOrStagingUrlCache.get(hostname);\n            if (res === void 0) {\n                res = DEV_OR_STAGING_SUFFIXES.some((s)=>hostname.endsWith(s));\n                devOrStagingUrlCache.set(hostname, res);\n            }\n            return res;\n        }\n    };\n}\nfunction isDevelopmentFromApiKey(apiKey) {\n    return apiKey.startsWith(\"test_\") || apiKey.startsWith(\"sk_test_\");\n}\nfunction isProductionFromApiKey(apiKey) {\n    return apiKey.startsWith(\"live_\") || apiKey.startsWith(\"sk_live_\");\n}\n //# sourceMappingURL=chunk-IAZRYRAH.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstSUFaUllSQUgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBRThCO0FBRTlCLGNBQWM7QUFDZCxJQUFJQyw4QkFBOEI7QUFDbEMsSUFBSUMsOEJBQThCO0FBQ2xDLElBQUlDLHFDQUFxQztBQUN6QyxTQUFTQyxvQkFBb0JDLFdBQVc7SUFDdEMsTUFBTUMsWUFBWUgsbUNBQW1DSSxJQUFJLENBQUNGLGVBQWVILDhCQUE4QkQ7SUFDdkcsT0FBTyxDQUFDLEVBQUVLLFVBQVUsRUFBRUUsS0FBSyxDQUFDLEVBQUVILFlBQVksQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUNqRDtBQUNBLFNBQVNJLG9CQUFvQkMsR0FBRztJQUM5QkEsTUFBTUEsT0FBTztJQUNiLElBQUksQ0FBQ0MsaUJBQWlCRCxNQUFNO1FBQzFCLE9BQU87SUFDVDtJQUNBLE1BQU1FLGVBQWVGLElBQUlHLFVBQVUsQ0FBQ1osK0JBQStCLGVBQWU7SUFDbEYsSUFBSUksY0FBY0wsbUVBQWNBLENBQUNVLElBQUlJLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUNsRCxJQUFJLENBQUNULFlBQVlVLFFBQVEsQ0FBQyxNQUFNO1FBQzlCLE9BQU87SUFDVDtJQUNBVixjQUFjQSxZQUFZVyxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQ3BDLE9BQU87UUFDTEo7UUFDQVA7SUFDRjtBQUNGO0FBQ0EsU0FBU00saUJBQWlCRCxHQUFHO0lBQzNCQSxNQUFNQSxPQUFPO0lBQ2IsTUFBTU8saUJBQWlCUCxJQUFJRyxVQUFVLENBQUNaLGdDQUFnQ1MsSUFBSUcsVUFBVSxDQUFDWDtJQUNyRixNQUFNZ0IsNkJBQTZCbEIsbUVBQWNBLENBQUNVLElBQUlJLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLElBQUlDLFFBQVEsQ0FBQztJQUNwRixPQUFPRSxrQkFBa0JDO0FBQzNCO0FBQ0EsU0FBU0MsdUJBQXVCVCxHQUFHO0lBQ2pDQSxNQUFNQSxPQUFPO0lBQ2IsT0FBT0EsSUFBSUcsVUFBVSxDQUFDO0FBQ3hCO0FBQ0EsU0FBU087SUFDUCxNQUFNQywwQkFBMEI7UUFDOUI7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO0tBQ0Q7SUFDRCxNQUFNQyx1QkFBdUIsYUFBYSxHQUFHLElBQUlDO0lBQ2pELE9BQU87UUFDTEMsbUJBQW1CLENBQUNDO1lBQ2xCLElBQUksQ0FBQ0EsS0FBSztnQkFDUixPQUFPO1lBQ1Q7WUFDQSxNQUFNQyxXQUFXLE9BQU9ELFFBQVEsV0FBV0EsTUFBTUEsSUFBSUMsUUFBUTtZQUM3RCxJQUFJQyxNQUFNTCxxQkFBcUJNLEdBQUcsQ0FBQ0Y7WUFDbkMsSUFBSUMsUUFBUSxLQUFLLEdBQUc7Z0JBQ2xCQSxNQUFNTix3QkFBd0JRLElBQUksQ0FBQyxDQUFDQyxJQUFNSixTQUFTWCxRQUFRLENBQUNlO2dCQUM1RFIscUJBQXFCUyxHQUFHLENBQUNMLFVBQVVDO1lBQ3JDO1lBQ0EsT0FBT0E7UUFDVDtJQUNGO0FBQ0Y7QUFDQSxTQUFTSyx3QkFBd0JDLE1BQU07SUFDckMsT0FBT0EsT0FBT3BCLFVBQVUsQ0FBQyxZQUFZb0IsT0FBT3BCLFVBQVUsQ0FBQztBQUN6RDtBQUNBLFNBQVNxQix1QkFBdUJELE1BQU07SUFDcEMsT0FBT0EsT0FBT3BCLFVBQVUsQ0FBQyxZQUFZb0IsT0FBT3BCLFVBQVUsQ0FBQztBQUN6RDtBQVVFLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLUlBWlJZUkFILm1qcz9jYmMxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGlzb21vcnBoaWNBdG9iXG59IGZyb20gXCIuL2NodW5rLVRFVEdURUkyLm1qc1wiO1xuXG4vLyBzcmMva2V5cy50c1xudmFyIFBVQkxJU0hBQkxFX0tFWV9MSVZFX1BSRUZJWCA9IFwicGtfbGl2ZV9cIjtcbnZhciBQVUJMSVNIQUJMRV9LRVlfVEVTVF9QUkVGSVggPSBcInBrX3Rlc3RfXCI7XG52YXIgUFVCTElTSEFCTEVfRlJPTlRFTkRfQVBJX0RFVl9SRUdFWCA9IC9eKChbYS16XSspLSl7Mn0oWzAtOV17MSwyfSlcXC5jbGVya1xcLmFjY291bnRzKFthLXouXSopKGRldnxjb20pJC9pO1xuZnVuY3Rpb24gYnVpbGRQdWJsaXNoYWJsZUtleShmcm9udGVuZEFwaSkge1xuICBjb25zdCBrZXlQcmVmaXggPSBQVUJMSVNIQUJMRV9GUk9OVEVORF9BUElfREVWX1JFR0VYLnRlc3QoZnJvbnRlbmRBcGkpID8gUFVCTElTSEFCTEVfS0VZX1RFU1RfUFJFRklYIDogUFVCTElTSEFCTEVfS0VZX0xJVkVfUFJFRklYO1xuICByZXR1cm4gYCR7a2V5UHJlZml4fSR7YnRvYShgJHtmcm9udGVuZEFwaX0kYCl9YDtcbn1cbmZ1bmN0aW9uIHBhcnNlUHVibGlzaGFibGVLZXkoa2V5KSB7XG4gIGtleSA9IGtleSB8fCBcIlwiO1xuICBpZiAoIWlzUHVibGlzaGFibGVLZXkoa2V5KSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IGluc3RhbmNlVHlwZSA9IGtleS5zdGFydHNXaXRoKFBVQkxJU0hBQkxFX0tFWV9MSVZFX1BSRUZJWCkgPyBcInByb2R1Y3Rpb25cIiA6IFwiZGV2ZWxvcG1lbnRcIjtcbiAgbGV0IGZyb250ZW5kQXBpID0gaXNvbW9ycGhpY0F0b2Ioa2V5LnNwbGl0KFwiX1wiKVsyXSk7XG4gIGlmICghZnJvbnRlbmRBcGkuZW5kc1dpdGgoXCIkXCIpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgZnJvbnRlbmRBcGkgPSBmcm9udGVuZEFwaS5zbGljZSgwLCAtMSk7XG4gIHJldHVybiB7XG4gICAgaW5zdGFuY2VUeXBlLFxuICAgIGZyb250ZW5kQXBpXG4gIH07XG59XG5mdW5jdGlvbiBpc1B1Ymxpc2hhYmxlS2V5KGtleSkge1xuICBrZXkgPSBrZXkgfHwgXCJcIjtcbiAgY29uc3QgaGFzVmFsaWRQcmVmaXggPSBrZXkuc3RhcnRzV2l0aChQVUJMSVNIQUJMRV9LRVlfTElWRV9QUkVGSVgpIHx8IGtleS5zdGFydHNXaXRoKFBVQkxJU0hBQkxFX0tFWV9URVNUX1BSRUZJWCk7XG4gIGNvbnN0IGhhc1ZhbGlkRnJvbnRlbmRBcGlQb3N0Zml4ID0gaXNvbW9ycGhpY0F0b2Ioa2V5LnNwbGl0KFwiX1wiKVsyXSB8fCBcIlwiKS5lbmRzV2l0aChcIiRcIik7XG4gIHJldHVybiBoYXNWYWxpZFByZWZpeCAmJiBoYXNWYWxpZEZyb250ZW5kQXBpUG9zdGZpeDtcbn1cbmZ1bmN0aW9uIGlzTGVnYWN5RnJvbnRlbmRBcGlLZXkoa2V5KSB7XG4gIGtleSA9IGtleSB8fCBcIlwiO1xuICByZXR1cm4ga2V5LnN0YXJ0c1dpdGgoXCJjbGVyay5cIik7XG59XG5mdW5jdGlvbiBjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSgpIHtcbiAgY29uc3QgREVWX09SX1NUQUdJTkdfU1VGRklYRVMgPSBbXG4gICAgXCIubGNsLmRldlwiLFxuICAgIFwiLnN0Zy5kZXZcIixcbiAgICBcIi5sY2xzdGFnZS5kZXZcIixcbiAgICBcIi5zdGdzdGFnZS5kZXZcIixcbiAgICBcIi5kZXYubGNsY2xlcmsuY29tXCIsXG4gICAgXCIuc3RnLmxjbGNsZXJrLmNvbVwiLFxuICAgIFwiLmFjY291bnRzLmxjbGNsZXJrLmNvbVwiLFxuICAgIFwiYWNjb3VudHNzdGFnZS5kZXZcIixcbiAgICBcImFjY291bnRzLmRldlwiXG4gIF07XG4gIGNvbnN0IGRldk9yU3RhZ2luZ1VybENhY2hlID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgcmV0dXJuIHtcbiAgICBpc0Rldk9yU3RhZ2luZ1VybDogKHVybCkgPT4ge1xuICAgICAgaWYgKCF1cmwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgY29uc3QgaG9zdG5hbWUgPSB0eXBlb2YgdXJsID09PSBcInN0cmluZ1wiID8gdXJsIDogdXJsLmhvc3RuYW1lO1xuICAgICAgbGV0IHJlcyA9IGRldk9yU3RhZ2luZ1VybENhY2hlLmdldChob3N0bmFtZSk7XG4gICAgICBpZiAocmVzID09PSB2b2lkIDApIHtcbiAgICAgICAgcmVzID0gREVWX09SX1NUQUdJTkdfU1VGRklYRVMuc29tZSgocykgPT4gaG9zdG5hbWUuZW5kc1dpdGgocykpO1xuICAgICAgICBkZXZPclN0YWdpbmdVcmxDYWNoZS5zZXQoaG9zdG5hbWUsIHJlcyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgfTtcbn1cbmZ1bmN0aW9uIGlzRGV2ZWxvcG1lbnRGcm9tQXBpS2V5KGFwaUtleSkge1xuICByZXR1cm4gYXBpS2V5LnN0YXJ0c1dpdGgoXCJ0ZXN0X1wiKSB8fCBhcGlLZXkuc3RhcnRzV2l0aChcInNrX3Rlc3RfXCIpO1xufVxuZnVuY3Rpb24gaXNQcm9kdWN0aW9uRnJvbUFwaUtleShhcGlLZXkpIHtcbiAgcmV0dXJuIGFwaUtleS5zdGFydHNXaXRoKFwibGl2ZV9cIikgfHwgYXBpS2V5LnN0YXJ0c1dpdGgoXCJza19saXZlX1wiKTtcbn1cblxuZXhwb3J0IHtcbiAgYnVpbGRQdWJsaXNoYWJsZUtleSxcbiAgcGFyc2VQdWJsaXNoYWJsZUtleSxcbiAgaXNQdWJsaXNoYWJsZUtleSxcbiAgaXNMZWdhY3lGcm9udGVuZEFwaUtleSxcbiAgY3JlYXRlRGV2T3JTdGFnaW5nVXJsQ2FjaGUsXG4gIGlzRGV2ZWxvcG1lbnRGcm9tQXBpS2V5LFxuICBpc1Byb2R1Y3Rpb25Gcm9tQXBpS2V5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstSUFaUllSQUgubWpzLm1hcCJdLCJuYW1lcyI6WyJpc29tb3JwaGljQXRvYiIsIlBVQkxJU0hBQkxFX0tFWV9MSVZFX1BSRUZJWCIsIlBVQkxJU0hBQkxFX0tFWV9URVNUX1BSRUZJWCIsIlBVQkxJU0hBQkxFX0ZST05URU5EX0FQSV9ERVZfUkVHRVgiLCJidWlsZFB1Ymxpc2hhYmxlS2V5IiwiZnJvbnRlbmRBcGkiLCJrZXlQcmVmaXgiLCJ0ZXN0IiwiYnRvYSIsInBhcnNlUHVibGlzaGFibGVLZXkiLCJrZXkiLCJpc1B1Ymxpc2hhYmxlS2V5IiwiaW5zdGFuY2VUeXBlIiwic3RhcnRzV2l0aCIsInNwbGl0IiwiZW5kc1dpdGgiLCJzbGljZSIsImhhc1ZhbGlkUHJlZml4IiwiaGFzVmFsaWRGcm9udGVuZEFwaVBvc3RmaXgiLCJpc0xlZ2FjeUZyb250ZW5kQXBpS2V5IiwiY3JlYXRlRGV2T3JTdGFnaW5nVXJsQ2FjaGUiLCJERVZfT1JfU1RBR0lOR19TVUZGSVhFUyIsImRldk9yU3RhZ2luZ1VybENhY2hlIiwiTWFwIiwiaXNEZXZPclN0YWdpbmdVcmwiLCJ1cmwiLCJob3N0bmFtZSIsInJlcyIsImdldCIsInNvbWUiLCJzIiwic2V0IiwiaXNEZXZlbG9wbWVudEZyb21BcGlLZXkiLCJhcGlLZXkiLCJpc1Byb2R1Y3Rpb25Gcm9tQXBpS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-IAZRYRAH.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-KJVJ4CFF.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-KJVJ4CFF.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deprecated: () => (/* binding */ deprecated),\n/* harmony export */   deprecatedObjectProperty: () => (/* binding */ deprecatedObjectProperty),\n/* harmony export */   deprecatedProperty: () => (/* binding */ deprecatedProperty),\n/* harmony export */   isDevelopmentEnvironment: () => (/* binding */ isDevelopmentEnvironment),\n/* harmony export */   isProductionEnvironment: () => (/* binding */ isProductionEnvironment),\n/* harmony export */   isTestEnvironment: () => (/* binding */ isTestEnvironment)\n/* harmony export */ });\n// src/utils/runtimeEnvironment.ts\nvar isDevelopmentEnvironment = ()=>{\n    try {\n        return \"development\" === \"development\";\n    } catch (err) {}\n    return false;\n};\nvar isTestEnvironment = ()=>{\n    try {\n        return \"development\" === \"test\";\n    } catch (err) {}\n    return false;\n};\nvar isProductionEnvironment = ()=>{\n    try {\n        return \"development\" === \"production\";\n    } catch (err) {}\n    return false;\n};\n// src/deprecated.ts\nvar displayedWarnings = /* @__PURE__ */ new Set();\nvar deprecated = (fnName, warning, key)=>{\n    const hideWarning = isTestEnvironment() || isProductionEnvironment();\n    const messageId = key ?? fnName;\n    if (displayedWarnings.has(messageId) || hideWarning) {\n        return;\n    }\n    displayedWarnings.add(messageId);\n    console.warn(`Clerk - DEPRECATION WARNING: \"${fnName}\" is deprecated and will be removed in the next major release.\n${warning}`);\n};\nvar deprecatedProperty = (cls, propName, warning, isStatic = false)=>{\n    const target = isStatic ? cls : cls.prototype;\n    let value = target[propName];\n    Object.defineProperty(target, propName, {\n        get () {\n            deprecated(propName, warning, `${cls.name}:${propName}`);\n            return value;\n        },\n        set (v) {\n            value = v;\n        }\n    });\n};\nvar deprecatedObjectProperty = (obj, propName, warning, key)=>{\n    let value = obj[propName];\n    Object.defineProperty(obj, propName, {\n        get () {\n            deprecated(propName, warning, key);\n            return value;\n        },\n        set (v) {\n            value = v;\n        }\n    });\n};\n //# sourceMappingURL=chunk-KJVJ4CFF.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstS0pWSjRDRkYubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLGtDQUFrQztBQUNsQyxJQUFJQSwyQkFBMkI7SUFDN0IsSUFBSTtRQUNGLE9BQU9DLGtCQUF5QjtJQUNsQyxFQUFFLE9BQU9DLEtBQUssQ0FDZDtJQUNBLE9BQU87QUFDVDtBQUNBLElBQUlDLG9CQUFvQjtJQUN0QixJQUFJO1FBQ0YsT0FBT0Ysa0JBQXlCO0lBQ2xDLEVBQUUsT0FBT0MsS0FBSyxDQUNkO0lBQ0EsT0FBTztBQUNUO0FBQ0EsSUFBSUUsMEJBQTBCO0lBQzVCLElBQUk7UUFDRixPQUFPSCxrQkFBeUI7SUFDbEMsRUFBRSxPQUFPQyxLQUFLLENBQ2Q7SUFDQSxPQUFPO0FBQ1Q7QUFFQSxvQkFBb0I7QUFDcEIsSUFBSUcsb0JBQW9CLGFBQWEsR0FBRyxJQUFJQztBQUM1QyxJQUFJQyxhQUFhLENBQUNDLFFBQVFDLFNBQVNDO0lBQ2pDLE1BQU1DLGNBQWNSLHVCQUF1QkM7SUFDM0MsTUFBTVEsWUFBWUYsT0FBT0Y7SUFDekIsSUFBSUgsa0JBQWtCUSxHQUFHLENBQUNELGNBQWNELGFBQWE7UUFDbkQ7SUFDRjtJQUNBTixrQkFBa0JTLEdBQUcsQ0FBQ0Y7SUFDdEJHLFFBQVFDLElBQUksQ0FDVixDQUFDLDhCQUE4QixFQUFFUixPQUFPO0FBQzVDLEVBQUVDLFFBQVEsQ0FBQztBQUVYO0FBQ0EsSUFBSVEscUJBQXFCLENBQUNDLEtBQUtDLFVBQVVWLFNBQVNXLFdBQVcsS0FBSztJQUNoRSxNQUFNQyxTQUFTRCxXQUFXRixNQUFNQSxJQUFJSSxTQUFTO0lBQzdDLElBQUlDLFFBQVFGLE1BQU0sQ0FBQ0YsU0FBUztJQUM1QkssT0FBT0MsY0FBYyxDQUFDSixRQUFRRixVQUFVO1FBQ3RDTztZQUNFbkIsV0FBV1ksVUFBVVYsU0FBUyxDQUFDLEVBQUVTLElBQUlTLElBQUksQ0FBQyxDQUFDLEVBQUVSLFNBQVMsQ0FBQztZQUN2RCxPQUFPSTtRQUNUO1FBQ0FLLEtBQUlDLENBQUM7WUFDSE4sUUFBUU07UUFDVjtJQUNGO0FBQ0Y7QUFDQSxJQUFJQywyQkFBMkIsQ0FBQ0MsS0FBS1osVUFBVVYsU0FBU0M7SUFDdEQsSUFBSWEsUUFBUVEsR0FBRyxDQUFDWixTQUFTO0lBQ3pCSyxPQUFPQyxjQUFjLENBQUNNLEtBQUtaLFVBQVU7UUFDbkNPO1lBQ0VuQixXQUFXWSxVQUFVVixTQUFTQztZQUM5QixPQUFPYTtRQUNUO1FBQ0FLLEtBQUlDLENBQUM7WUFDSE4sUUFBUU07UUFDVjtJQUNGO0FBQ0Y7QUFTRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9jaHVuay1LSlZKNENGRi5tanM/MDVhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvcnVudGltZUVudmlyb25tZW50LnRzXG52YXIgaXNEZXZlbG9wbWVudEVudmlyb25tZW50ID0gKCkgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xudmFyIGlzVGVzdEVudmlyb25tZW50ID0gKCkgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJ0ZXN0XCI7XG4gIH0gY2F0Y2ggKGVycikge1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn07XG52YXIgaXNQcm9kdWN0aW9uRW52aXJvbm1lbnQgPSAoKSA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIjtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuLy8gc3JjL2RlcHJlY2F0ZWQudHNcbnZhciBkaXNwbGF5ZWRXYXJuaW5ncyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7XG52YXIgZGVwcmVjYXRlZCA9IChmbk5hbWUsIHdhcm5pbmcsIGtleSkgPT4ge1xuICBjb25zdCBoaWRlV2FybmluZyA9IGlzVGVzdEVudmlyb25tZW50KCkgfHwgaXNQcm9kdWN0aW9uRW52aXJvbm1lbnQoKTtcbiAgY29uc3QgbWVzc2FnZUlkID0ga2V5ID8/IGZuTmFtZTtcbiAgaWYgKGRpc3BsYXllZFdhcm5pbmdzLmhhcyhtZXNzYWdlSWQpIHx8IGhpZGVXYXJuaW5nKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGRpc3BsYXllZFdhcm5pbmdzLmFkZChtZXNzYWdlSWQpO1xuICBjb25zb2xlLndhcm4oXG4gICAgYENsZXJrIC0gREVQUkVDQVRJT04gV0FSTklORzogXCIke2ZuTmFtZX1cIiBpcyBkZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgbWFqb3IgcmVsZWFzZS5cbiR7d2FybmluZ31gXG4gICk7XG59O1xudmFyIGRlcHJlY2F0ZWRQcm9wZXJ0eSA9IChjbHMsIHByb3BOYW1lLCB3YXJuaW5nLCBpc1N0YXRpYyA9IGZhbHNlKSA9PiB7XG4gIGNvbnN0IHRhcmdldCA9IGlzU3RhdGljID8gY2xzIDogY2xzLnByb3RvdHlwZTtcbiAgbGV0IHZhbHVlID0gdGFyZ2V0W3Byb3BOYW1lXTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcE5hbWUsIHtcbiAgICBnZXQoKSB7XG4gICAgICBkZXByZWNhdGVkKHByb3BOYW1lLCB3YXJuaW5nLCBgJHtjbHMubmFtZX06JHtwcm9wTmFtZX1gKTtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldCh2KSB7XG4gICAgICB2YWx1ZSA9IHY7XG4gICAgfVxuICB9KTtcbn07XG52YXIgZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5ID0gKG9iaiwgcHJvcE5hbWUsIHdhcm5pbmcsIGtleSkgPT4ge1xuICBsZXQgdmFsdWUgPSBvYmpbcHJvcE5hbWVdO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBwcm9wTmFtZSwge1xuICAgIGdldCgpIHtcbiAgICAgIGRlcHJlY2F0ZWQocHJvcE5hbWUsIHdhcm5pbmcsIGtleSk7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBzZXQodikge1xuICAgICAgdmFsdWUgPSB2O1xuICAgIH1cbiAgfSk7XG59O1xuXG5leHBvcnQge1xuICBpc0RldmVsb3BtZW50RW52aXJvbm1lbnQsXG4gIGlzVGVzdEVudmlyb25tZW50LFxuICBpc1Byb2R1Y3Rpb25FbnZpcm9ubWVudCxcbiAgZGVwcmVjYXRlZCxcbiAgZGVwcmVjYXRlZFByb3BlcnR5LFxuICBkZXByZWNhdGVkT2JqZWN0UHJvcGVydHlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1LSlZKNENGRi5tanMubWFwIl0sIm5hbWVzIjpbImlzRGV2ZWxvcG1lbnRFbnZpcm9ubWVudCIsInByb2Nlc3MiLCJlcnIiLCJpc1Rlc3RFbnZpcm9ubWVudCIsImlzUHJvZHVjdGlvbkVudmlyb25tZW50IiwiZGlzcGxheWVkV2FybmluZ3MiLCJTZXQiLCJkZXByZWNhdGVkIiwiZm5OYW1lIiwid2FybmluZyIsImtleSIsImhpZGVXYXJuaW5nIiwibWVzc2FnZUlkIiwiaGFzIiwiYWRkIiwiY29uc29sZSIsIndhcm4iLCJkZXByZWNhdGVkUHJvcGVydHkiLCJjbHMiLCJwcm9wTmFtZSIsImlzU3RhdGljIiwidGFyZ2V0IiwicHJvdG90eXBlIiwidmFsdWUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsIm5hbWUiLCJzZXQiLCJ2IiwiZGVwcmVjYXRlZE9iamVjdFByb3BlcnR5Iiwib2JqIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-KJVJ4CFF.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __export: () => (/* binding */ __export),\n/* harmony export */   __reExport: () => (/* binding */ __reExport)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n //# sourceMappingURL=chunk-NDCDZYN6.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstTkRDRFpZTjYubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBSUEsWUFBWUMsT0FBT0MsY0FBYztBQUNyQyxJQUFJQyxtQkFBbUJGLE9BQU9HLHdCQUF3QjtBQUN0RCxJQUFJQyxvQkFBb0JKLE9BQU9LLG1CQUFtQjtBQUNsRCxJQUFJQyxlQUFlTixPQUFPTyxTQUFTLENBQUNDLGNBQWM7QUFDbEQsSUFBSUMsV0FBVyxDQUFDQyxRQUFRQztJQUN0QixJQUFLLElBQUlDLFFBQVFELElBQ2ZaLFVBQVVXLFFBQVFFLE1BQU07UUFBRUMsS0FBS0YsR0FBRyxDQUFDQyxLQUFLO1FBQUVFLFlBQVk7SUFBSztBQUMvRDtBQUNBLElBQUlDLGNBQWMsQ0FBQ0MsSUFBSUMsTUFBTUMsUUFBUUM7SUFDbkMsSUFBSUYsUUFBUSxPQUFPQSxTQUFTLFlBQVksT0FBT0EsU0FBUyxZQUFZO1FBQ2xFLEtBQUssSUFBSUcsT0FBT2hCLGtCQUFrQmEsTUFDaEMsSUFBSSxDQUFDWCxhQUFhZSxJQUFJLENBQUNMLElBQUlJLFFBQVFBLFFBQVFGLFFBQ3pDbkIsVUFBVWlCLElBQUlJLEtBQUs7WUFBRVAsS0FBSyxJQUFNSSxJQUFJLENBQUNHLElBQUk7WUFBRU4sWUFBWSxDQUFFSyxDQUFBQSxPQUFPakIsaUJBQWlCZSxNQUFNRyxJQUFHLEtBQU1ELEtBQUtMLFVBQVU7UUFBQztJQUN0SDtJQUNBLE9BQU9FO0FBQ1Q7QUFDQSxJQUFJTSxhQUFhLENBQUNaLFFBQVFhLEtBQUtDLGVBQWtCVCxDQUFBQSxZQUFZTCxRQUFRYSxLQUFLLFlBQVlDLGdCQUFnQlQsWUFBWVMsY0FBY0QsS0FBSyxVQUFTO0FBSzVJLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLU5EQ0RaWU42Lm1qcz9kYzE4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19nZXRPd25Qcm9wRGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fZXhwb3J0ID0gKHRhcmdldCwgYWxsKSA9PiB7XG4gIGZvciAodmFyIG5hbWUgaW4gYWxsKVxuICAgIF9fZGVmUHJvcCh0YXJnZXQsIG5hbWUsIHsgZ2V0OiBhbGxbbmFtZV0sIGVudW1lcmFibGU6IHRydWUgfSk7XG59O1xudmFyIF9fY29weVByb3BzID0gKHRvLCBmcm9tLCBleGNlcHQsIGRlc2MpID0+IHtcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGZvciAobGV0IGtleSBvZiBfX2dldE93blByb3BOYW1lcyhmcm9tKSlcbiAgICAgIGlmICghX19oYXNPd25Qcm9wLmNhbGwodG8sIGtleSkgJiYga2V5ICE9PSBleGNlcHQpXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcbiAgfVxuICByZXR1cm4gdG87XG59O1xudmFyIF9fcmVFeHBvcnQgPSAodGFyZ2V0LCBtb2QsIHNlY29uZFRhcmdldCkgPT4gKF9fY29weVByb3BzKHRhcmdldCwgbW9kLCBcImRlZmF1bHRcIiksIHNlY29uZFRhcmdldCAmJiBfX2NvcHlQcm9wcyhzZWNvbmRUYXJnZXQsIG1vZCwgXCJkZWZhdWx0XCIpKTtcblxuZXhwb3J0IHtcbiAgX19leHBvcnQsXG4gIF9fcmVFeHBvcnRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1ORENEWllONi5tanMubWFwIl0sIm5hbWVzIjpbIl9fZGVmUHJvcCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiX19nZXRPd25Qcm9wRGVzYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9fZ2V0T3duUHJvcE5hbWVzIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsIl9faGFzT3duUHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiX19leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZ2V0IiwiZW51bWVyYWJsZSIsIl9fY29weVByb3BzIiwidG8iLCJmcm9tIiwiZXhjZXB0IiwiZGVzYyIsImtleSIsImNhbGwiLCJfX3JlRXhwb3J0IiwibW9kIiwic2Vjb25kVGFyZ2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: () => (/* binding */ isomorphicAtob)\n/* harmony export */ });\n// src/isomorphicAtob.ts\nvar isomorphicAtob = (data)=>{\n    if (typeof atob !== \"undefined\" && typeof atob === \"function\") {\n        return atob(data);\n    } else if (typeof global !== \"undefined\" && global.Buffer) {\n        return new global.Buffer(data, \"base64\").toString();\n    }\n    return data;\n};\n //# sourceMappingURL=chunk-TETGTEI2.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVEVUR1RFSTIubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSx3QkFBd0I7QUFDeEIsSUFBSUEsaUJBQWlCLENBQUNDO0lBQ3BCLElBQUksT0FBT0MsU0FBUyxlQUFlLE9BQU9BLFNBQVMsWUFBWTtRQUM3RCxPQUFPQSxLQUFLRDtJQUNkLE9BQU8sSUFBSSxPQUFPRSxXQUFXLGVBQWVBLE9BQU9DLE1BQU0sRUFBRTtRQUN6RCxPQUFPLElBQUlELE9BQU9DLE1BQU0sQ0FBQ0gsTUFBTSxVQUFVSSxRQUFRO0lBQ25EO0lBQ0EsT0FBT0o7QUFDVDtBQUlFLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2NodW5rLVRFVEdURUkyLm1qcz9hNmU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pc29tb3JwaGljQXRvYi50c1xudmFyIGlzb21vcnBoaWNBdG9iID0gKGRhdGEpID0+IHtcbiAgaWYgKHR5cGVvZiBhdG9iICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBhdG9iID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gYXRvYihkYXRhKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbC5CdWZmZXIpIHtcbiAgICByZXR1cm4gbmV3IGdsb2JhbC5CdWZmZXIoZGF0YSwgXCJiYXNlNjRcIikudG9TdHJpbmcoKTtcbiAgfVxuICByZXR1cm4gZGF0YTtcbn07XG5cbmV4cG9ydCB7XG4gIGlzb21vcnBoaWNBdG9iXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstVEVUR1RFSTIubWpzLm1hcCJdLCJuYW1lcyI6WyJpc29tb3JwaGljQXRvYiIsImRhdGEiLCJhdG9iIiwiZ2xvYmFsIiwiQnVmZmVyIiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: () => (/* binding */ handleValueOrFn)\n/* harmony export */ });\n// src/handleValueOrFn.ts\nfunction handleValueOrFn(value, url, defaultValue) {\n    if (typeof value === \"function\") {\n        return value(url);\n    }\n    if (typeof value !== \"undefined\") {\n        return value;\n    }\n    if (typeof defaultValue !== \"undefined\") {\n        return defaultValue;\n    }\n    return void 0;\n}\n //# sourceMappingURL=chunk-TRWMHODU.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVFJXTUhPRFUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSx5QkFBeUI7QUFDekIsU0FBU0EsZ0JBQWdCQyxLQUFLLEVBQUVDLEdBQUcsRUFBRUMsWUFBWTtJQUMvQyxJQUFJLE9BQU9GLFVBQVUsWUFBWTtRQUMvQixPQUFPQSxNQUFNQztJQUNmO0lBQ0EsSUFBSSxPQUFPRCxVQUFVLGFBQWE7UUFDaEMsT0FBT0E7SUFDVDtJQUNBLElBQUksT0FBT0UsaUJBQWlCLGFBQWE7UUFDdkMsT0FBT0E7SUFDVDtJQUNBLE9BQU8sS0FBSztBQUNkO0FBSUUsQ0FDRiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvY2h1bmstVFJXTUhPRFUubWpzPzcwZmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2hhbmRsZVZhbHVlT3JGbi50c1xuZnVuY3Rpb24gaGFuZGxlVmFsdWVPckZuKHZhbHVlLCB1cmwsIGRlZmF1bHRWYWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXR1cm4gdmFsdWUodXJsKTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmICh0eXBlb2YgZGVmYXVsdFZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuXG5leHBvcnQge1xuICBoYW5kbGVWYWx1ZU9yRm5cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1UUldNSE9EVS5tanMubWFwIl0sIm5hbWVzIjpbImhhbmRsZVZhbHVlT3JGbiIsInZhbHVlIiwidXJsIiwiZGVmYXVsdFZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/deprecated.mjs":
/*!************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/deprecated.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deprecated: () => (/* reexport safe */ _chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecated),\n/* harmony export */   deprecatedObjectProperty: () => (/* reexport safe */ _chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecatedObjectProperty),\n/* harmony export */   deprecatedProperty: () => (/* reexport safe */ _chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__.deprecatedProperty)\n/* harmony export */ });\n/* harmony import */ var _chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-KJVJ4CFF.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-KJVJ4CFF.mjs\");\n/* harmony import */ var _chunk_NDCDZYN6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-NDCDZYN6.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\");\n\n\n //# sourceMappingURL=deprecated.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZGVwcmVjYXRlZC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFJOEI7QUFDQTtBQUs1QixDQUNGLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9kZXByZWNhdGVkLm1qcz84MDRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGRlcHJlY2F0ZWQsXG4gIGRlcHJlY2F0ZWRPYmplY3RQcm9wZXJ0eSxcbiAgZGVwcmVjYXRlZFByb3BlcnR5XG59IGZyb20gXCIuL2NodW5rLUtKVko0Q0ZGLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1ORENEWllONi5tanNcIjtcbmV4cG9ydCB7XG4gIGRlcHJlY2F0ZWQsXG4gIGRlcHJlY2F0ZWRPYmplY3RQcm9wZXJ0eSxcbiAgZGVwcmVjYXRlZFByb3BlcnR5XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVwcmVjYXRlZC5tanMubWFwIl0sIm5hbWVzIjpbImRlcHJlY2F0ZWQiLCJkZXByZWNhdGVkT2JqZWN0UHJvcGVydHkiLCJkZXByZWNhdGVkUHJvcGVydHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/deprecated.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/devBrowser.mjs":
/*!************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/devBrowser.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEV_BROWSER_JWT_MARKER: () => (/* reexport safe */ _chunk_3S7ZLCXD_mjs__WEBPACK_IMPORTED_MODULE_0__.DEV_BROWSER_JWT_MARKER),\n/* harmony export */   DEV_BROWSER_SSO_JWT_PARAMETER: () => (/* reexport safe */ _chunk_3S7ZLCXD_mjs__WEBPACK_IMPORTED_MODULE_0__.DEV_BROWSER_SSO_JWT_PARAMETER),\n/* harmony export */   extractDevBrowserJWTFromURLHash: () => (/* reexport safe */ _chunk_3S7ZLCXD_mjs__WEBPACK_IMPORTED_MODULE_0__.extractDevBrowserJWTFromURLHash),\n/* harmony export */   extractDevBrowserJWTFromURLSearchParams: () => (/* reexport safe */ _chunk_3S7ZLCXD_mjs__WEBPACK_IMPORTED_MODULE_0__.extractDevBrowserJWTFromURLSearchParams),\n/* harmony export */   setDevBrowserJWTInURL: () => (/* reexport safe */ _chunk_3S7ZLCXD_mjs__WEBPACK_IMPORTED_MODULE_0__.setDevBrowserJWTInURL)\n/* harmony export */ });\n/* harmony import */ var _chunk_3S7ZLCXD_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-3S7ZLCXD.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-3S7ZLCXD.mjs\");\n/* harmony import */ var _chunk_NDCDZYN6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-NDCDZYN6.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\");\n\n\n //# sourceMappingURL=devBrowser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZGV2QnJvd3Nlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQU04QjtBQUNBO0FBTzVCLENBQ0YsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2RldkJyb3dzZXIubWpzPzdkNDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgREVWX0JST1dTRVJfSldUX01BUktFUixcbiAgREVWX0JST1dTRVJfU1NPX0pXVF9QQVJBTUVURVIsXG4gIGV4dHJhY3REZXZCcm93c2VySldURnJvbVVSTEhhc2gsXG4gIGV4dHJhY3REZXZCcm93c2VySldURnJvbVVSTFNlYXJjaFBhcmFtcyxcbiAgc2V0RGV2QnJvd3NlckpXVEluVVJMXG59IGZyb20gXCIuL2NodW5rLTNTN1pMQ1hELm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1ORENEWllONi5tanNcIjtcbmV4cG9ydCB7XG4gIERFVl9CUk9XU0VSX0pXVF9NQVJLRVIsXG4gIERFVl9CUk9XU0VSX1NTT19KV1RfUEFSQU1FVEVSLFxuICBleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkxIYXNoLFxuICBleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkxTZWFyY2hQYXJhbXMsXG4gIHNldERldkJyb3dzZXJKV1RJblVSTFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldkJyb3dzZXIubWpzLm1hcCJdLCJuYW1lcyI6WyJERVZfQlJPV1NFUl9KV1RfTUFSS0VSIiwiREVWX0JST1dTRVJfU1NPX0pXVF9QQVJBTUVURVIiLCJleHRyYWN0RGV2QnJvd3NlckpXVEZyb21VUkxIYXNoIiwiZXh0cmFjdERldkJyb3dzZXJKV1RGcm9tVVJMU2VhcmNoUGFyYW1zIiwic2V0RGV2QnJvd3NlckpXVEluVVJMIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/devBrowser.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/error.mjs":
/*!*******************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/error.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClerkAPIResponseError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkAPIResponseError),\n/* harmony export */   ClerkRuntimeError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.ClerkRuntimeError),\n/* harmony export */   EmailLinkError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkError),\n/* harmony export */   EmailLinkErrorCode: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.EmailLinkErrorCode),\n/* harmony export */   MagicLinkError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.MagicLinkError),\n/* harmony export */   MagicLinkErrorCode: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.MagicLinkErrorCode),\n/* harmony export */   buildErrorThrower: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.buildErrorThrower),\n/* harmony export */   is4xxError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.is4xxError),\n/* harmony export */   isClerkAPIResponseError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkAPIResponseError),\n/* harmony export */   isClerkRuntimeError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.isClerkRuntimeError),\n/* harmony export */   isEmailLinkError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.isEmailLinkError),\n/* harmony export */   isKnownError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.isKnownError),\n/* harmony export */   isMagicLinkError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.isMagicLinkError),\n/* harmony export */   isMetamaskError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.isMetamaskError),\n/* harmony export */   isNetworkError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.isNetworkError),\n/* harmony export */   isUnauthorizedError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.isUnauthorizedError),\n/* harmony export */   isUserLockedError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.isUserLockedError),\n/* harmony export */   parseError: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.parseError),\n/* harmony export */   parseErrors: () => (/* reexport safe */ _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__.parseErrors)\n/* harmony export */ });\n/* harmony import */ var _chunk_5DRMPUGE_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-5DRMPUGE.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-5DRMPUGE.mjs\");\n/* harmony import */ var _chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-KJVJ4CFF.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-KJVJ4CFF.mjs\");\n/* harmony import */ var _chunk_NDCDZYN6_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-NDCDZYN6.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\");\n\n\n\n //# sourceMappingURL=error.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQjhCO0FBQ0E7QUFDQTtBQXFCNUIsQ0FDRixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvZXJyb3IubWpzPzc2YzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBDbGVya1J1bnRpbWVFcnJvcixcbiAgRW1haWxMaW5rRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yQ29kZSxcbiAgTWFnaWNMaW5rRXJyb3IsXG4gIE1hZ2ljTGlua0Vycm9yQ29kZSxcbiAgYnVpbGRFcnJvclRocm93ZXIsXG4gIGlzNHh4RXJyb3IsXG4gIGlzQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBpc0NsZXJrUnVudGltZUVycm9yLFxuICBpc0VtYWlsTGlua0Vycm9yLFxuICBpc0tub3duRXJyb3IsXG4gIGlzTWFnaWNMaW5rRXJyb3IsXG4gIGlzTWV0YW1hc2tFcnJvcixcbiAgaXNOZXR3b3JrRXJyb3IsXG4gIGlzVW5hdXRob3JpemVkRXJyb3IsXG4gIGlzVXNlckxvY2tlZEVycm9yLFxuICBwYXJzZUVycm9yLFxuICBwYXJzZUVycm9yc1xufSBmcm9tIFwiLi9jaHVuay01RFJNUFVHRS5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstS0pWSjRDRkYubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLU5EQ0RaWU42Lm1qc1wiO1xuZXhwb3J0IHtcbiAgQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBDbGVya1J1bnRpbWVFcnJvcixcbiAgRW1haWxMaW5rRXJyb3IsXG4gIEVtYWlsTGlua0Vycm9yQ29kZSxcbiAgTWFnaWNMaW5rRXJyb3IsXG4gIE1hZ2ljTGlua0Vycm9yQ29kZSxcbiAgYnVpbGRFcnJvclRocm93ZXIsXG4gIGlzNHh4RXJyb3IsXG4gIGlzQ2xlcmtBUElSZXNwb25zZUVycm9yLFxuICBpc0NsZXJrUnVudGltZUVycm9yLFxuICBpc0VtYWlsTGlua0Vycm9yLFxuICBpc0tub3duRXJyb3IsXG4gIGlzTWFnaWNMaW5rRXJyb3IsXG4gIGlzTWV0YW1hc2tFcnJvcixcbiAgaXNOZXR3b3JrRXJyb3IsXG4gIGlzVW5hdXRob3JpemVkRXJyb3IsXG4gIGlzVXNlckxvY2tlZEVycm9yLFxuICBwYXJzZUVycm9yLFxuICBwYXJzZUVycm9yc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLm1qcy5tYXAiXSwibmFtZXMiOlsiQ2xlcmtBUElSZXNwb25zZUVycm9yIiwiQ2xlcmtSdW50aW1lRXJyb3IiLCJFbWFpbExpbmtFcnJvciIsIkVtYWlsTGlua0Vycm9yQ29kZSIsIk1hZ2ljTGlua0Vycm9yIiwiTWFnaWNMaW5rRXJyb3JDb2RlIiwiYnVpbGRFcnJvclRocm93ZXIiLCJpczR4eEVycm9yIiwiaXNDbGVya0FQSVJlc3BvbnNlRXJyb3IiLCJpc0NsZXJrUnVudGltZUVycm9yIiwiaXNFbWFpbExpbmtFcnJvciIsImlzS25vd25FcnJvciIsImlzTWFnaWNMaW5rRXJyb3IiLCJpc01ldGFtYXNrRXJyb3IiLCJpc05ldHdvcmtFcnJvciIsImlzVW5hdXRob3JpemVkRXJyb3IiLCJpc1VzZXJMb2NrZWRFcnJvciIsInBhcnNlRXJyb3IiLCJwYXJzZUVycm9ycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/error.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/handleValueOrFn.mjs":
/*!*****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/handleValueOrFn.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleValueOrFn: () => (/* reexport safe */ _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_0__.handleValueOrFn)\n/* harmony export */ });\n/* harmony import */ var _chunk_TRWMHODU_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TRWMHODU.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-TRWMHODU.mjs\");\n/* harmony import */ var _chunk_NDCDZYN6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-NDCDZYN6.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\");\n\n\n //# sourceMappingURL=handleValueOrFn.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvaGFuZGxlVmFsdWVPckZuLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFOEI7QUFDQTtBQUc1QixDQUNGLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9oYW5kbGVWYWx1ZU9yRm4ubWpzPzA2MjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgaGFuZGxlVmFsdWVPckZuXG59IGZyb20gXCIuL2NodW5rLVRSV01IT0RVLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1ORENEWllONi5tanNcIjtcbmV4cG9ydCB7XG4gIGhhbmRsZVZhbHVlT3JGblxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhbmRsZVZhbHVlT3JGbi5tanMubWFwIl0sIm5hbWVzIjpbImhhbmRsZVZhbHVlT3JGbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/handleValueOrFn.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/isomorphicAtob.mjs":
/*!****************************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/isomorphicAtob.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isomorphicAtob: () => (/* reexport safe */ _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__.isomorphicAtob)\n/* harmony export */ });\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_NDCDZYN6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-NDCDZYN6.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\");\n\n\n //# sourceMappingURL=isomorphicAtob.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvaXNvbW9ycGhpY0F0b2IubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUU4QjtBQUNBO0FBRzVCLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uLi8uLi9ub2RlX21vZHVsZXMvQGNsZXJrL3NoYXJlZC9kaXN0L2lzb21vcnBoaWNBdG9iLm1qcz80MzE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGlzb21vcnBoaWNBdG9iXG59IGZyb20gXCIuL2NodW5rLVRFVEdURUkyLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1ORENEWllONi5tanNcIjtcbmV4cG9ydCB7XG4gIGlzb21vcnBoaWNBdG9iXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNvbW9ycGhpY0F0b2IubWpzLm1hcCJdLCJuYW1lcyI6WyJpc29tb3JwaGljQXRvYiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/isomorphicAtob.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/keys.mjs":
/*!******************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/keys.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPublishableKey: () => (/* reexport safe */ _chunk_IAZRYRAH_mjs__WEBPACK_IMPORTED_MODULE_0__.buildPublishableKey),\n/* harmony export */   createDevOrStagingUrlCache: () => (/* reexport safe */ _chunk_IAZRYRAH_mjs__WEBPACK_IMPORTED_MODULE_0__.createDevOrStagingUrlCache),\n/* harmony export */   isDevelopmentFromApiKey: () => (/* reexport safe */ _chunk_IAZRYRAH_mjs__WEBPACK_IMPORTED_MODULE_0__.isDevelopmentFromApiKey),\n/* harmony export */   isLegacyFrontendApiKey: () => (/* reexport safe */ _chunk_IAZRYRAH_mjs__WEBPACK_IMPORTED_MODULE_0__.isLegacyFrontendApiKey),\n/* harmony export */   isProductionFromApiKey: () => (/* reexport safe */ _chunk_IAZRYRAH_mjs__WEBPACK_IMPORTED_MODULE_0__.isProductionFromApiKey),\n/* harmony export */   isPublishableKey: () => (/* reexport safe */ _chunk_IAZRYRAH_mjs__WEBPACK_IMPORTED_MODULE_0__.isPublishableKey),\n/* harmony export */   parsePublishableKey: () => (/* reexport safe */ _chunk_IAZRYRAH_mjs__WEBPACK_IMPORTED_MODULE_0__.parsePublishableKey)\n/* harmony export */ });\n/* harmony import */ var _chunk_IAZRYRAH_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-IAZRYRAH.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-IAZRYRAH.mjs\");\n/* harmony import */ var _chunk_TETGTEI2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-TETGTEI2.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-TETGTEI2.mjs\");\n/* harmony import */ var _chunk_NDCDZYN6_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-NDCDZYN6.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\");\n\n\n\n //# sourceMappingURL=keys.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qva2V5cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQVE4QjtBQUNBO0FBQ0E7QUFTNUIsQ0FDRixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3Qva2V5cy5tanM/NDVkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBidWlsZFB1Ymxpc2hhYmxlS2V5LFxuICBjcmVhdGVEZXZPclN0YWdpbmdVcmxDYWNoZSxcbiAgaXNEZXZlbG9wbWVudEZyb21BcGlLZXksXG4gIGlzTGVnYWN5RnJvbnRlbmRBcGlLZXksXG4gIGlzUHJvZHVjdGlvbkZyb21BcGlLZXksXG4gIGlzUHVibGlzaGFibGVLZXksXG4gIHBhcnNlUHVibGlzaGFibGVLZXlcbn0gZnJvbSBcIi4vY2h1bmstSUFaUllSQUgubWpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLVRFVEdURUkyLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1ORENEWllONi5tanNcIjtcbmV4cG9ydCB7XG4gIGJ1aWxkUHVibGlzaGFibGVLZXksXG4gIGNyZWF0ZURldk9yU3RhZ2luZ1VybENhY2hlLFxuICBpc0RldmVsb3BtZW50RnJvbUFwaUtleSxcbiAgaXNMZWdhY3lGcm9udGVuZEFwaUtleSxcbiAgaXNQcm9kdWN0aW9uRnJvbUFwaUtleSxcbiAgaXNQdWJsaXNoYWJsZUtleSxcbiAgcGFyc2VQdWJsaXNoYWJsZUtleVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleXMubWpzLm1hcCJdLCJuYW1lcyI6WyJidWlsZFB1Ymxpc2hhYmxlS2V5IiwiY3JlYXRlRGV2T3JTdGFnaW5nVXJsQ2FjaGUiLCJpc0RldmVsb3BtZW50RnJvbUFwaUtleSIsImlzTGVnYWN5RnJvbnRlbmRBcGlLZXkiLCJpc1Byb2R1Y3Rpb25Gcm9tQXBpS2V5IiwiaXNQdWJsaXNoYWJsZUtleSIsInBhcnNlUHVibGlzaGFibGVLZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/keys.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/proxy.mjs":
/*!*******************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/proxy.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRequestUrl: () => (/* reexport safe */ _chunk_GVKVD773_mjs__WEBPACK_IMPORTED_MODULE_0__.getRequestUrl),\n/* harmony export */   isHttpOrHttps: () => (/* reexport safe */ _chunk_GVKVD773_mjs__WEBPACK_IMPORTED_MODULE_0__.isHttpOrHttps),\n/* harmony export */   isProxyUrlRelative: () => (/* reexport safe */ _chunk_GVKVD773_mjs__WEBPACK_IMPORTED_MODULE_0__.isProxyUrlRelative),\n/* harmony export */   isValidProxyUrl: () => (/* reexport safe */ _chunk_GVKVD773_mjs__WEBPACK_IMPORTED_MODULE_0__.isValidProxyUrl),\n/* harmony export */   proxyUrlToAbsoluteURL: () => (/* reexport safe */ _chunk_GVKVD773_mjs__WEBPACK_IMPORTED_MODULE_0__.proxyUrlToAbsoluteURL)\n/* harmony export */ });\n/* harmony import */ var _chunk_GVKVD773_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-GVKVD773.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-GVKVD773.mjs\");\n/* harmony import */ var _chunk_KJVJ4CFF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-KJVJ4CFF.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-KJVJ4CFF.mjs\");\n/* harmony import */ var _chunk_NDCDZYN6_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-NDCDZYN6.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\");\n\n\n\n //# sourceMappingURL=proxy.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvcHJveHkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBTThCO0FBQ0E7QUFDQTtBQU81QixDQUNGLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi4vLi4vbm9kZV9tb2R1bGVzL0BjbGVyay9zaGFyZWQvZGlzdC9wcm94eS5tanM/MmEzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBnZXRSZXF1ZXN0VXJsLFxuICBpc0h0dHBPckh0dHBzLFxuICBpc1Byb3h5VXJsUmVsYXRpdmUsXG4gIGlzVmFsaWRQcm94eVVybCxcbiAgcHJveHlVcmxUb0Fic29sdXRlVVJMXG59IGZyb20gXCIuL2NodW5rLUdWS1ZENzczLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1LSlZKNENGRi5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstTkRDRFpZTjYubWpzXCI7XG5leHBvcnQge1xuICBnZXRSZXF1ZXN0VXJsLFxuICBpc0h0dHBPckh0dHBzLFxuICBpc1Byb3h5VXJsUmVsYXRpdmUsXG4gIGlzVmFsaWRQcm94eVVybCxcbiAgcHJveHlVcmxUb0Fic29sdXRlVVJMXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJveHkubWpzLm1hcCJdLCJuYW1lcyI6WyJnZXRSZXF1ZXN0VXJsIiwiaXNIdHRwT3JIdHRwcyIsImlzUHJveHlVcmxSZWxhdGl2ZSIsImlzVmFsaWRQcm94eVVybCIsInByb3h5VXJsVG9BYnNvbHV0ZVVSTCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/proxy.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/@clerk/shared/dist/url.mjs":
/*!*****************************************************!*\
  !*** ../../node_modules/@clerk/shared/dist/url.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClerkPrefix: () => (/* reexport safe */ _chunk_5E5NNJ3O_mjs__WEBPACK_IMPORTED_MODULE_0__.addClerkPrefix),\n/* harmony export */   getClerkJsMajorVersionOrTag: () => (/* reexport safe */ _chunk_5E5NNJ3O_mjs__WEBPACK_IMPORTED_MODULE_0__.getClerkJsMajorVersionOrTag),\n/* harmony export */   getScriptUrl: () => (/* reexport safe */ _chunk_5E5NNJ3O_mjs__WEBPACK_IMPORTED_MODULE_0__.getScriptUrl),\n/* harmony export */   parseSearchParams: () => (/* reexport safe */ _chunk_5E5NNJ3O_mjs__WEBPACK_IMPORTED_MODULE_0__.parseSearchParams),\n/* harmony export */   stripScheme: () => (/* reexport safe */ _chunk_5E5NNJ3O_mjs__WEBPACK_IMPORTED_MODULE_0__.stripScheme)\n/* harmony export */ });\n/* harmony import */ var _chunk_5E5NNJ3O_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-5E5NNJ3O.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-5E5NNJ3O.mjs\");\n/* harmony import */ var _chunk_NDCDZYN6_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-NDCDZYN6.mjs */ \"(middleware)/../../node_modules/@clerk/shared/dist/chunk-NDCDZYN6.mjs\");\n\n\n //# sourceMappingURL=url.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXJsLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBTThCO0FBQ0E7QUFPNUIsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uL25vZGVfbW9kdWxlcy9AY2xlcmsvc2hhcmVkL2Rpc3QvdXJsLm1qcz9iNjNiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFkZENsZXJrUHJlZml4LFxuICBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcsXG4gIGdldFNjcmlwdFVybCxcbiAgcGFyc2VTZWFyY2hQYXJhbXMsXG4gIHN0cmlwU2NoZW1lXG59IGZyb20gXCIuL2NodW5rLTVFNU5OSjNPLm1qc1wiO1xuaW1wb3J0IFwiLi9jaHVuay1ORENEWllONi5tanNcIjtcbmV4cG9ydCB7XG4gIGFkZENsZXJrUHJlZml4LFxuICBnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWcsXG4gIGdldFNjcmlwdFVybCxcbiAgcGFyc2VTZWFyY2hQYXJhbXMsXG4gIHN0cmlwU2NoZW1lXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLm1qcy5tYXAiXSwibmFtZXMiOlsiYWRkQ2xlcmtQcmVmaXgiLCJnZXRDbGVya0pzTWFqb3JWZXJzaW9uT3JUYWciLCJnZXRTY3JpcHRVcmwiLCJwYXJzZVNlYXJjaFBhcmFtcyIsInN0cmlwU2NoZW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/@clerk/shared/dist/url.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/dot-case/node_modules/tslib/tslib.es6.mjs":
/*!********************************************************************!*\
  !*** ../../node_modules/dot-case/node_modules/tslib/tslib.es6.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),\n/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __propKey: () => (/* binding */ __propKey),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),\n/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n}\n;\nfunction __runInitializers(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++){\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n}\n;\nfunction __propKey(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n}\n;\nfunction __setFunctionName(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n}\n;\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar __createBinding = Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n};\nfunction __exportStar(m, o) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\n/** @deprecated */ function __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\n/** @deprecated */ function __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nvar __setModuleDefault = Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n};\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldIn(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\nfunction __addDisposableResource(env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        env.stack.push({\n            value: value,\n            dispose: dispose,\n            async: async\n        });\n    } else if (async) {\n        env.stack.push({\n            async: true\n        });\n    }\n    return value;\n}\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction __disposeResources(env) {\n    function fail(e) {\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n        env.hasError = true;\n    }\n    function next() {\n        while(env.stack.length){\n            var rec = env.stack.pop();\n            try {\n                var result = rec.dispose && rec.dispose.call(rec.value);\n                if (rec.async) return Promise.resolve(result).then(next, function(e) {\n                    fail(e);\n                    return next();\n                });\n            } catch (e) {\n                fail(e);\n            }\n        }\n        if (env.hasError) throw env.error;\n    }\n    return next();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    __extends,\n    __assign,\n    __rest,\n    __decorate,\n    __param,\n    __metadata,\n    __awaiter,\n    __generator,\n    __createBinding,\n    __exportStar,\n    __values,\n    __read,\n    __spread,\n    __spreadArrays,\n    __spreadArray,\n    __await,\n    __asyncGenerator,\n    __asyncDelegator,\n    __asyncValues,\n    __makeTemplateObject,\n    __importStar,\n    __importDefault,\n    __classPrivateFieldGet,\n    __classPrivateFieldSet,\n    __classPrivateFieldIn,\n    __addDisposableResource,\n    __disposeResources\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/dot-case/node_modules/tslib/tslib.es6.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/snake-case/node_modules/tslib/tslib.es6.mjs":
/*!**********************************************************************!*\
  !*** ../../node_modules/snake-case/node_modules/tslib/tslib.es6.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),\n/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __propKey: () => (/* binding */ __propKey),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),\n/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n}\n;\nfunction __runInitializers(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++){\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n}\n;\nfunction __propKey(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n}\n;\nfunction __setFunctionName(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n}\n;\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar __createBinding = Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n};\nfunction __exportStar(m, o) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\n/** @deprecated */ function __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\n/** @deprecated */ function __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nvar __setModuleDefault = Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n};\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldIn(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\nfunction __addDisposableResource(env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        env.stack.push({\n            value: value,\n            dispose: dispose,\n            async: async\n        });\n    } else if (async) {\n        env.stack.push({\n            async: true\n        });\n    }\n    return value;\n}\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction __disposeResources(env) {\n    function fail(e) {\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n        env.hasError = true;\n    }\n    function next() {\n        while(env.stack.length){\n            var rec = env.stack.pop();\n            try {\n                var result = rec.dispose && rec.dispose.call(rec.value);\n                if (rec.async) return Promise.resolve(result).then(next, function(e) {\n                    fail(e);\n                    return next();\n                });\n            } catch (e) {\n                fail(e);\n            }\n        }\n        if (env.hasError) throw env.error;\n    }\n    return next();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    __extends,\n    __assign,\n    __rest,\n    __decorate,\n    __param,\n    __metadata,\n    __awaiter,\n    __generator,\n    __createBinding,\n    __exportStar,\n    __values,\n    __read,\n    __spread,\n    __spreadArrays,\n    __spreadArray,\n    __await,\n    __asyncGenerator,\n    __asyncDelegator,\n    __asyncValues,\n    __makeTemplateObject,\n    __importStar,\n    __importDefault,\n    __classPrivateFieldGet,\n    __classPrivateFieldSet,\n    __classPrivateFieldIn,\n    __addDisposableResource,\n    __disposeResources\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/../../node_modules/snake-case/node_modules/tslib/tslib.es6.mjs\n");

/***/ }),

/***/ "(middleware)/../../node_modules/next/package.json":
/*!********************************************!*\
  !*** ../../node_modules/next/package.json ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"next","version":"13.5.6","description":"The React Framework","main":"./dist/server/next.js","license":"MIT","repository":"vercel/next.js","bugs":"https://github.com/vercel/next.js/issues","homepage":"https://nextjs.org","types":"index.d.ts","files":["dist","app.js","app.d.ts","babel.js","babel.d.ts","client.js","client.d.ts","compat","cache.js","cache.d.ts","config.js","config.d.ts","constants.js","constants.d.ts","document.js","document.d.ts","dynamic.js","dynamic.d.ts","error.js","error.d.ts","future","legacy","script.js","script.d.ts","server.js","server.d.ts","head.js","head.d.ts","image.js","image.d.ts","link.js","link.d.ts","router.js","router.d.ts","jest.js","jest.d.ts","amp.js","amp.d.ts","index.d.ts","types/index.d.ts","types/global.d.ts","types/compiled.d.ts","image-types/global.d.ts","navigation-types/navigation.d.ts","navigation-types/compat/navigation.d.ts","font","navigation.js","navigation.d.ts","headers.js","headers.d.ts","navigation-types","web-vitals.js","web-vitals.d.ts","experimental/testmode/playwright.js","experimental/testmode/playwright.d.ts","experimental/testmode/playwright/msw.js","experimental/testmode/playwright/msw.d.ts","experimental/testmode/proxy.js","experimental/testmode/proxy.d.ts"],"bin":{"next":"./dist/bin/next"},"scripts":{"dev":"taskr","release":"taskr release","build":"pnpm release","prepublishOnly":"cd ../../ && turbo run build","types":"tsc --declaration --emitDeclarationOnly --stripInternal --declarationDir dist","typescript":"tsec --noEmit","ncc-compiled":"ncc cache clean && taskr ncc"},"taskr":{"requires":["./taskfile-webpack.js","./taskfile-ncc.js","./taskfile-swc.js","./taskfile-watch.js"]},"dependencies":{"@next/env":"13.5.6","@swc/helpers":"0.5.2","busboy":"1.6.0","caniuse-lite":"^1.0.30001406","postcss":"8.4.31","styled-jsx":"5.1.1","watchpack":"2.4.0"},"peerDependencies":{"@opentelemetry/api":"^1.1.0","react":"^18.2.0","react-dom":"^18.2.0","sass":"^1.3.0"},"peerDependenciesMeta":{"sass":{"optional":true},"@opentelemetry/api":{"optional":true}},"devDependencies":{"@ampproject/toolbox-optimizer":"2.8.3","@babel/code-frame":"7.12.11","@babel/core":"7.18.0","@babel/eslint-parser":"7.18.2","@babel/generator":"7.18.0","@babel/plugin-proposal-class-properties":"7.14.5","@babel/plugin-proposal-export-namespace-from":"7.14.5","@babel/plugin-proposal-numeric-separator":"7.14.5","@babel/plugin-proposal-object-rest-spread":"7.14.7","@babel/plugin-syntax-bigint":"7.8.3","@babel/plugin-syntax-dynamic-import":"7.8.3","@babel/plugin-syntax-import-assertions":"7.16.7","@babel/plugin-syntax-jsx":"7.14.5","@babel/plugin-transform-modules-commonjs":"7.18.0","@babel/plugin-transform-runtime":"7.18.0","@babel/preset-env":"7.18.0","@babel/preset-react":"7.14.5","@babel/preset-typescript":"7.17.12","@babel/runtime":"7.15.4","@babel/traverse":"7.18.0","@babel/types":"7.18.0","@capsizecss/metrics":"1.1.0","@edge-runtime/cookies":"4.0.2","@edge-runtime/ponyfill":"2.4.1","@edge-runtime/primitives":"4.0.2","@hapi/accept":"5.0.2","@jest/transform":"29.5.0","@jest/types":"29.5.0","@mswjs/interceptors":"0.23.0","@napi-rs/cli":"2.16.2","@napi-rs/triples":"1.1.0","@next/polyfill-module":"13.5.6","@next/polyfill-nomodule":"13.5.6","@next/react-dev-overlay":"13.5.6","@next/react-refresh-utils":"13.5.6","@next/swc":"13.5.6","@opentelemetry/api":"1.4.1","@playwright/test":"^1.35.1","@taskr/clear":"1.1.0","@taskr/esnext":"1.1.0","@types/amphtml-validator":"1.0.0","@types/babel__code-frame":"7.0.2","@types/babel__core":"7.1.12","@types/babel__generator":"7.6.2","@types/babel__template":"7.4.0","@types/babel__traverse":"7.11.0","@types/bytes":"3.1.1","@types/ci-info":"2.0.0","@types/compression":"0.0.36","@types/content-disposition":"0.5.4","@types/content-type":"1.1.3","@types/cookie":"0.3.3","@types/cross-spawn":"6.0.0","@types/debug":"4.1.5","@types/express-serve-static-core":"4.17.33","@types/fresh":"0.5.0","@types/glob":"7.1.1","@types/jsonwebtoken":"9.0.0","@types/lodash":"4.14.198","@types/lodash.curry":"4.1.6","@types/lru-cache":"5.1.0","@types/micromatch":"4.0.2","@types/path-to-regexp":"1.7.0","@types/platform":"1.3.4","@types/react":"18.2.5","@types/react-dom":"18.2.3","@types/react-is":"17.0.3","@types/semver":"7.3.1","@types/send":"0.14.4","@types/shell-quote":"1.7.1","@types/tar":"6.1.5","@types/text-table":"0.2.1","@types/ua-parser-js":"0.7.36","@types/uuid":"8.3.1","@types/webpack-sources1":"npm:@types/webpack-sources@0.1.5","@types/ws":"8.2.0","@vercel/ncc":"0.34.0","@vercel/nft":"0.22.6","@vercel/turbopack-ecmascript-runtime":"https://gitpkg-fork.vercel.sh/vercel/turbo/crates/turbopack-ecmascript-runtime/js?turbopack-231013.3","acorn":"8.5.0","amphtml-validator":"1.0.35","anser":"1.4.9","arg":"4.1.0","assert":"2.0.0","async-retry":"1.2.3","async-sema":"3.0.0","babel-plugin-transform-define":"2.0.0","babel-plugin-transform-react-remove-prop-types":"0.4.24","browserify-zlib":"0.2.0","browserslist":"4.20.2","buffer":"5.6.0","bytes":"3.1.1","ci-info":"watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540","cli-select":"1.1.2","client-only":"0.0.1","comment-json":"3.0.3","compression":"1.7.4","conf":"5.0.0","constants-browserify":"1.0.0","content-disposition":"0.5.3","content-type":"1.0.4","cookie":"0.4.1","cross-spawn":"7.0.3","crypto-browserify":"3.12.0","css.escape":"1.5.1","cssnano-preset-default":"5.2.14","data-uri-to-buffer":"3.0.1","debug":"4.1.1","devalue":"2.0.1","domain-browser":"4.19.0","edge-runtime":"2.5.4","events":"3.3.0","find-cache-dir":"3.3.1","find-up":"4.1.0","fresh":"0.5.2","get-orientation":"1.1.2","glob":"7.1.7","gzip-size":"5.1.1","http-proxy":"1.18.1","http-proxy-agent":"5.0.0","https-browserify":"1.0.0","https-proxy-agent":"5.0.1","icss-utils":"5.1.0","ignore-loader":"0.1.2","image-size":"1.0.0","is-docker":"2.0.0","is-wsl":"2.2.0","jest-worker":"27.5.1","json5":"2.2.3","jsonwebtoken":"9.0.0","loader-runner":"4.3.0","loader-utils2":"npm:loader-utils@2.0.0","loader-utils3":"npm:loader-utils@3.1.3","lodash.curry":"4.1.1","lru-cache":"5.1.1","micromatch":"4.0.4","mini-css-extract-plugin":"2.4.3","msw":"1.3.0","nanoid":"3.1.32","native-url":"0.3.4","neo-async":"2.6.1","node-html-parser":"5.3.3","ora":"4.0.4","os-browserify":"0.3.0","p-limit":"3.1.0","path-browserify":"1.0.1","path-to-regexp":"6.1.0","platform":"1.3.6","postcss-flexbugs-fixes":"5.0.2","postcss-modules-extract-imports":"3.0.0","postcss-modules-local-by-default":"4.0.0","postcss-modules-scope":"3.0.0","postcss-modules-values":"4.0.0","postcss-preset-env":"7.4.3","postcss-safe-parser":"6.0.0","postcss-scss":"4.0.3","postcss-value-parser":"4.2.0","process":"0.11.10","punycode":"2.1.1","querystring-es3":"0.2.1","raw-body":"2.4.1","react-is":"18.2.0","react-refresh":"0.12.0","regenerator-runtime":"0.13.4","sass-loader":"12.4.0","schema-utils2":"npm:schema-utils@2.7.1","schema-utils3":"npm:schema-utils@3.0.0","semver":"7.3.2","send":"0.17.1","server-only":"0.0.1","setimmediate":"1.0.5","shell-quote":"1.7.3","source-map":"0.6.1","stacktrace-parser":"0.1.10","stream-browserify":"3.0.0","stream-http":"3.1.1","strict-event-emitter":"0.5.0","string-hash":"1.1.3","string_decoder":"1.3.0","strip-ansi":"6.0.0","superstruct":"1.0.3","tar":"6.1.15","taskr":"1.1.0","terser":"5.14.1","terser-webpack-plugin":"5.3.9","text-table":"0.2.0","timers-browserify":"2.0.12","tty-browserify":"0.0.1","ua-parser-js":"1.0.35","undici":"5.26.3","unistore":"3.4.1","util":"0.12.4","uuid":"8.3.2","vm-browserify":"1.1.2","watchpack":"2.4.0","web-vitals":"3.0.0","webpack":"5.86.0","webpack-sources1":"npm:webpack-sources@1.4.3","webpack-sources3":"npm:webpack-sources@3.2.3","ws":"8.2.3","zod":"3.22.3"},"engines":{"node":">=16.14.0"},"optionalDependencies":{"@next/swc-darwin-arm64":"13.5.6","@next/swc-darwin-x64":"13.5.6","@next/swc-linux-arm64-gnu":"13.5.6","@next/swc-linux-arm64-musl":"13.5.6","@next/swc-linux-x64-gnu":"13.5.6","@next/swc-linux-x64-musl":"13.5.6","@next/swc-win32-arm64-msvc":"13.5.6","@next/swc-win32-ia32-msvc":"13.5.6","@next/swc-win32-x64-msvc":"13.5.6"}}');

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("(middleware)/../../node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=%2Fworkspaces%2Fvosque_2.1a%2Fapps%2Fnextjs%2Fmiddleware.ts&page=%2Fmiddleware&rootDir=%2Fworkspaces%2Fvosque_2.1a%2Fapps%2Fnextjs&matchers=&preferredRegion=&middlewareConfig=e30%3D!"));
/******/ (_ENTRIES = typeof _ENTRIES === "undefined" ? {} : _ENTRIES).middleware_middleware = __webpack_exports__;
/******/ }
]);